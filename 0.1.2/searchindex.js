Search.setIndex({"alltitles": {"API Reference": [[0, null], [156, "api-reference"], [161, "api-reference"], [235, "api-reference"], [248, "api-reference"], [262, "api-reference"], [268, "api-reference"], [272, "api-reference"], [274, "api-reference"]], "API References": [[288, null]], "API References (C++)": [[10, null], [10, null]], "Adjust the concurrency": [[302, "adjust-the-concurrency"]], "Analyzing the Performance": [[297, null]], "Async IO": [[296, "async-io"]], "AsyncQueue": [[248, "asyncqueue"]], "AudioCodec": [[161, "audiocodec"]], "AudioDecoder": [[161, "audiodecoder"]], "AudioEncodeConfig": [[161, "audioencodeconfig"]], "AudioEncoder": [[161, "audioencoder"]], "AudioFrames": [[161, "audioframes"]], "AudioPackets": [[161, "audiopackets"]], "Average Download Time": [[298, "average-download-time"]], "Average Time": [[297, "average-time"]], "Avoid creating intermediate tensors": [[6, "avoid-creating-intermediate-tensors"]], "BSF": [[161, "bsf"]], "Base Type": [[17, "base-type"], [24, "base-type"], [103, "base-type"]], "Basic Usage": [[280, "basic-usage"]], "Batching images": [[293, "batching-images"]], "Best Practices": [[6, null]], "Building a Pipeline": [[284, "building-a-pipeline"]], "Building and Running Pipeline": [[284, null]], "Building with Free-Threaded Python": [[289, "building-with-free-threaded-python"]], "CPUBuffer": [[161, "cpubuffer"]], "CPUStorage": [[161, "cpustorage"]], "CUDABuffer": [[161, "cudabuffer"]], "CUDAConfig": [[161, "cudaconfig"]], "CacheDataLoader": [[156, "cachedataloader"]], "Calling iter on Pipeline": [[284, null]], "Case Studies": [[8, null]], "Chaining task": [[3, "chaining-task"]], "Changing the data format": [[7, "changing-the-data-format"]], "Citation": [[288, "citation"]], "Class CPUStorage": [[17, null]], "Class Demuxer": [[20, null]], "Class Documentation": [[16, "class-documentation"], [17, "class-documentation"], [18, "class-documentation"], [19, "class-documentation"], [20, "class-documentation"], [21, "class-documentation"], [22, "class-documentation"], [23, "class-documentation"], [24, "class-documentation"], [25, "class-documentation"], [26, "class-documentation"], [27, "class-documentation"], [28, "class-documentation"], [29, "class-documentation"], [30, "class-documentation"]], "Class FilterGraph": [[22, null]], "Class Hierarchy": [[79, null], [101, "class-hierarchy"]], "Class InternalError": [[24, null]], "Class Muxer": [[25, null]], "Class PacketSeries": [[26, null]], "Class StreamingDemuxer": [[27, null]], "Class TracingSession": [[28, null]], "Classes": [[13, "classes"], [14, "classes"], [15, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [82, "classes"], [83, "classes"], [155, "classes"], [280, "classes"]], "Classes and Structs": [[78, "classes-and-structs"], [101, "classes-and-structs"]], "Collecting Runtime Statistics": [[285, null]], "Composition of Pipeline": [[303, null]], "Concurrency": [[282, null]], "Concurrency Structure": [[292, "concurrency-structure"]], "Concurrent execution and Future": [[3, "concurrent-execution-and-future"], [281, "concurrent-execution-and-future"]], "Cons": [[294, "cons"]], "Contents": [[288, null]], "Core Concept": [[305, "core-concept"]], "Data Format and Performance": [[7, null]], "Data Readiness": [[297, "data-readiness"], [298, "data-readiness"]], "Data formats": [[13, null]], "DataLoader": [[156, "dataloader"]], "Deciding what to work on": [[299, "deciding-what-to-work-on"]], "DecodeConfig": [[161, "decodeconfig"]], "Decoder": [[161, "decoder"]], "Decoding images in threads": [[293, "decoding-images-in-threads"]], "Define Documentation": [[31, "define-documentation"], [32, "define-documentation"], [33, "define-documentation"], [34, "define-documentation"]], "Define SPDL_DEFAULT_BUFFER_SIZE": [[34, null]], "Define _IS_AUDIO": [[32, null]], "Define _IS_IMAGE": [[33, null]], "Define _IS_VIDEO": [[31, null]], "Defines": [[50, "defines"], [55, "defines"], [78, "defines"], [101, "defines"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/adaptor.h)": [[41, "definition-home-runner-work-spdl-spdl-src-libspdl-core-adaptor-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/bsf.h)": [[42, "definition-home-runner-work-spdl-spdl-src-libspdl-core-bsf-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/buffer.h)": [[43, "definition-home-runner-work-spdl-spdl-src-libspdl-core-buffer-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/codec.h)": [[44, "definition-home-runner-work-spdl-spdl-src-libspdl-core-codec-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/conversion.h)": [[45, "definition-home-runner-work-spdl-spdl-src-libspdl-core-conversion-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/decoder.h)": [[46, "definition-home-runner-work-spdl-spdl-src-libspdl-core-decoder-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/demuxing.h)": [[47, "definition-home-runner-work-spdl-spdl-src-libspdl-core-demuxing-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/encoder.h)": [[48, "definition-home-runner-work-spdl-spdl-src-libspdl-core-encoder-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/filter_graph.h)": [[49, "definition-home-runner-work-spdl-spdl-src-libspdl-core-filter-graph-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/frames.h)": [[50, "definition-home-runner-work-spdl-spdl-src-libspdl-core-frames-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/generator.h)": [[51, "definition-home-runner-work-spdl-spdl-src-libspdl-core-generator-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/muxer.h)": [[52, "definition-home-runner-work-spdl-spdl-src-libspdl-core-muxer-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/packets.h)": [[53, "definition-home-runner-work-spdl-spdl-src-libspdl-core-packets-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/storage.h)": [[54, "definition-home-runner-work-spdl-spdl-src-libspdl-core-storage-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/types.h)": [[55, "definition-home-runner-work-spdl-spdl-src-libspdl-core-types-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/utils.h)": [[56, "definition-home-runner-work-spdl-spdl-src-libspdl-core-utils-h"]], "DemuxConfig": [[161, "demuxconfig"]], "Demuxer": [[161, "demuxer"]], "Dependencies": [[289, "dependencies"]], "Derived Type": [[113, "derived-type"], [114, "derived-type"]], "Development Notes": [[288, null], [295, null]], "Difficulty with composing futures": [[281, "difficulty-with-composing-futures"]], "Directories": [[153, "directories"]], "Directory core": [[37, null]], "Directory libspdl": [[36, null]], "Directory src": [[35, null]], "DistributedDeterministicSampler": [[262, "distributeddeterministicsampler"]], "DistributedRandomSampler": [[262, "distributedrandomsampler"]], "Enum CodecID": [[38, null]], "Enum Documentation": [[38, "enum-documentation"], [39, "enum-documentation"], [40, "enum-documentation"]], "Enum ElemClass": [[40, null]], "Enum MediaType": [[39, null]], "Enums": [[55, "enums"], [78, "enums"], [82, "enums"], [101, "enums"]], "Estimating the maximum gain with caching": [[299, "estimating-the-maximum-gain-with-caching"]], "Example": [[168, null], [174, null], [183, null], [186, null], [210, null], [212, null], [243, null], [244, null], [246, null], [264, null]], "Example - Audio filtering (passthrough)": [[177, null]], "Example - Device option": [[183, null]], "Example - Distributed sampling": [[264, null]], "Example - Multimedia filter": [[177, null]], "Example - Multiple Inputs": [[177, null]], "Example - Multiple outputs": [[177, null]], "Example - One-off demuxing": [[193, null]], "Example - Protocol option": [[183, null]], "Example - Streaming decoding audio": [[176, null]], "Example - Video filtering (passthrough)": [[177, null]], "Example - Weighted sampling": [[264, null]], "Example - decoding the whole video": [[185, null]], "Example - incremental decoding": [[185, null]], "Example:": [[241, null]], "Example: Bulk loading images": [[250, null]], "Example: Change the number of threads internal to FFmpeg decoder": [[201, null]], "Example: Loading headeless audio file (raw PCM)": [[206, null]], "Example: Specifying the decoder for H264": [[201, null]], "Example: Use page-locked memory for faster CUDA transfer.": [[197, null]], "Examples": [[11, null]], "File Hierarchy": [[80, null], [101, "file-hierarchy"]], "File adaptor.h": [[41, null]], "File bsf.h": [[42, null]], "File buffer.h": [[43, null]], "File codec.h": [[44, null]], "File conversion.h": [[45, null]], "File decoder.h": [[46, null]], "File demuxing.h": [[47, null]], "File encoder.h": [[48, null]], "File filter_graph.h": [[49, null]], "File frames.h": [[50, null]], "File generator.h": [[51, null]], "File muxer.h": [[52, null]], "File packets.h": [[53, null]], "File storage.h": [[54, null]], "File types.h": [[55, null]], "File utils.h": [[56, null]], "Files": [[37, "files"], [153, "files"]], "FilterGraph": [[161, "filtergraph"]], "Frames": [[161, "frames"]], "Frequently Asked Questions": [[12, null]], "From PyPI": [[289, "from-pypi"]], "From source": [[289, "from-source"]], "Full API": [[78, null], [101, "full-api"], [153, null]], "Function Documentation": [[57, "function-documentation"], [58, "function-documentation"], [59, "function-documentation"], [60, "function-documentation"], [61, "function-documentation"], [62, "function-documentation"], [63, "function-documentation"], [64, "function-documentation"], [65, "function-documentation"], [66, "function-documentation"], [67, "function-documentation"], [68, "function-documentation"], [69, "function-documentation"], [70, "function-documentation"], [71, "function-documentation"], [72, "function-documentation"], [73, "function-documentation"], [74, "function-documentation"], [75, "function-documentation"], [76, "function-documentation"], [77, "function-documentation"]], "Function spdl::core::cpu_buffer": [[57, null]], "Function spdl::core::create_reference_audio_frame": [[58, null]], "Function spdl::core::create_reference_video_frame": [[60, null]], "Function spdl::core::extract_packets_at_indices": [[67, null]], "Function spdl::core::get_ffmpeg_filters": [[68, null]], "Function spdl::core::get_ffmpeg_log_level": [[75, null]], "Function spdl::core::get_ffmpeg_versions": [[69, null]], "Function spdl::core::init_glog": [[77, null]], "Function spdl::core::init_tracing": [[74, null]], "Function spdl::core::make_demuxer(const std::string&, const SourceAdaptorPtr&, const std::optional<DemuxConfig>&)": [[63, null]], "Function spdl::core::make_demuxer(const std::string_view, const std::optional<DemuxConfig>&)": [[62, null]], "Function spdl::core::make_filter_graph": [[64, null]], "Function spdl::core::register_avdevices": [[73, null]], "Function spdl::core::set_ffmpeg_log_level": [[72, null]], "Function spdl::core::trace_event_begin": [[76, null]], "Function spdl::core::trace_event_end": [[71, null]], "Functions": [[13, "functions"], [14, "functions"], [15, "functions"], [43, "functions"], [45, "functions"], [47, "functions"], [49, "functions"], [50, "functions"], [53, "functions"], [56, "functions"], [78, "functions"], [82, "functions"], [101, "functions"], [154, "functions"], [155, "functions"], [278, "functions"], [279, "functions"], [280, "functions"]], "Getting Started": [[283, null]], "Headspace Analysis": [[299, null]], "Helper functions and data structures": [[260, "helper-functions-and-data-structures"]], "How to use SPDL?": [[305, "how-to-use-spdl"]], "How to work around GIL?": [[12, "how-to-work-around-gil"]], "IO Module": [[290, null]], "Image dataloading": [[14, null]], "ImageCodec": [[161, "imagecodec"]], "ImageDecoder": [[161, "imagedecoder"]], "ImageFrames": [[161, "imageframes"]], "ImageNet": [[268, "imagenet"]], "ImagePackets": [[161, "imagepackets"]], "Imagenet classification": [[15, null]], "Implementation Detail": [[260, "implementation-detail"]], "Implementation detail of Pipeline": [[296, null]], "Implementing Orchestration Mechanism": [[3, null]], "Included By": [[41, "included-by"], [43, "included-by"], [44, "included-by"], [48, "included-by"], [50, "included-by"], [51, "included-by"], [53, "included-by"], [54, "included-by"], [55, "included-by"]], "Includes": [[41, "includes"], [42, "includes"], [43, "includes"], [44, "includes"], [45, "includes"], [46, "includes"], [47, "includes"], [48, "includes"], [49, "includes"], [50, "includes"], [51, "includes"], [52, "includes"], [53, "includes"], [54, "includes"], [55, "includes"], [56, "includes"]], "Inconsistent Performance": [[9, "inconsistent-performance"]], "Inheritance Relationships": [[17, "inheritance-relationships"], [24, "inheritance-relationships"], [103, "inheritance-relationships"], [113, "inheritance-relationships"], [114, "inheritance-relationships"]], "Installation": [[289, null]], "Introduction to Async": [[281, null]], "Introduction to Async I/O": [[2, null]], "IterableWithShuffle": [[262, "iterablewithshuffle"]], "Keeping unnecessary references to Pipeline": [[284, null]], "Libspdl API": [[101, null]], "Loading data from memory": [[7, "loading-data-from-memory"]], "LocalDirectory": [[272, "localdirectory"]], "Make Dataset class composable": [[6, "make-dataset-class-composable"]], "Media I/O": [[305, "media-i-o"]], "MergeIterator": [[274, "mergeiterator"]], "Metrics across Ranks": [[298, null]], "Migrating from PyTorch DataLoader": [[293, null]], "Migration Guide": [[291, null]], "Multi thread preprocessing": [[154, null]], "Multi-processing (combined)": [[286, "multi-processing-combined"]], "Multi-processing (stage)": [[286, "multi-processing-stage"]], "Multi-threading (custom)": [[286, "multi-threading-custom"]], "Multi-threading (default)": [[286, "multi-threading-default"]], "Multi-threading in subprocess": [[286, "multi-threading-in-subprocess"]], "Muxer": [[161, "muxer"]], "Namespace spdl": [[81, null]], "Namespace spdl::core": [[82, null]], "Namespace spdl::core::detail": [[83, null]], "Namespace std": [[84, null]], "Namespaces": [[41, "namespaces"], [42, "namespaces"], [43, "namespaces"], [44, "namespaces"], [45, "namespaces"], [46, "namespaces"], [47, "namespaces"], [48, "namespaces"], [49, "namespaces"], [50, "namespaces"], [51, "namespaces"], [52, "namespaces"], [53, "namespaces"], [54, "namespaces"], [55, "namespaces"], [56, "namespaces"], [78, "namespaces"], [81, "namespaces"], [82, "namespaces"], [101, "namespaces"]], "Nested Relationships": [[109, "nested-relationships"], [110, "nested-relationships"]], "Nested Types": [[109, "nested-types"]], "Noisy Neighbour": [[301, null]], "Noisy Neighbour and multiprocessing": [[9, "noisy-neighbour-and-multiprocessing"]], "Note on clone method": [[186, null]], "Note on component states": [[279, null]], "Note\u2020": [[287, null]], "NpzFile": [[161, "npzfile"]], "NvDecDecoder": [[161, "nvdecdecoder"]], "Optimization Guide": [[300, null]], "Optional Dependencies": [[289, "optional-dependencies"]], "Overview": [[156, "module-spdl.dataloader"], [161, "module-spdl.io"], [235, "module-spdl.io.utils"], [248, "module-spdl.pipeline"], [262, "module-spdl.source"], [268, "module-spdl.source.imagenet"], [272, "module-spdl.source.local_directory"], [274, "module-spdl.source.utils"], [305, null]], "Packets": [[161, "packets"]], "Paradigm Shift": [[292, null]], "Parallelism and Performance": [[9, null]], "Performance & Efficiency": [[305, "performance-efficiency"]], "Performance analysis": [[155, null]], "Performing multiple tasks concurrently": [[3, "performing-multiple-tasks-concurrently"]], "Pipeline": [[248, "pipeline"]], "Pipeline Parallelism": [[286, null]], "Pipeline Speed": [[9, "pipeline-speed"]], "Pipeline Stages": [[287, null]], "PipelineBuilder": [[248, "pipelinebuilder"]], "PipelineFailure": [[248, "pipelinefailure"]], "Pipelining Attempt": [[281, "pipelining-attempt"]], "Practical Example": [[7, "practical-example"]], "Processing": [[287, "processing"]], "Profiling the function": [[302, "profiling-the-function"]], "Program Listing for File adaptor.h": [[85, null]], "Program Listing for File bsf.h": [[86, null]], "Program Listing for File buffer.h": [[87, null]], "Program Listing for File codec.h": [[88, null]], "Program Listing for File conversion.h": [[89, null]], "Program Listing for File decoder.h": [[90, null]], "Program Listing for File demuxing.h": [[91, null]], "Program Listing for File encoder.h": [[92, null]], "Program Listing for File filter_graph.h": [[93, null]], "Program Listing for File frames.h": [[94, null]], "Program Listing for File generator.h": [[95, null]], "Program Listing for File muxer.h": [[96, null]], "Program Listing for File packets.h": [[97, null]], "Program Listing for File storage.h": [[98, null]], "Program Listing for File types.h": [[99, null]], "Program Listing for File utils.h": [[100, null]], "Pros": [[294, "pros"]], "Publications": [[288, "publications"]], "PyTorchDataLoader": [[156, "pytorchdataloader"]], "Queue Get/Put Time": [[297, "queue-get-put-time"]], "Queue vs Async Queue as Buffer": [[296, "queue-vs-async-queue-as-buffer"]], "QueuePerfStats": [[248, "queueperfstats"], [297, "queueperfstats"]], "Requirements": [[289, "requirements"]], "Resolving the Bottleneck": [[302, null]], "Restructure the stages": [[302, "restructure-the-stages"]], "Running Synchronous Functions": [[4, null]], "Running a Pipeline": [[284, "running-a-pipeline"]], "Running multiple pipelines": [[3, "running-multiple-pipelines"], [281, "running-multiple-pipelines"]], "SPDL (Scalable and Performant Data Loading)": [[288, null]], "Sampler": [[302, "sampler"]], "Sink": [[287, "sink"]], "SizedIterable": [[262, "sizediterable"]], "SizedIterableWithShuffle": [[262, "sizediterablewithshuffle"]], "Source": [[13, "source"], [14, "source"], [15, "source"], [154, "source"], [155, "source"], [278, "source"], [279, "source"], [280, "source"], [287, "source"]], "Specifying an executor": [[286, "specifying-an-executor"]], "Stage Concurrency": [[282, "stage-concurrency"]], "StatsQueue": [[248, "statsqueue"]], "Streaming nvdec decoding": [[278, null]], "Streaming video processing": [[279, null]], "Struct AVRational": [[102, null]], "Struct BytesAdaptor": [[103, null]], "Struct CPUBuffer": [[104, null]], "Struct DataInterface": [[105, null]], "Struct DecodeConfig": [[106, null]], "Struct DemuxConfig": [[107, null]], "Struct Documentation": [[102, "struct-documentation"], [103, "struct-documentation"], [104, "struct-documentation"], [105, "struct-documentation"], [106, "struct-documentation"], [107, "struct-documentation"], [108, "struct-documentation"], [109, "struct-documentation"], [110, "struct-documentation"], [111, "struct-documentation"], [112, "struct-documentation"], [113, "struct-documentation"], [114, "struct-documentation"]], "Struct Generator::promise_type": [[110, null]], "Struct RawPacketData": [[112, null]], "Struct SourceAdaptor": [[113, null]], "Struct Storage": [[114, null]], "Subdirectories": [[35, "subdirectories"], [36, "subdirectories"]], "Summary": [[3, "summary"], [293, "summary"], [297, "summary"]], "Switching to SPDL I/O": [[293, "switching-to-spdl-i-o"]], "TaskHook": [[248, "taskhook"]], "TaskPerfStats": [[248, "taskperfstats"], [297, "taskperfstats"]], "TaskStatsHook": [[248, "taskstatshook"]], "Template Class BSF": [[16, null]], "Template Class Codec": [[18, null]], "Template Class Decoder": [[19, null]], "Template Class DecoderImpl": [[29, null]], "Template Class Encoder": [[21, null]], "Template Class EncoderImpl": [[30, null]], "Template Class Frames": [[23, null]], "Template Function spdl::core::clone": [[65, null]], "Template Function spdl::core::convert_frames(const Frames<media> *, std::shared_ptr<CPUStorage>)": [[61, null]], "Template Function spdl::core::convert_frames(const std::vector<const Frames<media> *>&, std::shared_ptr<CPUStorage>)": [[59, null]], "Template Function spdl::core::get_timestamps": [[66, null]], "Template Function spdl::core::trace_counter": [[70, null]], "Template Struct EncodeConfigBase": [[108, null]], "Template Struct Generator": [[109, null]], "Template Struct Packets": [[111, null]], "The Event Loop": [[1, null]], "The Performance of numpy.load on NPZ data": [[7, "the-performance-of-numpy-load-on-npz-data"]], "The Straggler": [[304, null]], "The async and await keywords": [[5, null], [281, "the-async-and-await-keywords"]], "The difference of multi-threading and multi-processing": [[4, "the-difference-of-multi-threading-and-multi-processing"]], "The event loop": [[281, "the-event-loop"]], "The number of tasks executed": [[297, "the-number-of-tasks-executed"]], "Thread Pool Size": [[282, "thread-pool-size"]], "Thread, loop and task": [[296, "thread-loop-and-task"]], "Throughput": [[297, "throughput"]], "Tracer": [[302, "tracer"]], "Typedef AVRational": [[149, null]], "Typedef Documentation": [[115, "typedef-documentation"], [116, "typedef-documentation"], [117, "typedef-documentation"], [118, "typedef-documentation"], [119, "typedef-documentation"], [120, "typedef-documentation"], [121, "typedef-documentation"], [122, "typedef-documentation"], [123, "typedef-documentation"], [124, "typedef-documentation"], [125, "typedef-documentation"], [126, "typedef-documentation"], [127, "typedef-documentation"], [128, "typedef-documentation"], [129, "typedef-documentation"], [130, "typedef-documentation"], [131, "typedef-documentation"], [132, "typedef-documentation"], [133, "typedef-documentation"], [134, "typedef-documentation"], [135, "typedef-documentation"], [136, "typedef-documentation"], [137, "typedef-documentation"], [138, "typedef-documentation"], [139, "typedef-documentation"], [140, "typedef-documentation"], [141, "typedef-documentation"], [142, "typedef-documentation"], [143, "typedef-documentation"], [144, "typedef-documentation"], [145, "typedef-documentation"], [146, "typedef-documentation"], [147, "typedef-documentation"], [148, "typedef-documentation"], [149, "typedef-documentation"], [150, "typedef-documentation"], [151, "typedef-documentation"], [152, "typedef-documentation"]], "Typedef spdl::core::AnyFrames": [[134, null]], "Typedef spdl::core::AnyPackets": [[146, null]], "Typedef spdl::core::AudioCodec": [[119, null]], "Typedef spdl::core::AudioEncodeConfig": [[148, null]], "Typedef spdl::core::AudioEncoder": [[127, null]], "Typedef spdl::core::AudioEncoderPtr": [[124, null]], "Typedef spdl::core::AudioFrames": [[132, null]], "Typedef spdl::core::AudioFramesPtr": [[133, null]], "Typedef spdl::core::AudioPackets": [[142, null]], "Typedef spdl::core::AudioPacketsPtr": [[145, null]], "Typedef spdl::core::CPUBufferPtr": [[117, null]], "Typedef spdl::core::DataInterfacePtr": [[115, null]], "Typedef spdl::core::DecoderPtr": [[121, null]], "Typedef spdl::core::DemuxerPtr": [[123, null]], "Typedef spdl::core::EncoderPtr": [[128, null]], "Typedef spdl::core::FilterGraphPtr": [[129, null]], "Typedef spdl::core::FramesPtr": [[136, null]], "Typedef spdl::core::ImageCodec": [[118, null]], "Typedef spdl::core::ImageFrames": [[131, null]], "Typedef spdl::core::ImageFramesPtr": [[130, null]], "Typedef spdl::core::ImagePackets": [[147, null]], "Typedef spdl::core::ImagePacketsPtr": [[141, null]], "Typedef spdl::core::MuxerPtr": [[138, null]], "Typedef spdl::core::OptionDict": [[152, null]], "Typedef spdl::core::PacketSeriesPtr": [[139, null]], "Typedef spdl::core::PacketsPtr": [[144, null]], "Typedef spdl::core::Rational": [[151, null]], "Typedef spdl::core::SourceAdaptorPtr": [[116, null]], "Typedef spdl::core::StreamingDemuxerPtr": [[122, null]], "Typedef spdl::core::VideoCodec": [[120, null]], "Typedef spdl::core::VideoEncodeConfig": [[150, null]], "Typedef spdl::core::VideoEncoder": [[125, null]], "Typedef spdl::core::VideoEncoderPtr": [[126, null]], "Typedef spdl::core::VideoFrames": [[137, null]], "Typedef spdl::core::VideoFramesPtr": [[135, null]], "Typedef spdl::core::VideoPackets": [[140, null]], "Typedef spdl::core::VideoPacketsPtr": [[143, null]], "Typedefs": [[41, "typedefs"], [43, "typedefs"], [44, "typedefs"], [46, "typedefs"], [47, "typedefs"], [48, "typedefs"], [49, "typedefs"], [50, "typedefs"], [52, "typedefs"], [53, "typedefs"], [55, "typedefs"], [78, "typedefs"], [82, "typedefs"], [101, "typedefs"]], "Understanding the Performance Trend": [[293, "understanding-the-performance-trend"]], "Using GPU video decoder": [[280, "using-gpu-video-decoder"]], "Using PyTorch default CUDA stream": [[200, null]], "Using SharedMemory for faster inter-process-communication": [[4, "using-sharedmemory-for-faster-inter-process-communication"]], "Using run_in_executor to run synchronous function in Async I/O": [[4, "using-run-in-executor-to-run-synchronous-function-in-async-i-o"]], "Video dataloading": [[280, null]], "VideoCodec": [[161, "videocodec"]], "VideoDecoder": [[161, "videodecoder"]], "VideoEncodeConfig": [[161, "videoencodeconfig"]], "VideoEncoder": [[161, "videoencoder"]], "VideoFrames": [[161, "videoframes"]], "VideoPackets": [[161, "videopackets"]], "What SPDL is NOT": [[305, "what-spdl-is-not"]], "What if a function does not release GIL?": [[12, "what-if-a-function-does-not-release-gil"]], "What is SPDL?": [[305, "what-is-spdl"]], "Which functions hold the GIL?": [[12, "which-functions-hold-the-gil"]], "Why Async I/O?": [[12, "why-async-i-o"]], "Why migrate to SPDL?": [[294, null]], "apply_bsf": [[161, "apply-bsf"]], "audio_encode_config": [[161, "audio-encode-config"]], "built_with_cuda": [[235, "built-with-cuda"]], "built_with_nvcodec": [[235, "built-with-nvcodec"]], "built_with_nvjpeg": [[235, "built-with-nvjpeg"]], "cache_iterator": [[248, "cache-iterator"]], "convert_array": [[161, "convert-array"]], "convert_frames": [[161, "convert-frames"]], "cpu_storage": [[161, "cpu-storage"]], "create_reference_audio_frame": [[161, "create-reference-audio-frame"]], "create_reference_video_frame": [[161, "create-reference-video-frame"]], "create_task": [[248, "create-task"]], "cuda_config": [[161, "cuda-config"]], "decode_config": [[161, "decode-config"]], "decode_image_nvjpeg": [[161, "decode-image-nvjpeg"]], "decode_packets": [[161, "decode-packets"]], "decode_packets_nvdec": [[161, "decode-packets-nvdec"]], "demux_audio": [[161, "demux-audio"]], "demux_config": [[161, "demux-config"]], "demux_image": [[161, "demux-image"]], "demux_video": [[161, "demux-video"]], "embed_shuffle": [[274, "embed-shuffle"]], "encode_image": [[161, "encode-image"]], "get_abuffer_desc": [[161, "get-abuffer-desc"]], "get_audio_filter_desc": [[161, "get-audio-filter-desc"]], "get_buffer_desc": [[161, "get-buffer-desc"]], "get_ffmpeg_filters": [[235, "get-ffmpeg-filters"]], "get_ffmpeg_log_level": [[235, "get-ffmpeg-log-level"]], "get_ffmpeg_versions": [[235, "get-ffmpeg-versions"]], "get_filter_desc": [[161, "get-filter-desc"]], "get_mappings": [[268, "get-mappings"]], "get_pytorch_dataloader": [[156, "get-pytorch-dataloader"]], "get_video_filter_desc": [[161, "get-video-filter-desc"]], "imagenet": [[262, "imagenet"]], "iterate_in_subprocess": [[248, "iterate-in-subprocess"]], "load_audio": [[161, "load-audio"]], "load_image": [[161, "load-image"]], "load_image_batch": [[161, "load-image-batch"]], "load_image_batch_nvjpeg": [[161, "load-image-batch-nvjpeg"]], "load_npy": [[161, "load-npy"]], "load_npz": [[161, "load-npz"]], "load_video": [[161, "load-video"]], "local_directory": [[262, "local-directory"]], "nv12_to_bgr": [[161, "nv12-to-bgr"]], "nv12_to_rgb": [[161, "nv12-to-rgb"]], "nvdec_decoder": [[161, "nvdec-decoder"]], "parse_wnid": [[268, "parse-wnid"]], "repeat_source": [[274, "repeat-source"]], "run_pipeline_in_subprocess": [[248, "run-pipeline-in-subprocess"]], "sample_decode_video": [[161, "sample-decode-video"]], "save_image": [[161, "save-image"]], "set_ffmpeg_log_level": [[235, "set-ffmpeg-log-level"]], "spdl.dataloader": [[156, null]], "spdl.dataloader.CacheDataLoader": [[157, null]], "spdl.dataloader.DataLoader": [[158, null]], "spdl.dataloader.PyTorchDataLoader": [[159, null]], "spdl.dataloader.get_pytorch_dataloader": [[160, null]], "spdl.io": [[161, null]], "spdl.io.AudioCodec": [[162, null]], "spdl.io.AudioDecoder": [[163, null]], "spdl.io.AudioEncodeConfig": [[164, null]], "spdl.io.AudioEncoder": [[165, null]], "spdl.io.AudioFrames": [[166, null]], "spdl.io.AudioPackets": [[167, null]], "spdl.io.BSF": [[168, null]], "spdl.io.CPUBuffer": [[169, null]], "spdl.io.CPUStorage": [[170, null]], "spdl.io.CUDABuffer": [[171, null]], "spdl.io.CUDAConfig": [[172, null]], "spdl.io.DecodeConfig": [[173, null]], "spdl.io.Decoder": [[174, null]], "spdl.io.DemuxConfig": [[175, null]], "spdl.io.Demuxer": [[176, null]], "spdl.io.FilterGraph": [[177, null]], "spdl.io.Frames": [[178, null]], "spdl.io.ImageCodec": [[179, null]], "spdl.io.ImageDecoder": [[180, null]], "spdl.io.ImageFrames": [[181, null]], "spdl.io.ImagePackets": [[182, null]], "spdl.io.Muxer": [[183, null]], "spdl.io.NpzFile": [[184, null]], "spdl.io.NvDecDecoder": [[185, null]], "spdl.io.Packets": [[186, null]], "spdl.io.VideoCodec": [[187, null]], "spdl.io.VideoDecoder": [[188, null]], "spdl.io.VideoEncodeConfig": [[189, null]], "spdl.io.VideoEncoder": [[190, null]], "spdl.io.VideoFrames": [[191, null]], "spdl.io.VideoPackets": [[192, null]], "spdl.io.apply_bsf": [[193, null]], "spdl.io.audio_encode_config": [[194, null]], "spdl.io.convert_array": [[195, null]], "spdl.io.convert_frames": [[196, null]], "spdl.io.cpu_storage": [[197, null]], "spdl.io.create_reference_audio_frame": [[198, null]], "spdl.io.create_reference_video_frame": [[199, null]], "spdl.io.cuda_config": [[200, null]], "spdl.io.decode_config": [[201, null]], "spdl.io.decode_image_nvjpeg": [[202, null]], "spdl.io.decode_packets": [[203, null]], "spdl.io.decode_packets_nvdec": [[204, null]], "spdl.io.demux_audio": [[205, null]], "spdl.io.demux_config": [[206, null]], "spdl.io.demux_image": [[207, null]], "spdl.io.demux_video": [[208, null]], "spdl.io.encode_image": [[209, null]], "spdl.io.get_abuffer_desc": [[210, null]], "spdl.io.get_audio_filter_desc": [[211, null]], "spdl.io.get_buffer_desc": [[212, null]], "spdl.io.get_filter_desc": [[213, null]], "spdl.io.get_video_filter_desc": [[214, null]], "spdl.io.load_audio": [[215, null]], "spdl.io.load_image": [[216, null]], "spdl.io.load_image_batch": [[217, null]], "spdl.io.load_image_batch_nvjpeg": [[218, null]], "spdl.io.load_npy": [[219, null]], "spdl.io.load_npz": [[220, null]], "spdl.io.load_video": [[221, null]], "spdl.io.nv12_to_bgr": [[222, null]], "spdl.io.nv12_to_rgb": [[223, null]], "spdl.io.nvdec_decoder": [[224, null]], "spdl.io.sample_decode_video": [[225, null]], "spdl.io.save_image": [[226, null]], "spdl.io.streaming_load_video_nvdec": [[227, null]], "spdl.io.to_jax": [[228, null]], "spdl.io.to_numba": [[229, null]], "spdl.io.to_numpy": [[230, null]], "spdl.io.to_torch": [[231, null]], "spdl.io.transfer_buffer": [[232, null]], "spdl.io.transfer_buffer_cpu": [[233, null]], "spdl.io.transfer_tensor": [[234, null]], "spdl.io.utils": [[235, null]], "spdl.io.utils.built_with_cuda": [[236, null]], "spdl.io.utils.built_with_nvcodec": [[237, null]], "spdl.io.utils.built_with_nvjpeg": [[238, null]], "spdl.io.utils.get_ffmpeg_filters": [[239, null]], "spdl.io.utils.get_ffmpeg_log_level": [[240, null]], "spdl.io.utils.get_ffmpeg_versions": [[241, null]], "spdl.io.utils.set_ffmpeg_log_level": [[242, null]], "spdl.io.utils.trace_counter": [[243, null]], "spdl.io.utils.trace_event": [[244, null]], "spdl.io.utils.trace_gc": [[245, null]], "spdl.io.utils.tracing": [[246, null]], "spdl.io.video_encode_config": [[247, null]], "spdl.pipeline": [[248, null]], "spdl.pipeline.AsyncQueue": [[249, null]], "spdl.pipeline.Pipeline": [[250, null]], "spdl.pipeline.PipelineBuilder": [[251, null]], "spdl.pipeline.PipelineFailure": [[252, null]], "spdl.pipeline.QueuePerfStats": [[253, null]], "spdl.pipeline.StatsQueue": [[254, null]], "spdl.pipeline.TaskHook": [[255, null]], "spdl.pipeline.TaskPerfStats": [[256, null]], "spdl.pipeline.TaskStatsHook": [[257, null]], "spdl.pipeline.cache_iterator": [[258, null]], "spdl.pipeline.create_task": [[259, null]], "spdl.pipeline.iterate_in_subprocess": [[260, null]], "spdl.pipeline.run_pipeline_in_subprocess": [[261, null]], "spdl.source": [[262, null]], "spdl.source.DistributedDeterministicSampler": [[263, null]], "spdl.source.DistributedRandomSampler": [[264, null]], "spdl.source.IterableWithShuffle": [[265, null]], "spdl.source.SizedIterable": [[266, null]], "spdl.source.SizedIterableWithShuffle": [[267, null]], "spdl.source.imagenet": [[268, null]], "spdl.source.imagenet.ImageNet": [[269, null]], "spdl.source.imagenet.get_mappings": [[270, null]], "spdl.source.imagenet.parse_wnid": [[271, null]], "spdl.source.local_directory": [[272, null]], "spdl.source.local_directory.LocalDirectory": [[273, null]], "spdl.source.utils": [[274, null]], "spdl.source.utils.MergeIterator": [[275, null]], "spdl.source.utils.embed_shuffle": [[276, null]], "spdl.source.utils.repeat_source": [[277, null]], "streaming_load_video_nvdec": [[161, "streaming-load-video-nvdec"]], "tl;dr": [[7, null], [9, null]], "to_jax": [[161, "to-jax"]], "to_numba": [[161, "to-numba"]], "to_numpy": [[161, "to-numpy"]], "to_torch": [[161, "to-torch"]], "trace_counter": [[235, "trace-counter"]], "trace_event": [[235, "trace-event"]], "trace_gc": [[235, "trace-gc"]], "tracing": [[235, "tracing"]], "transfer_buffer": [[161, "transfer-buffer"]], "transfer_buffer_cpu": [[161, "transfer-buffer-cpu"]], "transfer_tensor": [[161, "transfer-tensor"]], "utils": [[262, "utils"]], "video_encode_config": [[161, "video-encode-config"]], "\u2020 Note on multi-threading": [[3, null]], "\u2020 The implementation of numpy.load function": [[7, null]], "\u2020 The maximum concurrency of the default executor.": [[4, null]], "\u2020 The underlying multiplexing mechanism.": [[1, null]], "\u2020\u2020 Note on executor": [[3, null]], "\u26a0 Caveats \u26a0": [[284, "caveats"]]}, "docnames": ["api", "async/event_loop", "async/index", "async/problem", "async/sync", "async/unit", "best_practice", "case_studies/data_format", "case_studies/index", "case_studies/parallelism", "cpp", "examples", "faq", "generated/data_formats", "generated/image_dataloading", "generated/imagenet_classification", "generated/libspdl/classspdl_1_1core_1_1BSF", "generated/libspdl/classspdl_1_1core_1_1CPUStorage", "generated/libspdl/classspdl_1_1core_1_1Codec", "generated/libspdl/classspdl_1_1core_1_1Decoder", "generated/libspdl/classspdl_1_1core_1_1Demuxer", "generated/libspdl/classspdl_1_1core_1_1Encoder", "generated/libspdl/classspdl_1_1core_1_1FilterGraph", "generated/libspdl/classspdl_1_1core_1_1Frames", "generated/libspdl/classspdl_1_1core_1_1InternalError", "generated/libspdl/classspdl_1_1core_1_1Muxer", "generated/libspdl/classspdl_1_1core_1_1PacketSeries", "generated/libspdl/classspdl_1_1core_1_1StreamingDemuxer", "generated/libspdl/classspdl_1_1core_1_1TracingSession", "generated/libspdl/classspdl_1_1core_1_1detail_1_1DecoderImpl", "generated/libspdl/classspdl_1_1core_1_1detail_1_1EncoderImpl", "generated/libspdl/define_frames_8h_1a9beaa64113e413112d43491ba5c13670", "generated/libspdl/define_frames_8h_1ac2ad95ac922a100ec27340436eb94940", "generated/libspdl/define_frames_8h_1ac99c83df576500933a3691deb137be6d", "generated/libspdl/define_types_8h_1a3a6c4d7f842d451acf8717ce734385f2", "generated/libspdl/dir__home_runner_work_spdl_spdl_src", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl_core", "generated/libspdl/enum_types_8h_1a5422694500d2203e301dc182e5f63d22", "generated/libspdl/enum_types_8h_1ac22438cfd069f0b1b6a736e73e8d244c", "generated/libspdl/enum_types_8h_1adb4e1adb2b3a59148c2797f903ead06f", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_types.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h", "generated/libspdl/function_buffer_8h_1abb668d9a68635211e5e07bd5038df4aa", "generated/libspdl/function_conversion_8h_1a295b42ad20d2569806d9a15009a44ca8", "generated/libspdl/function_conversion_8h_1a3f08ca7a5c09ab82603e239e50dff4d7", "generated/libspdl/function_conversion_8h_1a87d61e0429716c42f3a5f5e85aad5b61", "generated/libspdl/function_conversion_8h_1ae55bfac2f391205603d77241fc25ca1a", "generated/libspdl/function_demuxing_8h_1a590baa95f8eeb6bc0092c723ff060dd4", "generated/libspdl/function_demuxing_8h_1ad3fdb02bd04d231cd7238e034c27711f", "generated/libspdl/function_filter__graph_8h_1aaa3dba3ab905bd429d038f0bbaa6ce16", "generated/libspdl/function_frames_8h_1a30fbfab5f9ecfb208928ebdaca7f4349", "generated/libspdl/function_packets_8h_1a50ec9c8a7e6ab71e7827df2eb862dc40", "generated/libspdl/function_packets_8h_1ad3bdea22ad439f82174ce27c26bec857", "generated/libspdl/function_utils_8h_1a0aef7b410dcb4075e477b10ba3e71f80", "generated/libspdl/function_utils_8h_1a0ebae69b46f68552c3f64ddc2af67f53", "generated/libspdl/function_utils_8h_1a893d39670b4169063d8f6e3723f4bc11", "generated/libspdl/function_utils_8h_1a8f29c25b417b77e9dfb5a769b418c169", "generated/libspdl/function_utils_8h_1a9b6c16227a1a8445319b487cacb0cd1d", "generated/libspdl/function_utils_8h_1aa1e91130e5d71e8c2a104e4f72296ff3", "generated/libspdl/function_utils_8h_1abbebef003881d8734c12e03a47814732", "generated/libspdl/function_utils_8h_1ae1a3d30b33d837c39c40190e681d37c8", "generated/libspdl/function_utils_8h_1ae27a1cc3e5bfd9997090eb40711cc6c6", "generated/libspdl/function_utils_8h_1af82c781c7484afbad6cbac32ff925793", "generated/libspdl/libspdl_api", "generated/libspdl/libspdl_class", "generated/libspdl/libspdl_file", "generated/libspdl/namespace_spdl", "generated/libspdl/namespace_spdl__core", "generated/libspdl/namespace_spdl__core__detail", "generated/libspdl/namespace_std", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_types.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h", "generated/libspdl/root", "generated/libspdl/structAVRational", "generated/libspdl/structspdl_1_1core_1_1BytesAdaptor", "generated/libspdl/structspdl_1_1core_1_1CPUBuffer", "generated/libspdl/structspdl_1_1core_1_1DataInterface", "generated/libspdl/structspdl_1_1core_1_1DecodeConfig", "generated/libspdl/structspdl_1_1core_1_1DemuxConfig", "generated/libspdl/structspdl_1_1core_1_1EncodeConfigBase", "generated/libspdl/structspdl_1_1core_1_1Generator", "generated/libspdl/structspdl_1_1core_1_1Generator_1_1promise__type", "generated/libspdl/structspdl_1_1core_1_1Packets", "generated/libspdl/structspdl_1_1core_1_1RawPacketData", "generated/libspdl/structspdl_1_1core_1_1SourceAdaptor", "generated/libspdl/structspdl_1_1core_1_1Storage", "generated/libspdl/typedef_adaptor_8h_1adcb670a31326eb24268b384396736cd6", "generated/libspdl/typedef_adaptor_8h_1adfe58c3c3a3d3171c1d69c2e9924f2a7", "generated/libspdl/typedef_buffer_8h_1ab6e5b43497adbd35e9fbc35cf5be7101", "generated/libspdl/typedef_codec_8h_1a606d432c7b033a787f653c4992937e6f", "generated/libspdl/typedef_codec_8h_1a9098e05b01da4afd02090b0d6d7624ba", "generated/libspdl/typedef_codec_8h_1ac7441badce2b2aa467eac09b35d4f81e", "generated/libspdl/typedef_decoder_8h_1a4b0502ea20d1dda958a67deeb582a74b", "generated/libspdl/typedef_demuxing_8h_1a0a7f8c140cd7110dc5f3f6537fae67db", "generated/libspdl/typedef_demuxing_8h_1a4b53016f9b756cc2c2cfbd0e5ad9558b", "generated/libspdl/typedef_encoder_8h_1a0dfcc06d4bbea67c7f45399be8719fa6", "generated/libspdl/typedef_encoder_8h_1a383bf2b0ac1564702f10e3b5f3ef03f6", "generated/libspdl/typedef_encoder_8h_1a39ace4ea741767fa3d802040a9bc22e1", "generated/libspdl/typedef_encoder_8h_1a57216492ce017017647dba9d1f6f2a5d", "generated/libspdl/typedef_encoder_8h_1aacfba556b86e2d663a004b8677567339", "generated/libspdl/typedef_filter__graph_8h_1a29554b40f89e4b227521ff86ccf69b8b", "generated/libspdl/typedef_frames_8h_1a3760130bba382ba7f15df177ca3374c7", "generated/libspdl/typedef_frames_8h_1a53a3c93ef56a4400fabd3a553ab21c4a", "generated/libspdl/typedef_frames_8h_1a5be56dffe8f2b76de9540fb1ad8b83bf", "generated/libspdl/typedef_frames_8h_1a9db8234daca15eb073d00fa762641b62", "generated/libspdl/typedef_frames_8h_1aba3a9982b74abb6be181dc4d247d53fa", "generated/libspdl/typedef_frames_8h_1acb0efeb222082bf955c71c74964d301d", "generated/libspdl/typedef_frames_8h_1ad628496b3863230dd76eeccc4fa66437", "generated/libspdl/typedef_frames_8h_1af1892953097f3723455403752ef79fc5", "generated/libspdl/typedef_muxer_8h_1aaa76352d246819df02bc407729f69dda", "generated/libspdl/typedef_packets_8h_1a331b599d0eceb00ebef166d64623c71a", "generated/libspdl/typedef_packets_8h_1a7be7c9faccc623d12fb33ec966f84b4c", "generated/libspdl/typedef_packets_8h_1a8b9c8b08fcbf891fa939700ecd807ce1", "generated/libspdl/typedef_packets_8h_1a9644f8aa13f0e4db02d8ab60673563a3", "generated/libspdl/typedef_packets_8h_1aa21b44d594bfc132b4252fd2f544a691", "generated/libspdl/typedef_packets_8h_1aad5761fe07714efccc2be969a4397354", "generated/libspdl/typedef_packets_8h_1ab2cc72fb6b931466960bd4b9f812784c", "generated/libspdl/typedef_packets_8h_1ab96da01bb9cc9793e8ae2637e1dd610b", "generated/libspdl/typedef_packets_8h_1af018ade1cd38831c342686abbcb787a8", "generated/libspdl/typedef_types_8h_1a23b168da4cdf96923387b92a43f20038", "generated/libspdl/typedef_types_8h_1a6eff035c271caa5a533987a1e00ad43e", "generated/libspdl/typedef_types_8h_1a8b310bdb98714a971b07aa58f7403529", "generated/libspdl/typedef_types_8h_1a8bd80c8465b1f3e17b564c5ced977a2d", "generated/libspdl/typedef_types_8h_1aa5d8175da6bbcbe93e7191461f7baa20", "generated/libspdl/unabridged_orphan", "generated/multi_thread_preprocessing", "generated/performance_analysis", "generated/spdl.dataloader", "generated/spdl.dataloader.CacheDataLoader", "generated/spdl.dataloader.DataLoader", "generated/spdl.dataloader.PyTorchDataLoader", "generated/spdl.dataloader.get_pytorch_dataloader", "generated/spdl.io", "generated/spdl.io.AudioCodec", "generated/spdl.io.AudioDecoder", "generated/spdl.io.AudioEncodeConfig", "generated/spdl.io.AudioEncoder", "generated/spdl.io.AudioFrames", "generated/spdl.io.AudioPackets", "generated/spdl.io.BSF", "generated/spdl.io.CPUBuffer", "generated/spdl.io.CPUStorage", "generated/spdl.io.CUDABuffer", "generated/spdl.io.CUDAConfig", "generated/spdl.io.DecodeConfig", "generated/spdl.io.Decoder", "generated/spdl.io.DemuxConfig", "generated/spdl.io.Demuxer", "generated/spdl.io.FilterGraph", "generated/spdl.io.Frames", "generated/spdl.io.ImageCodec", "generated/spdl.io.ImageDecoder", "generated/spdl.io.ImageFrames", "generated/spdl.io.ImagePackets", "generated/spdl.io.Muxer", "generated/spdl.io.NpzFile", "generated/spdl.io.NvDecDecoder", "generated/spdl.io.Packets", "generated/spdl.io.VideoCodec", "generated/spdl.io.VideoDecoder", "generated/spdl.io.VideoEncodeConfig", "generated/spdl.io.VideoEncoder", "generated/spdl.io.VideoFrames", "generated/spdl.io.VideoPackets", "generated/spdl.io.apply_bsf", "generated/spdl.io.audio_encode_config", "generated/spdl.io.convert_array", "generated/spdl.io.convert_frames", "generated/spdl.io.cpu_storage", "generated/spdl.io.create_reference_audio_frame", "generated/spdl.io.create_reference_video_frame", "generated/spdl.io.cuda_config", "generated/spdl.io.decode_config", "generated/spdl.io.decode_image_nvjpeg", "generated/spdl.io.decode_packets", "generated/spdl.io.decode_packets_nvdec", "generated/spdl.io.demux_audio", "generated/spdl.io.demux_config", "generated/spdl.io.demux_image", "generated/spdl.io.demux_video", "generated/spdl.io.encode_image", "generated/spdl.io.get_abuffer_desc", "generated/spdl.io.get_audio_filter_desc", "generated/spdl.io.get_buffer_desc", "generated/spdl.io.get_filter_desc", "generated/spdl.io.get_video_filter_desc", "generated/spdl.io.load_audio", "generated/spdl.io.load_image", "generated/spdl.io.load_image_batch", "generated/spdl.io.load_image_batch_nvjpeg", "generated/spdl.io.load_npy", "generated/spdl.io.load_npz", "generated/spdl.io.load_video", "generated/spdl.io.nv12_to_bgr", "generated/spdl.io.nv12_to_rgb", "generated/spdl.io.nvdec_decoder", "generated/spdl.io.sample_decode_video", "generated/spdl.io.save_image", "generated/spdl.io.streaming_load_video_nvdec", "generated/spdl.io.to_jax", "generated/spdl.io.to_numba", "generated/spdl.io.to_numpy", "generated/spdl.io.to_torch", "generated/spdl.io.transfer_buffer", "generated/spdl.io.transfer_buffer_cpu", "generated/spdl.io.transfer_tensor", "generated/spdl.io.utils", "generated/spdl.io.utils.built_with_cuda", "generated/spdl.io.utils.built_with_nvcodec", "generated/spdl.io.utils.built_with_nvjpeg", "generated/spdl.io.utils.get_ffmpeg_filters", "generated/spdl.io.utils.get_ffmpeg_log_level", "generated/spdl.io.utils.get_ffmpeg_versions", "generated/spdl.io.utils.set_ffmpeg_log_level", "generated/spdl.io.utils.trace_counter", "generated/spdl.io.utils.trace_event", "generated/spdl.io.utils.trace_gc", "generated/spdl.io.utils.tracing", "generated/spdl.io.video_encode_config", "generated/spdl.pipeline", "generated/spdl.pipeline.AsyncQueue", "generated/spdl.pipeline.Pipeline", "generated/spdl.pipeline.PipelineBuilder", "generated/spdl.pipeline.PipelineFailure", "generated/spdl.pipeline.QueuePerfStats", "generated/spdl.pipeline.StatsQueue", "generated/spdl.pipeline.TaskHook", "generated/spdl.pipeline.TaskPerfStats", "generated/spdl.pipeline.TaskStatsHook", "generated/spdl.pipeline.cache_iterator", "generated/spdl.pipeline.create_task", "generated/spdl.pipeline.iterate_in_subprocess", "generated/spdl.pipeline.run_pipeline_in_subprocess", "generated/spdl.source", "generated/spdl.source.DistributedDeterministicSampler", "generated/spdl.source.DistributedRandomSampler", "generated/spdl.source.IterableWithShuffle", "generated/spdl.source.SizedIterable", "generated/spdl.source.SizedIterableWithShuffle", "generated/spdl.source.imagenet", "generated/spdl.source.imagenet.ImageNet", "generated/spdl.source.imagenet.get_mappings", "generated/spdl.source.imagenet.parse_wnid", "generated/spdl.source.local_directory", "generated/spdl.source.local_directory.LocalDirectory", "generated/spdl.source.utils", "generated/spdl.source.utils.MergeIterator", "generated/spdl.source.utils.embed_shuffle", "generated/spdl.source.utils.repeat_source", "generated/streaming_nvdec_decoding", "generated/streaming_video_processing", "generated/video_dataloading", "getting_started/async", "getting_started/concurrency", "getting_started/index", "getting_started/intro", "getting_started/logging", "getting_started/parallelism", "getting_started/stages", "index", "installation", "io/index", "migration/index", "migration/paradigm_shift", "migration/pytorch", "migration/why", "notes/index", "notes/pipeline_impl", "optimization_guide/analysis", "optimization_guide/fleet_metrics", "optimization_guide/headspace_analysis", "optimization_guide/index", "optimization_guide/noisy_neighbour", "optimization_guide/resolution", "optimization_guide/setup", "optimization_guide/straggler", "overview"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "async/event_loop.rst", "async/index.rst", "async/problem.rst", "async/sync.rst", "async/unit.rst", "best_practice.rst", "case_studies/data_format.rst", "case_studies/index.rst", "case_studies/parallelism.rst", "cpp.rst", "examples.rst", "faq.rst", "generated/data_formats.rst", "generated/image_dataloading.rst", "generated/imagenet_classification.rst", "generated/libspdl/classspdl_1_1core_1_1BSF.rst", "generated/libspdl/classspdl_1_1core_1_1CPUStorage.rst", "generated/libspdl/classspdl_1_1core_1_1Codec.rst", "generated/libspdl/classspdl_1_1core_1_1Decoder.rst", "generated/libspdl/classspdl_1_1core_1_1Demuxer.rst", "generated/libspdl/classspdl_1_1core_1_1Encoder.rst", "generated/libspdl/classspdl_1_1core_1_1FilterGraph.rst", "generated/libspdl/classspdl_1_1core_1_1Frames.rst", "generated/libspdl/classspdl_1_1core_1_1InternalError.rst", "generated/libspdl/classspdl_1_1core_1_1Muxer.rst", "generated/libspdl/classspdl_1_1core_1_1PacketSeries.rst", "generated/libspdl/classspdl_1_1core_1_1StreamingDemuxer.rst", "generated/libspdl/classspdl_1_1core_1_1TracingSession.rst", "generated/libspdl/classspdl_1_1core_1_1detail_1_1DecoderImpl.rst", "generated/libspdl/classspdl_1_1core_1_1detail_1_1EncoderImpl.rst", "generated/libspdl/define_frames_8h_1a9beaa64113e413112d43491ba5c13670.rst", "generated/libspdl/define_frames_8h_1ac2ad95ac922a100ec27340436eb94940.rst", "generated/libspdl/define_frames_8h_1ac99c83df576500933a3691deb137be6d.rst", "generated/libspdl/define_types_8h_1a3a6c4d7f842d451acf8717ce734385f2.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl_core.rst", "generated/libspdl/enum_types_8h_1a5422694500d2203e301dc182e5f63d22.rst", "generated/libspdl/enum_types_8h_1ac22438cfd069f0b1b6a736e73e8d244c.rst", "generated/libspdl/enum_types_8h_1adb4e1adb2b3a59148c2797f903ead06f.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_types.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h.rst", "generated/libspdl/function_buffer_8h_1abb668d9a68635211e5e07bd5038df4aa.rst", "generated/libspdl/function_conversion_8h_1a295b42ad20d2569806d9a15009a44ca8.rst", "generated/libspdl/function_conversion_8h_1a3f08ca7a5c09ab82603e239e50dff4d7.rst", "generated/libspdl/function_conversion_8h_1a87d61e0429716c42f3a5f5e85aad5b61.rst", "generated/libspdl/function_conversion_8h_1ae55bfac2f391205603d77241fc25ca1a.rst", "generated/libspdl/function_demuxing_8h_1a590baa95f8eeb6bc0092c723ff060dd4.rst", "generated/libspdl/function_demuxing_8h_1ad3fdb02bd04d231cd7238e034c27711f.rst", "generated/libspdl/function_filter__graph_8h_1aaa3dba3ab905bd429d038f0bbaa6ce16.rst", "generated/libspdl/function_frames_8h_1a30fbfab5f9ecfb208928ebdaca7f4349.rst", "generated/libspdl/function_packets_8h_1a50ec9c8a7e6ab71e7827df2eb862dc40.rst", "generated/libspdl/function_packets_8h_1ad3bdea22ad439f82174ce27c26bec857.rst", "generated/libspdl/function_utils_8h_1a0aef7b410dcb4075e477b10ba3e71f80.rst", "generated/libspdl/function_utils_8h_1a0ebae69b46f68552c3f64ddc2af67f53.rst", "generated/libspdl/function_utils_8h_1a893d39670b4169063d8f6e3723f4bc11.rst", "generated/libspdl/function_utils_8h_1a8f29c25b417b77e9dfb5a769b418c169.rst", "generated/libspdl/function_utils_8h_1a9b6c16227a1a8445319b487cacb0cd1d.rst", "generated/libspdl/function_utils_8h_1aa1e91130e5d71e8c2a104e4f72296ff3.rst", "generated/libspdl/function_utils_8h_1abbebef003881d8734c12e03a47814732.rst", "generated/libspdl/function_utils_8h_1ae1a3d30b33d837c39c40190e681d37c8.rst", "generated/libspdl/function_utils_8h_1ae27a1cc3e5bfd9997090eb40711cc6c6.rst", "generated/libspdl/function_utils_8h_1af82c781c7484afbad6cbac32ff925793.rst", "generated/libspdl/libspdl_api.rst", "generated/libspdl/libspdl_class.rst", "generated/libspdl/libspdl_file.rst", "generated/libspdl/namespace_spdl.rst", "generated/libspdl/namespace_spdl__core.rst", "generated/libspdl/namespace_spdl__core__detail.rst", "generated/libspdl/namespace_std.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_types.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h.rst", "generated/libspdl/root.rst", "generated/libspdl/structAVRational.rst", "generated/libspdl/structspdl_1_1core_1_1BytesAdaptor.rst", "generated/libspdl/structspdl_1_1core_1_1CPUBuffer.rst", "generated/libspdl/structspdl_1_1core_1_1DataInterface.rst", "generated/libspdl/structspdl_1_1core_1_1DecodeConfig.rst", "generated/libspdl/structspdl_1_1core_1_1DemuxConfig.rst", "generated/libspdl/structspdl_1_1core_1_1EncodeConfigBase.rst", "generated/libspdl/structspdl_1_1core_1_1Generator.rst", "generated/libspdl/structspdl_1_1core_1_1Generator_1_1promise__type.rst", "generated/libspdl/structspdl_1_1core_1_1Packets.rst", "generated/libspdl/structspdl_1_1core_1_1RawPacketData.rst", "generated/libspdl/structspdl_1_1core_1_1SourceAdaptor.rst", "generated/libspdl/structspdl_1_1core_1_1Storage.rst", "generated/libspdl/typedef_adaptor_8h_1adcb670a31326eb24268b384396736cd6.rst", "generated/libspdl/typedef_adaptor_8h_1adfe58c3c3a3d3171c1d69c2e9924f2a7.rst", "generated/libspdl/typedef_buffer_8h_1ab6e5b43497adbd35e9fbc35cf5be7101.rst", "generated/libspdl/typedef_codec_8h_1a606d432c7b033a787f653c4992937e6f.rst", "generated/libspdl/typedef_codec_8h_1a9098e05b01da4afd02090b0d6d7624ba.rst", "generated/libspdl/typedef_codec_8h_1ac7441badce2b2aa467eac09b35d4f81e.rst", "generated/libspdl/typedef_decoder_8h_1a4b0502ea20d1dda958a67deeb582a74b.rst", "generated/libspdl/typedef_demuxing_8h_1a0a7f8c140cd7110dc5f3f6537fae67db.rst", "generated/libspdl/typedef_demuxing_8h_1a4b53016f9b756cc2c2cfbd0e5ad9558b.rst", "generated/libspdl/typedef_encoder_8h_1a0dfcc06d4bbea67c7f45399be8719fa6.rst", "generated/libspdl/typedef_encoder_8h_1a383bf2b0ac1564702f10e3b5f3ef03f6.rst", "generated/libspdl/typedef_encoder_8h_1a39ace4ea741767fa3d802040a9bc22e1.rst", "generated/libspdl/typedef_encoder_8h_1a57216492ce017017647dba9d1f6f2a5d.rst", "generated/libspdl/typedef_encoder_8h_1aacfba556b86e2d663a004b8677567339.rst", "generated/libspdl/typedef_filter__graph_8h_1a29554b40f89e4b227521ff86ccf69b8b.rst", "generated/libspdl/typedef_frames_8h_1a3760130bba382ba7f15df177ca3374c7.rst", "generated/libspdl/typedef_frames_8h_1a53a3c93ef56a4400fabd3a553ab21c4a.rst", "generated/libspdl/typedef_frames_8h_1a5be56dffe8f2b76de9540fb1ad8b83bf.rst", "generated/libspdl/typedef_frames_8h_1a9db8234daca15eb073d00fa762641b62.rst", "generated/libspdl/typedef_frames_8h_1aba3a9982b74abb6be181dc4d247d53fa.rst", "generated/libspdl/typedef_frames_8h_1acb0efeb222082bf955c71c74964d301d.rst", "generated/libspdl/typedef_frames_8h_1ad628496b3863230dd76eeccc4fa66437.rst", "generated/libspdl/typedef_frames_8h_1af1892953097f3723455403752ef79fc5.rst", "generated/libspdl/typedef_muxer_8h_1aaa76352d246819df02bc407729f69dda.rst", "generated/libspdl/typedef_packets_8h_1a331b599d0eceb00ebef166d64623c71a.rst", "generated/libspdl/typedef_packets_8h_1a7be7c9faccc623d12fb33ec966f84b4c.rst", "generated/libspdl/typedef_packets_8h_1a8b9c8b08fcbf891fa939700ecd807ce1.rst", "generated/libspdl/typedef_packets_8h_1a9644f8aa13f0e4db02d8ab60673563a3.rst", "generated/libspdl/typedef_packets_8h_1aa21b44d594bfc132b4252fd2f544a691.rst", "generated/libspdl/typedef_packets_8h_1aad5761fe07714efccc2be969a4397354.rst", "generated/libspdl/typedef_packets_8h_1ab2cc72fb6b931466960bd4b9f812784c.rst", "generated/libspdl/typedef_packets_8h_1ab96da01bb9cc9793e8ae2637e1dd610b.rst", "generated/libspdl/typedef_packets_8h_1af018ade1cd38831c342686abbcb787a8.rst", "generated/libspdl/typedef_types_8h_1a23b168da4cdf96923387b92a43f20038.rst", "generated/libspdl/typedef_types_8h_1a6eff035c271caa5a533987a1e00ad43e.rst", "generated/libspdl/typedef_types_8h_1a8b310bdb98714a971b07aa58f7403529.rst", "generated/libspdl/typedef_types_8h_1a8bd80c8465b1f3e17b564c5ced977a2d.rst", "generated/libspdl/typedef_types_8h_1aa5d8175da6bbcbe93e7191461f7baa20.rst", "generated/libspdl/unabridged_orphan.rst", "generated/multi_thread_preprocessing.rst", "generated/performance_analysis.rst", "generated/spdl.dataloader.rst", "generated/spdl.dataloader.CacheDataLoader.rst", "generated/spdl.dataloader.DataLoader.rst", "generated/spdl.dataloader.PyTorchDataLoader.rst", "generated/spdl.dataloader.get_pytorch_dataloader.rst", "generated/spdl.io.rst", "generated/spdl.io.AudioCodec.rst", "generated/spdl.io.AudioDecoder.rst", "generated/spdl.io.AudioEncodeConfig.rst", "generated/spdl.io.AudioEncoder.rst", "generated/spdl.io.AudioFrames.rst", "generated/spdl.io.AudioPackets.rst", "generated/spdl.io.BSF.rst", "generated/spdl.io.CPUBuffer.rst", "generated/spdl.io.CPUStorage.rst", "generated/spdl.io.CUDABuffer.rst", "generated/spdl.io.CUDAConfig.rst", "generated/spdl.io.DecodeConfig.rst", "generated/spdl.io.Decoder.rst", "generated/spdl.io.DemuxConfig.rst", "generated/spdl.io.Demuxer.rst", "generated/spdl.io.FilterGraph.rst", "generated/spdl.io.Frames.rst", "generated/spdl.io.ImageCodec.rst", "generated/spdl.io.ImageDecoder.rst", "generated/spdl.io.ImageFrames.rst", "generated/spdl.io.ImagePackets.rst", "generated/spdl.io.Muxer.rst", "generated/spdl.io.NpzFile.rst", "generated/spdl.io.NvDecDecoder.rst", "generated/spdl.io.Packets.rst", "generated/spdl.io.VideoCodec.rst", "generated/spdl.io.VideoDecoder.rst", "generated/spdl.io.VideoEncodeConfig.rst", "generated/spdl.io.VideoEncoder.rst", "generated/spdl.io.VideoFrames.rst", "generated/spdl.io.VideoPackets.rst", "generated/spdl.io.apply_bsf.rst", "generated/spdl.io.audio_encode_config.rst", "generated/spdl.io.convert_array.rst", "generated/spdl.io.convert_frames.rst", "generated/spdl.io.cpu_storage.rst", "generated/spdl.io.create_reference_audio_frame.rst", "generated/spdl.io.create_reference_video_frame.rst", "generated/spdl.io.cuda_config.rst", "generated/spdl.io.decode_config.rst", "generated/spdl.io.decode_image_nvjpeg.rst", "generated/spdl.io.decode_packets.rst", "generated/spdl.io.decode_packets_nvdec.rst", "generated/spdl.io.demux_audio.rst", "generated/spdl.io.demux_config.rst", "generated/spdl.io.demux_image.rst", "generated/spdl.io.demux_video.rst", "generated/spdl.io.encode_image.rst", "generated/spdl.io.get_abuffer_desc.rst", "generated/spdl.io.get_audio_filter_desc.rst", "generated/spdl.io.get_buffer_desc.rst", "generated/spdl.io.get_filter_desc.rst", "generated/spdl.io.get_video_filter_desc.rst", "generated/spdl.io.load_audio.rst", "generated/spdl.io.load_image.rst", "generated/spdl.io.load_image_batch.rst", "generated/spdl.io.load_image_batch_nvjpeg.rst", "generated/spdl.io.load_npy.rst", "generated/spdl.io.load_npz.rst", "generated/spdl.io.load_video.rst", "generated/spdl.io.nv12_to_bgr.rst", "generated/spdl.io.nv12_to_rgb.rst", "generated/spdl.io.nvdec_decoder.rst", "generated/spdl.io.sample_decode_video.rst", "generated/spdl.io.save_image.rst", "generated/spdl.io.streaming_load_video_nvdec.rst", "generated/spdl.io.to_jax.rst", "generated/spdl.io.to_numba.rst", "generated/spdl.io.to_numpy.rst", "generated/spdl.io.to_torch.rst", "generated/spdl.io.transfer_buffer.rst", "generated/spdl.io.transfer_buffer_cpu.rst", "generated/spdl.io.transfer_tensor.rst", "generated/spdl.io.utils.rst", "generated/spdl.io.utils.built_with_cuda.rst", "generated/spdl.io.utils.built_with_nvcodec.rst", "generated/spdl.io.utils.built_with_nvjpeg.rst", "generated/spdl.io.utils.get_ffmpeg_filters.rst", "generated/spdl.io.utils.get_ffmpeg_log_level.rst", "generated/spdl.io.utils.get_ffmpeg_versions.rst", "generated/spdl.io.utils.set_ffmpeg_log_level.rst", "generated/spdl.io.utils.trace_counter.rst", "generated/spdl.io.utils.trace_event.rst", "generated/spdl.io.utils.trace_gc.rst", "generated/spdl.io.utils.tracing.rst", "generated/spdl.io.video_encode_config.rst", "generated/spdl.pipeline.rst", "generated/spdl.pipeline.AsyncQueue.rst", "generated/spdl.pipeline.Pipeline.rst", "generated/spdl.pipeline.PipelineBuilder.rst", "generated/spdl.pipeline.PipelineFailure.rst", "generated/spdl.pipeline.QueuePerfStats.rst", "generated/spdl.pipeline.StatsQueue.rst", "generated/spdl.pipeline.TaskHook.rst", "generated/spdl.pipeline.TaskPerfStats.rst", "generated/spdl.pipeline.TaskStatsHook.rst", "generated/spdl.pipeline.cache_iterator.rst", "generated/spdl.pipeline.create_task.rst", "generated/spdl.pipeline.iterate_in_subprocess.rst", "generated/spdl.pipeline.run_pipeline_in_subprocess.rst", "generated/spdl.source.rst", "generated/spdl.source.DistributedDeterministicSampler.rst", "generated/spdl.source.DistributedRandomSampler.rst", "generated/spdl.source.IterableWithShuffle.rst", "generated/spdl.source.SizedIterable.rst", "generated/spdl.source.SizedIterableWithShuffle.rst", "generated/spdl.source.imagenet.rst", "generated/spdl.source.imagenet.ImageNet.rst", "generated/spdl.source.imagenet.get_mappings.rst", "generated/spdl.source.imagenet.parse_wnid.rst", "generated/spdl.source.local_directory.rst", "generated/spdl.source.local_directory.LocalDirectory.rst", "generated/spdl.source.utils.rst", "generated/spdl.source.utils.MergeIterator.rst", "generated/spdl.source.utils.embed_shuffle.rst", "generated/spdl.source.utils.repeat_source.rst", "generated/streaming_nvdec_decoding.rst", "generated/streaming_video_processing.rst", "generated/video_dataloading.rst", "getting_started/async.rst", "getting_started/concurrency.rst", "getting_started/index.rst", "getting_started/intro.rst", "getting_started/logging.rst", "getting_started/parallelism.rst", "getting_started/stages.rst", "index.rst", "installation.rst", "io/index.rst", "migration/index.rst", "migration/paradigm_shift.rst", "migration/pytorch.rst", "migration/why.rst", "notes/index.rst", "notes/pipeline_impl.rst", "optimization_guide/analysis.rst", "optimization_guide/fleet_metrics.rst", "optimization_guide/headspace_analysis.rst", "optimization_guide/index.rst", "optimization_guide/noisy_neighbour.rst", "optimization_guide/resolution.rst", "optimization_guide/setup.rst", "optimization_guide/straggler.rst", "overview.rst"], "indexentries": {"__getitem__() (npzfile method)": [[184, "spdl.io.NpzFile.__getitem__", false]], "__getitem__() (videoframes method)": [[191, "spdl.io.VideoFrames.__getitem__", false]], "__iter__() (cachedataloader method)": [[157, "spdl.dataloader.CacheDataLoader.__iter__", false]], "__iter__() (dataloader method)": [[158, "spdl.dataloader.DataLoader.__iter__", false]], "__iter__() (datasource method)": [[13, "data_formats.DataSource.__iter__", false]], "__iter__() (distributeddeterministicsampler method)": [[263, "spdl.source.DistributedDeterministicSampler.__iter__", false]], "__iter__() (distributedrandomsampler method)": [[264, "spdl.source.DistributedRandomSampler.__iter__", false]], "__iter__() (imagenet method)": [[269, "spdl.source.imagenet.ImageNet.__iter__", false]], "__iter__() (localdirectory method)": [[273, "spdl.source.local_directory.LocalDirectory.__iter__", false]], "__iter__() (mergeiterator method)": [[275, "spdl.source.utils.MergeIterator.__iter__", false]], "__iter__() (npzfile method)": [[184, "spdl.io.NpzFile.__iter__", false]], "__iter__() (pipeline method)": [[250, "spdl.pipeline.Pipeline.__iter__", false]], "__iter__() (pytorchdataloader method)": [[159, "spdl.dataloader.PyTorchDataLoader.__iter__", false]], "__len__() (audioframes method)": [[166, "spdl.io.AudioFrames.__len__", false]], "__len__() (cachedataloader method)": [[157, "spdl.dataloader.CacheDataLoader.__len__", false]], "__len__() (distributeddeterministicsampler method)": [[263, "spdl.source.DistributedDeterministicSampler.__len__", false]], "__len__() (distributedrandomsampler method)": [[264, "spdl.source.DistributedRandomSampler.__len__", false]], "__len__() (npzfile method)": [[184, "spdl.io.NpzFile.__len__", false]], "__len__() (pytorchdataloader method)": [[159, "spdl.dataloader.PyTorchDataLoader.__len__", false]], "__len__() (videoframes method)": [[191, "spdl.io.VideoFrames.__len__", false]], "__len__() (videopackets method)": [[192, "spdl.io.VideoPackets.__len__", false]], "_is_audio (c macro)": [[32, "c._IS_AUDIO", false]], "_is_image (c macro)": [[33, "c._IS_IMAGE", false]], "_is_video (c macro)": [[31, "c._IS_VIDEO", false]], "add_encode_stream() (muxer method)": [[183, "spdl.io.Muxer.add_encode_stream", false]], "add_frames() (filtergraph method)": [[177, "spdl.io.FilterGraph.add_frames", false]], "add_remux_stream() (muxer method)": [[183, "spdl.io.Muxer.add_remux_stream", false]], "add_sink() (pipelinebuilder method)": [[251, "spdl.pipeline.PipelineBuilder.add_sink", false]], "add_source() (pipelinebuilder method)": [[251, "spdl.pipeline.PipelineBuilder.add_source", false]], "aggregate() (pipelinebuilder method)": [[251, "spdl.pipeline.PipelineBuilder.aggregate", false]], "apply_bsf() (in module spdl.io)": [[193, "spdl.io.apply_bsf", false]], "asyncqueue (class in spdl.pipeline)": [[249, "spdl.pipeline.AsyncQueue", false]], "audio_codec (demuxer property)": [[176, "spdl.io.Demuxer.audio_codec", false]], "audio_encode_config() (in module spdl.io)": [[194, "spdl.io.audio_encode_config", false]], "audio_stream_index (demuxer property)": [[176, "spdl.io.Demuxer.audio_stream_index", false]], "audiocodec (class in spdl.io)": [[162, "spdl.io.AudioCodec", false]], "audiodecoder (class in spdl.io)": [[163, "spdl.io.AudioDecoder", false]], "audioencodeconfig (class in spdl.io)": [[164, "spdl.io.AudioEncodeConfig", false]], "audioencoder (class in spdl.io)": [[165, "spdl.io.AudioEncoder", false]], "audioframes (class in spdl.io)": [[166, "spdl.io.AudioFrames", false]], "audiopackets (class in spdl.io)": [[167, "spdl.io.AudioPackets", false]], "auto_stop() (pipeline method)": [[250, "spdl.pipeline.Pipeline.auto_stop", false]], "ave_get_time (queueperfstats attribute)": [[253, "spdl.pipeline.QueuePerfStats.ave_get_time", false]], "ave_put_time (queueperfstats attribute)": [[253, "spdl.pipeline.QueuePerfStats.ave_put_time", false]], "ave_time (taskperfstats attribute)": [[256, "spdl.pipeline.TaskPerfStats.ave_time", false]], "avrational (c++ struct)": [[102, "_CPPv410AVRational", false]], "avrational (c++ type)": [[149, "_CPPv410AVRational", false]], "avrational::den (c++ member)": [[102, "_CPPv4N10AVRational3denE", false]], "avrational::num (c++ member)": [[102, "_CPPv4N10AVRational3numE", false]], "batch_decode() (in module image_dataloading)": [[14, "image_dataloading.batch_decode", false]], "benchmark() (in module image_dataloading)": [[14, "image_dataloading.benchmark", false]], "benchmark() (in module imagenet_classification)": [[15, "imagenet_classification.benchmark", false]], "benchmark() (in module video_dataloading)": [[280, "video_dataloading.benchmark", false]], "bsf (class in spdl.io)": [[168, "spdl.io.BSF", false]], "build() (pipelinebuilder method)": [[251, "spdl.pipeline.PipelineBuilder.build", false]], "build_components() (in module streaming_video_processing)": [[279, "streaming_video_processing.build_components", false]], "build_pipeline() (in module performance_analysis)": [[155, "performance_analysis.build_pipeline", false]], "built_with_cuda() (in module spdl.io.utils)": [[236, "spdl.io.utils.built_with_cuda", false]], "built_with_nvcodec() (in module spdl.io.utils)": [[237, "spdl.io.utils.built_with_nvcodec", false]], "built_with_nvjpeg() (in module spdl.io.utils)": [[238, "spdl.io.utils.built_with_nvjpeg", false]], "cache_iterator() (in module spdl.pipeline)": [[258, "spdl.pipeline.cache_iterator", false]], "cachedataloader (class in spdl.dataloader)": [[157, "spdl.dataloader.CacheDataLoader", false]], "channel_layout (audiocodec property)": [[162, "spdl.io.AudioCodec.channel_layout", false]], "classification (class in imagenet_classification)": [[15, "imagenet_classification.Classification", false]], "clone() (audioframes method)": [[166, "spdl.io.AudioFrames.clone", false]], "clone() (audiopackets method)": [[167, "spdl.io.AudioPackets.clone", false]], "clone() (imageframes method)": [[181, "spdl.io.ImageFrames.clone", false]], "clone() (imagepackets method)": [[182, "spdl.io.ImagePackets.clone", false]], "clone() (videoframes method)": [[191, "spdl.io.VideoFrames.clone", false]], "clone() (videopackets method)": [[192, "spdl.io.VideoPackets.clone", false]], "close() (muxer method)": [[183, "spdl.io.Muxer.close", false]], "codec (audiopackets property)": [[167, "spdl.io.AudioPackets.codec", false]], "codec (imagepackets property)": [[182, "spdl.io.ImagePackets.codec", false]], "codec (videopackets property)": [[192, "spdl.io.VideoPackets.codec", false]], "convert_array() (in module spdl.io)": [[195, "spdl.io.convert_array", false]], "convert_frames() (in module spdl.io)": [[196, "spdl.io.convert_frames", false]], "cpu_storage() (in module spdl.io)": [[197, "spdl.io.cpu_storage", false]], "cpubuffer (class in spdl.io)": [[169, "spdl.io.CPUBuffer", false]], "cpustorage (class in spdl.io)": [[170, "spdl.io.CPUStorage", false]], "create_reference_audio_frame() (in module spdl.io)": [[198, "spdl.io.create_reference_audio_frame", false]], "create_reference_video_frame() (in module spdl.io)": [[199, "spdl.io.create_reference_video_frame", false]], "create_task() (in module spdl.pipeline)": [[259, "spdl.pipeline.create_task", false]], "cuda_config() (in module spdl.io)": [[200, "spdl.io.cuda_config", false]], "cudabuffer (class in spdl.io)": [[171, "spdl.io.CUDABuffer", false]], "cudaconfig (class in spdl.io)": [[172, "spdl.io.CUDAConfig", false]], "customqueue (class in performance_analysis)": [[155, "performance_analysis.CustomQueue", false]], "customtaskhook (class in performance_analysis)": [[155, "performance_analysis.CustomTaskHook", false]], "data_formats": [[13, "module-data_formats", false]], "dataloader (class in spdl.dataloader)": [[158, "spdl.dataloader.DataLoader", false]], "datasource (class in data_formats)": [[13, "data_formats.DataSource", false]], "decode() (audiodecoder method)": [[163, "spdl.io.AudioDecoder.decode", false]], "decode() (imagedecoder method)": [[180, "spdl.io.ImageDecoder.decode", false]], "decode() (in module performance_analysis)": [[155, "performance_analysis.decode", false]], "decode() (in module streaming_nvdec_decoding)": [[278, "streaming_nvdec_decoding.decode", false]], "decode() (nvdecdecoder method)": [[185, "spdl.io.NvDecDecoder.decode", false]], "decode() (videodecoder method)": [[188, "spdl.io.VideoDecoder.decode", false]], "decode_config() (in module spdl.io)": [[201, "spdl.io.decode_config", false]], "decode_image_nvjpeg() (in module spdl.io)": [[202, "spdl.io.decode_image_nvjpeg", false]], "decode_packets() (in module spdl.io)": [[203, "spdl.io.decode_packets", false]], "decode_packets_nvdec() (in module spdl.io)": [[204, "spdl.io.decode_packets_nvdec", false]], "decode_video() (in module video_dataloading)": [[280, "video_dataloading.decode_video", false]], "decode_video_nvdec() (in module video_dataloading)": [[280, "video_dataloading.decode_video_nvdec", false]], "decodeconfig (class in spdl.io)": [[173, "spdl.io.DecodeConfig", false]], "decoder() (in module spdl.io)": [[174, "spdl.io.Decoder", false]], "demux_audio() (demuxer method)": [[176, "spdl.io.Demuxer.demux_audio", false]], "demux_audio() (in module spdl.io)": [[205, "spdl.io.demux_audio", false]], "demux_config() (in module spdl.io)": [[206, "spdl.io.demux_config", false]], "demux_image() (demuxer method)": [[176, "spdl.io.Demuxer.demux_image", false]], "demux_image() (in module spdl.io)": [[207, "spdl.io.demux_image", false]], "demux_video() (demuxer method)": [[176, "spdl.io.Demuxer.demux_video", false]], "demux_video() (in module spdl.io)": [[208, "spdl.io.demux_video", false]], "demuxconfig (class in spdl.io)": [[175, "spdl.io.DemuxConfig", false]], "demuxer (class in spdl.io)": [[176, "spdl.io.Demuxer", false]], "device_index (cudabuffer property)": [[171, "spdl.io.CUDABuffer.device_index", false]], "disaggregate() (pipelinebuilder method)": [[251, "spdl.pipeline.PipelineBuilder.disaggregate", false]], "distributeddeterministicsampler (class in spdl.source)": [[263, "spdl.source.DistributedDeterministicSampler", false]], "distributedrandomsampler (class in spdl.source)": [[264, "spdl.source.DistributedRandomSampler", false]], "elapsed (perfresult attribute)": [[14, "image_dataloading.PerfResult.elapsed", false], [280, "video_dataloading.PerfResult.elapsed", false]], "elapsed (queueperfstats attribute)": [[253, "spdl.pipeline.QueuePerfStats.elapsed", false]], "embed_shuffle() (in module spdl.source.utils)": [[276, "spdl.source.utils.embed_shuffle", false]], "encode() (audioencoder method)": [[165, "spdl.io.AudioEncoder.encode", false]], "encode() (videoencoder method)": [[190, "spdl.io.VideoEncoder.encode", false]], "encode_image() (in module spdl.io)": [[209, "spdl.io.encode_image", false]], "entrypoint() (in module image_dataloading)": [[14, "image_dataloading.entrypoint", false]], "entrypoint() (in module imagenet_classification)": [[15, "imagenet_classification.entrypoint", false]], "entrypoint() (in module multi_thread_preprocessing)": [[154, "multi_thread_preprocessing.entrypoint", false]], "entrypoint() (in module video_dataloading)": [[280, "video_dataloading.entrypoint", false]], "exp_spdl() (in module multi_thread_preprocessing)": [[154, "multi_thread_preprocessing.exp_spdl", false]], "exp_torch() (in module multi_thread_preprocessing)": [[154, "multi_thread_preprocessing.exp_torch", false]], "filter() (bsf method)": [[168, "spdl.io.BSF.filter", false]], "filtergraph (class in spdl.io)": [[177, "spdl.io.FilterGraph", false]], "flush() (audiodecoder method)": [[163, "spdl.io.AudioDecoder.flush", false]], "flush() (audioencoder method)": [[165, "spdl.io.AudioEncoder.flush", false]], "flush() (bsf method)": [[168, "spdl.io.BSF.flush", false]], "flush() (filtergraph method)": [[177, "spdl.io.FilterGraph.flush", false]], "flush() (muxer method)": [[183, "spdl.io.Muxer.flush", false]], "flush() (nvdecdecoder method)": [[185, "spdl.io.NvDecDecoder.flush", false]], "flush() (videodecoder method)": [[188, "spdl.io.VideoDecoder.flush", false]], "flush() (videoencoder method)": [[190, "spdl.io.VideoEncoder.flush", false]], "forward() (classification method)": [[15, "imagenet_classification.Classification.forward", false]], "forward() (modelbundle method)": [[15, "imagenet_classification.ModelBundle.forward", false]], "forward() (preprocessing method)": [[15, "imagenet_classification.Preprocessing.forward", false]], "frame_rate (videocodec property)": [[187, "spdl.io.VideoCodec.frame_rate", false]], "frame_rate (videopackets property)": [[192, "spdl.io.VideoPackets.frame_rate", false]], "frame_size (audioencoder property)": [[165, "spdl.io.AudioEncoder.frame_size", false]], "frames (class in spdl.io)": [[178, "spdl.io.Frames", false]], "get() (statsqueue method)": [[254, "spdl.pipeline.StatsQueue.get", false]], "get_abuffer_desc() (in module spdl.io)": [[210, "spdl.io.get_abuffer_desc", false]], "get_audio_filter_desc() (in module spdl.io)": [[211, "spdl.io.get_audio_filter_desc", false]], "get_buffer_desc() (in module spdl.io)": [[212, "spdl.io.get_buffer_desc", false]], "get_dataloader() (in module imagenet_classification)": [[15, "imagenet_classification.get_dataloader", false]], "get_decode_func() (in module imagenet_classification)": [[15, "imagenet_classification.get_decode_func", false]], "get_ffmpeg_filters() (in module spdl.io.utils)": [[239, "spdl.io.utils.get_ffmpeg_filters", false]], "get_ffmpeg_log_level() (in module spdl.io.utils)": [[240, "spdl.io.utils.get_ffmpeg_log_level", false]], "get_ffmpeg_versions() (in module spdl.io.utils)": [[241, "spdl.io.utils.get_ffmpeg_versions", false]], "get_filter_desc() (in module spdl.io)": [[213, "spdl.io.get_filter_desc", false]], "get_filter_desc() (in module streaming_video_processing)": [[279, "streaming_video_processing.get_filter_desc", false]], "get_frames() (filtergraph method)": [[177, "spdl.io.FilterGraph.get_frames", false]], "get_item() (pipeline method)": [[250, "spdl.pipeline.Pipeline.get_item", false]], "get_iterator() (pipeline method)": [[250, "spdl.pipeline.Pipeline.get_iterator", false]], "get_mappings() (in module spdl.source.imagenet)": [[270, "spdl.source.imagenet.get_mappings", false]], "get_mock_data() (in module data_formats)": [[13, "data_formats.get_mock_data", false]], "get_model() (in module imagenet_classification)": [[15, "imagenet_classification.get_model", false]], "get_pipeline() (in module data_formats)": [[13, "data_formats.get_pipeline", false]], "get_pipeline() (in module image_dataloading)": [[14, "image_dataloading.get_pipeline", false]], "get_pipeline() (in module video_dataloading)": [[280, "video_dataloading.get_pipeline", false]], "get_pts() (videoframes method)": [[191, "spdl.io.VideoFrames.get_pts", false]], "get_pytorch_dataloader() (in module spdl.dataloader)": [[160, "spdl.dataloader.get_pytorch_dataloader", false]], "get_timestamps() (videoframes method)": [[191, "spdl.io.VideoFrames.get_timestamps", false]], "get_timestamps() (videopackets method)": [[192, "spdl.io.VideoPackets.get_timestamps", false]], "get_video_filter_desc() (in module spdl.io)": [[214, "spdl.io.get_video_filter_desc", false]], "has_audio() (demuxer method)": [[176, "spdl.io.Demuxer.has_audio", false]], "height (imagecodec property)": [[179, "spdl.io.ImageCodec.height", false]], "height (imageframes property)": [[181, "spdl.io.ImageFrames.height", false]], "height (imagepackets property)": [[182, "spdl.io.ImagePackets.height", false]], "height (videocodec property)": [[187, "spdl.io.VideoCodec.height", false]], "height (videoframes property)": [[191, "spdl.io.VideoFrames.height", false]], "height (videopackets property)": [[192, "spdl.io.VideoPackets.height", false]], "image_codec (demuxer property)": [[176, "spdl.io.Demuxer.image_codec", false]], "image_dataloading": [[14, "module-image_dataloading", false]], "imagecodec (class in spdl.io)": [[179, "spdl.io.ImageCodec", false]], "imagedecoder (class in spdl.io)": [[180, "spdl.io.ImageDecoder", false]], "imageframes (class in spdl.io)": [[181, "spdl.io.ImageFrames", false]], "imagenet (class in spdl.source.imagenet)": [[269, "spdl.source.imagenet.ImageNet", false]], "imagenet_classification": [[15, "module-imagenet_classification", false]], "imagepackets (class in spdl.io)": [[182, "spdl.io.ImagePackets", false]], "init() (nvdecdecoder method)": [[185, "spdl.io.NvDecDecoder.init", false]], "interval_stats_callback() (customqueue method)": [[155, "performance_analysis.CustomQueue.interval_stats_callback", false]], "interval_stats_callback() (customtaskhook method)": [[155, "performance_analysis.CustomTaskHook.interval_stats_callback", false]], "interval_stats_callback() (statsqueue method)": [[254, "spdl.pipeline.StatsQueue.interval_stats_callback", false]], "interval_stats_callback() (taskstatshook method)": [[257, "spdl.pipeline.TaskStatsHook.interval_stats_callback", false]], "iterablewithshuffle (class in spdl.source)": [[265, "spdl.source.IterableWithShuffle", false]], "iterate_in_subprocess() (in module spdl.pipeline)": [[260, "spdl.pipeline.iterate_in_subprocess", false]], "load_audio() (in module spdl.io)": [[215, "spdl.io.load_audio", false]], "load_image() (in module spdl.io)": [[216, "spdl.io.load_image", false]], "load_image_batch() (in module spdl.io)": [[217, "spdl.io.load_image_batch", false]], "load_image_batch_nvjpeg() (in module spdl.io)": [[218, "spdl.io.load_image_batch_nvjpeg", false]], "load_npy() (in module data_formats)": [[13, "data_formats.load_npy", false]], "load_npy() (in module spdl.io)": [[219, "spdl.io.load_npy", false]], "load_npy_spdl() (in module data_formats)": [[13, "data_formats.load_npy_spdl", false]], "load_npz() (in module spdl.io)": [[220, "spdl.io.load_npz", false]], "load_torch() (in module data_formats)": [[13, "data_formats.load_torch", false]], "load_video() (in module spdl.io)": [[221, "spdl.io.load_video", false]], "localdirectory (class in spdl.source.local_directory)": [[273, "spdl.source.local_directory.LocalDirectory", false]], "main() (in module data_formats)": [[13, "data_formats.main", false]], "main() (in module performance_analysis)": [[155, "performance_analysis.main", false]], "main() (in module streaming_nvdec_decoding)": [[278, "streaming_nvdec_decoding.main", false]], "main() (in module streaming_video_processing)": [[279, "streaming_video_processing.main", false]], "mergeiterator (class in spdl.source.utils)": [[275, "spdl.source.utils.MergeIterator", false]], "metadata (imageframes property)": [[181, "spdl.io.ImageFrames.metadata", false]], "modelbundle (class in imagenet_classification)": [[15, "imagenet_classification.ModelBundle", false]], "module": [[13, "module-data_formats", false], [14, "module-image_dataloading", false], [15, "module-imagenet_classification", false], [154, "module-multi_thread_preprocessing", false], [155, "module-performance_analysis", false], [156, "module-spdl.dataloader", false], [161, "module-spdl.io", false], [235, "module-spdl.io.utils", false], [248, "module-spdl.pipeline", false], [262, "module-spdl.source", false], [268, "module-spdl.source.imagenet", false], [272, "module-spdl.source.local_directory", false], [274, "module-spdl.source.utils", false], [278, "module-streaming_nvdec_decoding", false], [279, "module-streaming_video_processing", false], [280, "module-video_dataloading", false]], "multi_thread_preprocessing": [[154, "module-multi_thread_preprocessing", false]], "muxer (class in spdl.io)": [[183, "spdl.io.Muxer", false]], "name (audiocodec property)": [[162, "spdl.io.AudioCodec.name", false]], "name (imagecodec property)": [[179, "spdl.io.ImageCodec.name", false]], "name (videocodec property)": [[187, "spdl.io.VideoCodec.name", false]], "npzfile (class in spdl.io)": [[184, "spdl.io.NpzFile", false]], "num_batches (perfresult attribute)": [[14, "image_dataloading.PerfResult.num_batches", false], [280, "video_dataloading.PerfResult.num_batches", false]], "num_channels (audiocodec property)": [[162, "spdl.io.AudioCodec.num_channels", false]], "num_channels (audioframes property)": [[166, "spdl.io.AudioFrames.num_channels", false]], "num_channels (audiopackets property)": [[167, "spdl.io.AudioPackets.num_channels", false]], "num_failures (taskperfstats attribute)": [[256, "spdl.pipeline.TaskPerfStats.num_failures", false]], "num_frames (audioframes property)": [[166, "spdl.io.AudioFrames.num_frames", false]], "num_frames (perfresult attribute)": [[14, "image_dataloading.PerfResult.num_frames", false], [280, "video_dataloading.PerfResult.num_frames", false]], "num_frames (videoframes property)": [[191, "spdl.io.VideoFrames.num_frames", false]], "num_items (queueperfstats attribute)": [[253, "spdl.pipeline.QueuePerfStats.num_items", false]], "num_planes (imageframes property)": [[181, "spdl.io.ImageFrames.num_planes", false]], "num_planes (videoframes property)": [[191, "spdl.io.VideoFrames.num_planes", false]], "num_tasks (taskperfstats attribute)": [[256, "spdl.pipeline.TaskPerfStats.num_tasks", false]], "nv12_to_bgr() (in module spdl.io)": [[222, "spdl.io.nv12_to_bgr", false]], "nv12_to_rgb() (in module spdl.io)": [[223, "spdl.io.nv12_to_rgb", false]], "nvdec_decoder() (in module spdl.io)": [[224, "spdl.io.nvdec_decoder", false]], "nvdecdecoder (class in spdl.io)": [[185, "spdl.io.NvDecDecoder", false]], "occupancy_rate (queueperfstats attribute)": [[253, "spdl.pipeline.QueuePerfStats.occupancy_rate", false]], "open() (muxer method)": [[183, "spdl.io.Muxer.open", false]], "packets (class in spdl.io)": [[186, "spdl.io.Packets", false]], "parse_args() (in module performance_analysis)": [[155, "performance_analysis.parse_args", false]], "parse_args() (in module streaming_nvdec_decoding)": [[278, "streaming_nvdec_decoding.parse_args", false]], "parse_args() (in module streaming_video_processing)": [[279, "streaming_video_processing.parse_args", false]], "parse_wnid() (in module spdl.source.imagenet)": [[271, "spdl.source.imagenet.parse_wnid", false]], "performance_analysis": [[155, "module-performance_analysis", false]], "perfresult (class in image_dataloading)": [[14, "image_dataloading.PerfResult", false]], "perfresult (class in video_dataloading)": [[280, "video_dataloading.PerfResult", false]], "pipe() (pipelinebuilder method)": [[251, "spdl.pipeline.PipelineBuilder.pipe", false]], "pipeline (class in spdl.pipeline)": [[250, "spdl.pipeline.Pipeline", false]], "pipelinebuilder (class in spdl.pipeline)": [[251, "spdl.pipeline.PipelineBuilder", false]], "pipelinefailure": [[252, "spdl.pipeline.PipelineFailure", false]], "pix_fmt (imagecodec property)": [[179, "spdl.io.ImageCodec.pix_fmt", false]], "pix_fmt (imageframes property)": [[181, "spdl.io.ImageFrames.pix_fmt", false]], "pix_fmt (imagepackets property)": [[182, "spdl.io.ImagePackets.pix_fmt", false]], "pix_fmt (videocodec property)": [[187, "spdl.io.VideoCodec.pix_fmt", false]], "pix_fmt (videoframes property)": [[191, "spdl.io.VideoFrames.pix_fmt", false]], "pix_fmt (videopackets property)": [[192, "spdl.io.VideoPackets.pix_fmt", false]], "preprocessing (class in imagenet_classification)": [[15, "imagenet_classification.Preprocessing", false]], "process() (in module streaming_video_processing)": [[279, "streaming_video_processing.process", false]], "pts (imageframes property)": [[181, "spdl.io.ImageFrames.pts", false]], "put() (statsqueue method)": [[254, "spdl.pipeline.StatsQueue.put", false]], "pytorchdataloader (class in spdl.dataloader)": [[159, "spdl.dataloader.PyTorchDataLoader", false]], "qps (queueperfstats property)": [[253, "spdl.pipeline.QueuePerfStats.qps", false]], "queueperfstats (class in spdl.pipeline)": [[253, "spdl.pipeline.QueuePerfStats", false]], "repeat_source() (in module spdl.source.utils)": [[277, "spdl.source.utils.repeat_source", false]], "run() (in module streaming_nvdec_decoding)": [[278, "streaming_nvdec_decoding.run", false]], "run_dataloader() (in module multi_thread_preprocessing)": [[154, "multi_thread_preprocessing.run_dataloader", false]], "run_pipeline() (in module data_formats)": [[13, "data_formats.run_pipeline", false]], "run_pipeline_in_subprocess() (in module spdl.pipeline)": [[261, "spdl.pipeline.run_pipeline_in_subprocess", false]], "sample_aspect_ratio (imagecodec property)": [[179, "spdl.io.ImageCodec.sample_aspect_ratio", false]], "sample_aspect_ratio (videocodec property)": [[187, "spdl.io.VideoCodec.sample_aspect_ratio", false]], "sample_decode_video() (in module spdl.io)": [[225, "spdl.io.sample_decode_video", false]], "sample_fmt (audiocodec property)": [[162, "spdl.io.AudioCodec.sample_fmt", false]], "sample_fmt (audioframes property)": [[166, "spdl.io.AudioFrames.sample_fmt", false]], "sample_rate (audiocodec property)": [[162, "spdl.io.AudioCodec.sample_rate", false]], "sample_rate (audioframes property)": [[166, "spdl.io.AudioFrames.sample_rate", false]], "sample_rate (audiopackets property)": [[167, "spdl.io.AudioPackets.sample_rate", false]], "save_image() (in module spdl.io)": [[226, "spdl.io.save_image", false]], "set_ffmpeg_log_level() (in module spdl.io.utils)": [[242, "spdl.io.utils.set_ffmpeg_log_level", false]], "shuffle() (distributedrandomsampler method)": [[264, "spdl.source.DistributedRandomSampler.shuffle", false]], "shuffle() (imagenet method)": [[269, "spdl.source.imagenet.ImageNet.shuffle", false]], "shuffle() (iterablewithshuffle method)": [[265, "spdl.source.IterableWithShuffle.shuffle", false]], "shuffle() (localdirectory method)": [[273, "spdl.source.local_directory.LocalDirectory.shuffle", false]], "shuffle() (sizediterablewithshuffle method)": [[267, "spdl.source.SizedIterableWithShuffle.shuffle", false]], "sizediterable (class in spdl.source)": [[266, "spdl.source.SizedIterable", false]], "sizediterablewithshuffle (class in spdl.source)": [[267, "spdl.source.SizedIterableWithShuffle", false]], "source() (in module image_dataloading)": [[14, "image_dataloading.source", false]], "source() (in module video_dataloading)": [[280, "video_dataloading.source", false]], "spdl.dataloader": [[156, "module-spdl.dataloader", false]], "spdl.io": [[161, "module-spdl.io", false]], "spdl.io.utils": [[235, "module-spdl.io.utils", false]], "spdl.pipeline": [[248, "module-spdl.pipeline", false]], "spdl.source": [[262, "module-spdl.source", false]], "spdl.source.imagenet": [[268, "module-spdl.source.imagenet", false]], "spdl.source.local_directory": [[272, "module-spdl.source.local_directory", false]], "spdl.source.utils": [[274, "module-spdl.source.utils", false]], "spdl::core::anyframes (c++ type)": [[134, "_CPPv4N4spdl4core9AnyFramesE", false]], "spdl::core::anypackets (c++ type)": [[146, "_CPPv4N4spdl4core10AnyPacketsE", false]], "spdl::core::audiocodec (c++ type)": [[119, "_CPPv4N4spdl4core10AudioCodecE", false]], "spdl::core::audioencodeconfig (c++ type)": [[148, "_CPPv4N4spdl4core17AudioEncodeConfigE", false]], "spdl::core::audioencoder (c++ type)": [[127, "_CPPv4N4spdl4core12AudioEncoderE", false]], "spdl::core::audioencoderptr (c++ type)": [[124, "_CPPv4N4spdl4core15AudioEncoderPtrE", false]], "spdl::core::audioframes (c++ type)": [[132, "_CPPv4N4spdl4core11AudioFramesE", false]], "spdl::core::audioframesptr (c++ type)": [[133, "_CPPv4N4spdl4core14AudioFramesPtrE", false]], "spdl::core::audiopackets (c++ type)": [[142, "_CPPv4N4spdl4core12AudioPacketsE", false]], "spdl::core::audiopacketsptr (c++ type)": [[145, "_CPPv4N4spdl4core15AudioPacketsPtrE", false]], "spdl::core::bsf (c++ class)": [[16, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", false]], "spdl::core::bsf::bsf (c++ function)": [[16, "_CPPv4N4spdl4core3BSF3BSFERK3BSF", false], [16, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", false], [16, "_CPPv4N4spdl4core3BSF3BSFERR3BSF", false]], "spdl::core::bsf::filter (c++ function)": [[16, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", false]], "spdl::core::bsf::flush (c++ function)": [[16, "_CPPv4N4spdl4core3BSF5flushEv", false]], "spdl::core::bsf::get_codec (c++ function)": [[16, "_CPPv4NK4spdl4core3BSF9get_codecEv", false]], "spdl::core::bsf::operator= (c++ function)": [[16, "_CPPv4N4spdl4core3BSFaSERK3BSF", false], [16, "_CPPv4N4spdl4core3BSFaSERR3BSF", false]], "spdl::core::bsf::~bsf (c++ function)": [[16, "_CPPv4N4spdl4core3BSFD0Ev", false]], "spdl::core::bytesadaptor (c++ struct)": [[103, "_CPPv4N4spdl4core12BytesAdaptorE", false]], "spdl::core::bytesadaptor::get_interface (c++ function)": [[103, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", false]], "spdl::core::clone (c++ function)": [[65, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", false]], "spdl::core::codec (c++ class)": [[18, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", false]], "spdl::core::codec::codec (c++ function)": [[18, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", false], [18, "_CPPv4N4spdl4core5Codec5CodecERK5CodecI5mediaE", false], [18, "_CPPv4N4spdl4core5Codec5CodecERR5CodecI5mediaE", false], [18, "_CPPv4N4spdl4core5Codec5CodecEv", false]], "spdl::core::codec::get_bit_rate (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec12get_bit_rateEv", false]], "spdl::core::codec::get_bits_per_sample (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec19get_bits_per_sampleEv", false]], "spdl::core::codec::get_channel_layout (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec18get_channel_layoutEv", false]], "spdl::core::codec::get_codec_id (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec12get_codec_idEv", false]], "spdl::core::codec::get_frame_rate (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec14get_frame_rateEv", false]], "spdl::core::codec::get_height (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec10get_heightEv", false]], "spdl::core::codec::get_name (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec8get_nameEv", false]], "spdl::core::codec::get_num_channels (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec16get_num_channelsEv", false]], "spdl::core::codec::get_parameters (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec14get_parametersEv", false]], "spdl::core::codec::get_pix_fmt (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec11get_pix_fmtEv", false]], "spdl::core::codec::get_sample_aspect_ratio (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec23get_sample_aspect_ratioEv", false]], "spdl::core::codec::get_sample_fmt (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec14get_sample_fmtEv", false]], "spdl::core::codec::get_sample_rate (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec15get_sample_rateEv", false]], "spdl::core::codec::get_time_base (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec13get_time_baseEv", false]], "spdl::core::codec::get_width (c++ function)": [[18, "_CPPv4NK4spdl4core5Codec9get_widthEv", false]], "spdl::core::codec::operator= (c++ function)": [[18, "_CPPv4N4spdl4core5CodecaSERK5CodecI5mediaE", false], [18, "_CPPv4N4spdl4core5CodecaSERR5CodecI5mediaE", false]], "spdl::core::codec::~codec (c++ function)": [[18, "_CPPv4N4spdl4core5CodecD0Ev", false]], "spdl::core::codecid (c++ enum)": [[38, "_CPPv4N4spdl4core7CodecIDE", false]], "spdl::core::codecid::av1 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID3AV1E", false]], "spdl::core::codecid::h264 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID4H264E", false]], "spdl::core::codecid::hevc (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID4HEVCE", false]], "spdl::core::codecid::mjpeg (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID5MJPEGE", false]], "spdl::core::codecid::mpeg1video (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID10MPEG1VIDEOE", false]], "spdl::core::codecid::mpeg2video (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID10MPEG2VIDEOE", false]], "spdl::core::codecid::mpeg4 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID5MPEG4E", false]], "spdl::core::codecid::vc1 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID3VC1E", false]], "spdl::core::codecid::vp8 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID3VP8E", false]], "spdl::core::codecid::vp9 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID3VP9E", false]], "spdl::core::codecid::wmv3 (c++ enumerator)": [[38, "_CPPv4N4spdl4core7CodecID4WMV3E", false]], "spdl::core::convert_frames (c++ function)": [[59, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", false], [61, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", false]], "spdl::core::cpu_buffer (c++ function)": [[57, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", false]], "spdl::core::cpubuffer (c++ struct)": [[104, "_CPPv4N4spdl4core9CPUBufferE", false]], "spdl::core::cpubuffer::data (c++ function)": [[104, "_CPPv4N4spdl4core9CPUBuffer4dataEv", false]], "spdl::core::cpubuffer::depth (c++ member)": [[104, "_CPPv4N4spdl4core9CPUBuffer5depthE", false]], "spdl::core::cpubuffer::elem_class (c++ member)": [[104, "_CPPv4N4spdl4core9CPUBuffer10elem_classE", false]], "spdl::core::cpubuffer::shape (c++ member)": [[104, "_CPPv4N4spdl4core9CPUBuffer5shapeE", false]], "spdl::core::cpubuffer::storage (c++ member)": [[104, "_CPPv4N4spdl4core9CPUBuffer7storageE", false]], "spdl::core::cpubufferptr (c++ type)": [[117, "_CPPv4N4spdl4core12CPUBufferPtrE", false]], "spdl::core::cpustorage (c++ class)": [[17, "_CPPv4N4spdl4core10CPUStorageE", false]], "spdl::core::cpustorage::cpustorage (c++ function)": [[17, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", false], [17, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERK10CPUStorage", false], [17, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERR10CPUStorage", false], [17, "_CPPv4N4spdl4core10CPUStorage10CPUStorageEv", false]], "spdl::core::cpustorage::data (c++ function)": [[17, "_CPPv4NK4spdl4core10CPUStorage4dataEv", false]], "spdl::core::cpustorage::is_pinned (c++ function)": [[17, "_CPPv4NK4spdl4core10CPUStorage9is_pinnedEv", false]], "spdl::core::cpustorage::operator= (c++ function)": [[17, "_CPPv4N4spdl4core10CPUStorageaSERK10CPUStorage", false], [17, "_CPPv4N4spdl4core10CPUStorageaSERR10CPUStorage", false]], "spdl::core::cpustorage::size (c++ member)": [[17, "_CPPv4N4spdl4core10CPUStorage4sizeE", false]], "spdl::core::cpustorage::~cpustorage (c++ function)": [[17, "_CPPv4N4spdl4core10CPUStorageD0Ev", false]], "spdl::core::create_reference_audio_frame (c++ function)": [[58, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", false]], "spdl::core::create_reference_video_frame (c++ function)": [[60, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", false]], "spdl::core::datainterface (c++ struct)": [[105, "_CPPv4N4spdl4core13DataInterfaceE", false]], "spdl::core::datainterface::get_fmt_ctx (c++ function)": [[105, "_CPPv4N4spdl4core13DataInterface11get_fmt_ctxEv", false]], "spdl::core::datainterface::~datainterface (c++ function)": [[105, "_CPPv4N4spdl4core13DataInterfaceD0Ev", false]], "spdl::core::datainterfaceptr (c++ type)": [[115, "_CPPv4N4spdl4core16DataInterfacePtrE", false]], "spdl::core::decodeconfig (c++ struct)": [[106, "_CPPv4N4spdl4core12DecodeConfigE", false]], "spdl::core::decodeconfig::decoder (c++ member)": [[106, "_CPPv4N4spdl4core12DecodeConfig7decoderE", false]], "spdl::core::decodeconfig::decoder_options (c++ member)": [[106, "_CPPv4N4spdl4core12DecodeConfig15decoder_optionsE", false]], "spdl::core::decoder (c++ class)": [[19, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", false]], "spdl::core::decoder::decode (c++ function)": [[19, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", false]], "spdl::core::decoder::decode_and_flush (c++ function)": [[19, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", false]], "spdl::core::decoder::decoder (c++ function)": [[19, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", false], [19, "_CPPv4N4spdl4core7Decoder7DecoderERK7Decoder", false], [19, "_CPPv4N4spdl4core7Decoder7DecoderERR7Decoder", false]], "spdl::core::decoder::flush (c++ function)": [[19, "_CPPv4N4spdl4core7Decoder5flushEv", false]], "spdl::core::decoder::operator= (c++ function)": [[19, "_CPPv4N4spdl4core7DecoderaSERK7Decoder", false], [19, "_CPPv4N4spdl4core7DecoderaSERR7Decoder", false]], "spdl::core::decoder::~decoder (c++ function)": [[19, "_CPPv4N4spdl4core7DecoderD0Ev", false]], "spdl::core::decoderptr (c++ type)": [[121, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", false]], "spdl::core::demuxconfig (c++ struct)": [[107, "_CPPv4N4spdl4core11DemuxConfigE", false]], "spdl::core::demuxconfig::buffer_size (c++ member)": [[107, "_CPPv4N4spdl4core11DemuxConfig11buffer_sizeE", false]], "spdl::core::demuxconfig::format (c++ member)": [[107, "_CPPv4N4spdl4core11DemuxConfig6formatE", false]], "spdl::core::demuxconfig::format_options (c++ member)": [[107, "_CPPv4N4spdl4core11DemuxConfig14format_optionsE", false]], "spdl::core::demuxer (c++ class)": [[20, "_CPPv4N4spdl4core7DemuxerE", false]], "spdl::core::demuxer::demux_window (c++ function)": [[20, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", false]], "spdl::core::demuxer::demuxer (c++ function)": [[20, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", false]], "spdl::core::demuxer::get_default_codec (c++ function)": [[20, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", false]], "spdl::core::demuxer::get_default_stream_index (c++ function)": [[20, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", false]], "spdl::core::demuxer::has_audio (c++ function)": [[20, "_CPPv4NK4spdl4core7Demuxer9has_audioEv", false]], "spdl::core::demuxer::streaming_demux (c++ function)": [[20, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", false]], "spdl::core::demuxer::~demuxer (c++ function)": [[20, "_CPPv4N4spdl4core7DemuxerD0Ev", false]], "spdl::core::demuxerptr (c++ type)": [[123, "_CPPv4N4spdl4core10DemuxerPtrE", false]], "spdl::core::detail::decoderimpl (c++ class)": [[29, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", false]], "spdl::core::detail::encoderimpl (c++ class)": [[30, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", false]], "spdl::core::elemclass (c++ enum)": [[40, "_CPPv4N4spdl4core9ElemClassE", false]], "spdl::core::elemclass::float (c++ enumerator)": [[40, "_CPPv4N4spdl4core9ElemClass5FloatE", false]], "spdl::core::elemclass::int (c++ enumerator)": [[40, "_CPPv4N4spdl4core9ElemClass3IntE", false]], "spdl::core::elemclass::uint (c++ enumerator)": [[40, "_CPPv4N4spdl4core9ElemClass4UIntE", false]], "spdl::core::encodeconfigbase (c++ struct)": [[108, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", false]], "spdl::core::encoder (c++ class)": [[21, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", false]], "spdl::core::encoder::encode (c++ function)": [[21, "_CPPv4N4spdl4core7Encoder6encodeERRK9FramesPtrI5mediaE", false]], "spdl::core::encoder::encoder (c++ function)": [[21, "_CPPv4N4spdl4core7Encoder7EncoderEPN6detail11EncoderImplI5mediaEE", false], [21, "_CPPv4N4spdl4core7Encoder7EncoderERK7EncoderI5mediaE", false], [21, "_CPPv4N4spdl4core7Encoder7EncoderERR7EncoderI5mediaE", false]], "spdl::core::encoder::flush (c++ function)": [[21, "_CPPv4N4spdl4core7Encoder5flushEv", false]], "spdl::core::encoder::get_frame_size (c++ function)": [[21, "_CPPv4NK4spdl4core7Encoder14get_frame_sizeEv", false]], "spdl::core::encoder::operator= (c++ function)": [[21, "_CPPv4N4spdl4core7EncoderaSERK7EncoderI5mediaE", false], [21, "_CPPv4N4spdl4core7EncoderaSERR7EncoderI5mediaE", false]], "spdl::core::encoder::~encoder (c++ function)": [[21, "_CPPv4N4spdl4core7EncoderD0Ev", false]], "spdl::core::encoderptr (c++ type)": [[128, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", false]], "spdl::core::extract_packets_at_indices (c++ function)": [[67, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", false]], "spdl::core::filtergraph (c++ class)": [[22, "_CPPv4N4spdl4core11FilterGraphE", false]], "spdl::core::filtergraph::add_frames (c++ function)": [[22, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", false]], "spdl::core::filtergraph::dump (c++ function)": [[22, "_CPPv4NK4spdl4core11FilterGraph4dumpEv", false]], "spdl::core::filtergraph::filtergraph (c++ function)": [[22, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERK11FilterGraph", false], [22, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", false], [22, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERR11FilterGraph", false]], "spdl::core::filtergraph::flush (c++ function)": [[22, "_CPPv4N4spdl4core11FilterGraph5flushEv", false]], "spdl::core::filtergraph::get_frames (c++ function)": [[22, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", false]], "spdl::core::filtergraph::operator= (c++ function)": [[22, "_CPPv4N4spdl4core11FilterGraphaSERK11FilterGraph", false], [22, "_CPPv4N4spdl4core11FilterGraphaSERR11FilterGraph", false]], "spdl::core::filtergraph::~filtergraph (c++ function)": [[22, "_CPPv4N4spdl4core11FilterGraphD0Ev", false]], "spdl::core::filtergraphptr (c++ type)": [[129, "_CPPv4N4spdl4core14FilterGraphPtrE", false]], "spdl::core::frames (c++ class)": [[23, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", false]], "spdl::core::framesptr (c++ type)": [[136, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", false]], "spdl::core::generator (c++ struct)": [[109, "_CPPv4I0EN4spdl4core9GeneratorE", false]], "spdl::core::generator::generator (c++ function)": [[109, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", false], [109, "_CPPv4N4spdl4core9Generator9GeneratorERK9Generator", false], [109, "_CPPv4N4spdl4core9Generator9GeneratorERR9Generator", false]], "spdl::core::generator::h_ (c++ member)": [[109, "_CPPv4N4spdl4core9Generator2h_E", false]], "spdl::core::generator::handle_type (c++ type)": [[109, "_CPPv4N4spdl4core9Generator11handle_typeE", false]], "spdl::core::generator::operator bool (c++ function)": [[109, "_CPPv4N4spdl4core9GeneratorcvbEv", false]], "spdl::core::generator::operator() (c++ function)": [[109, "_CPPv4N4spdl4core9GeneratorclEv", false]], "spdl::core::generator::operator= (c++ function)": [[109, "_CPPv4N4spdl4core9GeneratoraSERK9Generator", false], [109, "_CPPv4N4spdl4core9GeneratoraSERR9Generator", false]], "spdl::core::generator::promise_type (c++ struct)": [[109, "_CPPv4N4spdl4core9Generator12promise_typeE", false], [110, "_CPPv4N4spdl4core9Generator12promise_typeE", false]], "spdl::core::generator::promise_type::exception (c++ member)": [[109, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", false], [110, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", false]], "spdl::core::generator::promise_type::final_suspend (c++ function)": [[109, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", false], [110, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", false]], "spdl::core::generator::promise_type::get_return_object (c++ function)": [[109, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", false], [110, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", false]], "spdl::core::generator::promise_type::initial_suspend (c++ function)": [[109, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", false], [110, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", false]], "spdl::core::generator::promise_type::return_void (c++ function)": [[109, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", false], [110, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", false]], "spdl::core::generator::promise_type::unhandled_exception (c++ function)": [[109, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", false], [110, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", false]], "spdl::core::generator::promise_type::value (c++ member)": [[109, "_CPPv4N4spdl4core9Generator12promise_type5valueE", false], [110, "_CPPv4N4spdl4core9Generator12promise_type5valueE", false]], "spdl::core::generator::promise_type::yield_value (c++ function)": [[109, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", false], [110, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", false]], "spdl::core::generator::~generator (c++ function)": [[109, "_CPPv4N4spdl4core9GeneratorD0Ev", false]], "spdl::core::get_ffmpeg_filters (c++ function)": [[68, "_CPPv4N4spdl4core18get_ffmpeg_filtersEv", false]], "spdl::core::get_ffmpeg_log_level (c++ function)": [[75, "_CPPv4N4spdl4core20get_ffmpeg_log_levelEv", false]], "spdl::core::get_ffmpeg_versions (c++ function)": [[69, "_CPPv4N4spdl4core19get_ffmpeg_versionsEv", false]], "spdl::core::get_timestamps (c++ function)": [[66, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", false]], "spdl::core::imagecodec (c++ type)": [[118, "_CPPv4N4spdl4core10ImageCodecE", false]], "spdl::core::imageframes (c++ type)": [[131, "_CPPv4N4spdl4core11ImageFramesE", false]], "spdl::core::imageframesptr (c++ type)": [[130, "_CPPv4N4spdl4core14ImageFramesPtrE", false]], "spdl::core::imagepackets (c++ type)": [[147, "_CPPv4N4spdl4core12ImagePacketsE", false]], "spdl::core::imagepacketsptr (c++ type)": [[141, "_CPPv4N4spdl4core15ImagePacketsPtrE", false]], "spdl::core::init_glog (c++ function)": [[77, "_CPPv4N4spdl4core9init_glogEPKc", false]], "spdl::core::init_tracing (c++ function)": [[74, "_CPPv4N4spdl4core12init_tracingEv", false]], "spdl::core::internalerror (c++ class)": [[24, "_CPPv4N4spdl4core13InternalErrorE", false]], "spdl::core::make_demuxer (c++ function)": [[62, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", false], [63, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", false]], "spdl::core::make_filter_graph (c++ function)": [[64, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", false]], "spdl::core::mediatype (c++ enum)": [[39, "_CPPv4N4spdl4core9MediaTypeE", false]], "spdl::core::mediatype::audio (c++ enumerator)": [[39, "_CPPv4N4spdl4core9MediaType5AudioE", false]], "spdl::core::mediatype::image (c++ enumerator)": [[39, "_CPPv4N4spdl4core9MediaType5ImageE", false]], "spdl::core::mediatype::video (c++ enumerator)": [[39, "_CPPv4N4spdl4core9MediaType5VideoE", false]], "spdl::core::muxer (c++ class)": [[25, "_CPPv4N4spdl4core5MuxerE", false]], "spdl::core::muxer::add_encode_stream (c++ function)": [[25, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", false]], "spdl::core::muxer::add_remux_stream (c++ function)": [[25, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", false]], "spdl::core::muxer::close (c++ function)": [[25, "_CPPv4N4spdl4core5Muxer5closeEv", false]], "spdl::core::muxer::flush (c++ function)": [[25, "_CPPv4N4spdl4core5Muxer5flushEv", false]], "spdl::core::muxer::muxer (c++ function)": [[25, "_CPPv4N4spdl4core5Muxer5MuxerERK5Muxer", false], [25, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", false], [25, "_CPPv4N4spdl4core5Muxer5MuxerERR5Muxer", false]], "spdl::core::muxer::open (c++ function)": [[25, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", false]], "spdl::core::muxer::operator= (c++ function)": [[25, "_CPPv4N4spdl4core5MuxeraSERK5Muxer", false], [25, "_CPPv4N4spdl4core5MuxeraSERR5Muxer", false]], "spdl::core::muxer::write (c++ function)": [[25, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", false]], "spdl::core::muxer::~muxer (c++ function)": [[25, "_CPPv4N4spdl4core5MuxerD0Ev", false]], "spdl::core::muxerptr (c++ type)": [[138, "_CPPv4N4spdl4core8MuxerPtrE", false]], "spdl::core::optiondict (c++ type)": [[152, "_CPPv4N4spdl4core10OptionDictE", false]], "spdl::core::packets (c++ struct)": [[111, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", false]], "spdl::core::packets::codec (c++ member)": [[111, "_CPPv4N4spdl4core7Packets5codecE", false]], "spdl::core::packets::id (c++ member)": [[111, "_CPPv4N4spdl4core7Packets2idE", false]], "spdl::core::packets::operator= (c++ function)": [[111, "_CPPv4N4spdl4core7PacketsaSERK7PacketsI5mediaE", false], [111, "_CPPv4N4spdl4core7PacketsaSERR7PacketsI5mediaE", false]], "spdl::core::packets::packets (c++ function)": [[111, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", false], [111, "_CPPv4N4spdl4core7Packets7PacketsERK7PacketsI5mediaE", false], [111, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", false], [111, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", false], [111, "_CPPv4N4spdl4core7Packets7PacketsERR7PacketsI5mediaE", false], [111, "_CPPv4N4spdl4core7Packets7PacketsEv", false]], "spdl::core::packets::pkts (c++ member)": [[111, "_CPPv4N4spdl4core7Packets4pktsE", false]], "spdl::core::packets::src (c++ member)": [[111, "_CPPv4N4spdl4core7Packets3srcE", false]], "spdl::core::packets::stream_index (c++ member)": [[111, "_CPPv4N4spdl4core7Packets12stream_indexE", false]], "spdl::core::packets::time_base (c++ member)": [[111, "_CPPv4N4spdl4core7Packets9time_baseE", false]], "spdl::core::packets::timestamp (c++ member)": [[111, "_CPPv4N4spdl4core7Packets9timestampE", false]], "spdl::core::packets::~packets (c++ function)": [[111, "_CPPv4N4spdl4core7PacketsD0Ev", false]], "spdl::core::packetseries (c++ class)": [[26, "_CPPv4N4spdl4core12PacketSeriesE", false]], "spdl::core::packetseries::get_packets (c++ function)": [[26, "_CPPv4NK4spdl4core12PacketSeries11get_packetsEv", false]], "spdl::core::packetseries::iter_data (c++ function)": [[26, "_CPPv4NK4spdl4core12PacketSeries9iter_dataEv", false]], "spdl::core::packetseries::operator= (c++ function)": [[26, "_CPPv4N4spdl4core12PacketSeriesaSERK12PacketSeries", false], [26, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", false]], "spdl::core::packetseries::packetseries (c++ function)": [[26, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERK12PacketSeries", false], [26, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", false], [26, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesEv", false]], "spdl::core::packetseries::push (c++ function)": [[26, "_CPPv4N4spdl4core12PacketSeries4pushEP8AVPacket", false]], "spdl::core::packetseries::~packetseries (c++ function)": [[26, "_CPPv4N4spdl4core12PacketSeriesD0Ev", false]], "spdl::core::packetseriesptr (c++ type)": [[139, "_CPPv4N4spdl4core15PacketSeriesPtrE", false]], "spdl::core::packetsptr (c++ type)": [[144, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", false]], "spdl::core::rational (c++ type)": [[151, "_CPPv4N4spdl4core8RationalE", false]], "spdl::core::rawpacketdata (c++ struct)": [[112, "_CPPv4N4spdl4core13RawPacketDataE", false]], "spdl::core::rawpacketdata::data (c++ member)": [[112, "_CPPv4N4spdl4core13RawPacketData4dataE", false]], "spdl::core::rawpacketdata::pts (c++ member)": [[112, "_CPPv4N4spdl4core13RawPacketData3ptsE", false]], "spdl::core::rawpacketdata::size (c++ member)": [[112, "_CPPv4N4spdl4core13RawPacketData4sizeE", false]], "spdl::core::register_avdevices (c++ function)": [[73, "_CPPv4N4spdl4core18register_avdevicesEv", false]], "spdl::core::set_ffmpeg_log_level (c++ function)": [[72, "_CPPv4N4spdl4core20set_ffmpeg_log_levelEi", false]], "spdl::core::sourceadaptor (c++ struct)": [[113, "_CPPv4N4spdl4core13SourceAdaptorE", false]], "spdl::core::sourceadaptor::get_interface (c++ function)": [[113, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", false]], "spdl::core::sourceadaptor::~sourceadaptor (c++ function)": [[113, "_CPPv4N4spdl4core13SourceAdaptorD0Ev", false]], "spdl::core::sourceadaptorptr (c++ type)": [[116, "_CPPv4N4spdl4core16SourceAdaptorPtrE", false]], "spdl::core::storage (c++ struct)": [[114, "_CPPv4N4spdl4core7StorageE", false]], "spdl::core::storage::data (c++ function)": [[114, "_CPPv4NK4spdl4core7Storage4dataEv", false]], "spdl::core::storage::~storage (c++ function)": [[114, "_CPPv4N4spdl4core7StorageD0Ev", false]], "spdl::core::streamingdemuxer (c++ class)": [[27, "_CPPv4N4spdl4core16StreamingDemuxerE", false]], "spdl::core::streamingdemuxer::done (c++ function)": [[27, "_CPPv4N4spdl4core16StreamingDemuxer4doneEv", false]], "spdl::core::streamingdemuxer::next (c++ function)": [[27, "_CPPv4N4spdl4core16StreamingDemuxer4nextEv", false]], "spdl::core::streamingdemuxer::streamingdemuxer (c++ function)": [[27, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", false]], "spdl::core::streamingdemuxerptr (c++ type)": [[122, "_CPPv4N4spdl4core19StreamingDemuxerPtrE", false]], "spdl::core::trace_counter (c++ function)": [[70, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", false]], "spdl::core::trace_event_begin (c++ function)": [[76, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", false]], "spdl::core::trace_event_end (c++ function)": [[71, "_CPPv4N4spdl4core15trace_event_endEv", false]], "spdl::core::tracingsession (c++ class)": [[28, "_CPPv4N4spdl4core14TracingSessionE", false]], "spdl::core::tracingsession::config (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", false]], "spdl::core::tracingsession::init (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSession4initEv", false]], "spdl::core::tracingsession::operator= (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSessionaSERK14TracingSession", false], [28, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", false]], "spdl::core::tracingsession::start (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSession5startEii", false]], "spdl::core::tracingsession::stop (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSession4stopEv", false]], "spdl::core::tracingsession::tracingsession (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", false], [28, "_CPPv4N4spdl4core14TracingSession14TracingSessionERK14TracingSession", false], [28, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", false]], "spdl::core::tracingsession::~tracingsession (c++ function)": [[28, "_CPPv4N4spdl4core14TracingSessionD0Ev", false]], "spdl::core::videocodec (c++ type)": [[120, "_CPPv4N4spdl4core10VideoCodecE", false]], "spdl::core::videoencodeconfig (c++ type)": [[150, "_CPPv4N4spdl4core17VideoEncodeConfigE", false]], "spdl::core::videoencoder (c++ type)": [[125, "_CPPv4N4spdl4core12VideoEncoderE", false]], "spdl::core::videoencoderptr (c++ type)": [[126, "_CPPv4N4spdl4core15VideoEncoderPtrE", false]], "spdl::core::videoframes (c++ type)": [[137, "_CPPv4N4spdl4core11VideoFramesE", false]], "spdl::core::videoframesptr (c++ type)": [[135, "_CPPv4N4spdl4core14VideoFramesPtrE", false]], "spdl::core::videopackets (c++ type)": [[140, "_CPPv4N4spdl4core12VideoPacketsE", false]], "spdl::core::videopacketsptr (c++ type)": [[143, "_CPPv4N4spdl4core15VideoPacketsPtrE", false]], "spdl_default_buffer_size (c macro)": [[34, "c.SPDL_DEFAULT_BUFFER_SIZE", false]], "stage_hook() (asyncqueue method)": [[249, "spdl.pipeline.AsyncQueue.stage_hook", false]], "stage_hook() (statsqueue method)": [[254, "spdl.pipeline.StatsQueue.stage_hook", false]], "stage_hook() (taskhook method)": [[255, "spdl.pipeline.TaskHook.stage_hook", false]], "stage_hook() (taskstatshook method)": [[257, "spdl.pipeline.TaskStatsHook.stage_hook", false]], "start() (pipeline method)": [[250, "spdl.pipeline.Pipeline.start", false]], "statsqueue (class in spdl.pipeline)": [[254, "spdl.pipeline.StatsQueue", false]], "stop() (pipeline method)": [[250, "spdl.pipeline.Pipeline.stop", false]], "streaming_demux() (demuxer method)": [[176, "spdl.io.Demuxer.streaming_demux", false]], "streaming_load_video_nvdec() (in module spdl.io)": [[227, "spdl.io.streaming_load_video_nvdec", false]], "streaming_nvdec_decoding": [[278, "module-streaming_nvdec_decoding", false]], "streaming_video_processing": [[279, "module-streaming_video_processing", false]], "task_hook() (taskhook method)": [[255, "spdl.pipeline.TaskHook.task_hook", false]], "task_hook() (taskstatshook method)": [[257, "spdl.pipeline.TaskStatsHook.task_hook", false]], "taskhook (class in spdl.pipeline)": [[255, "spdl.pipeline.TaskHook", false]], "taskperfstats (class in spdl.pipeline)": [[256, "spdl.pipeline.TaskPerfStats", false]], "taskstatshook (class in spdl.pipeline)": [[257, "spdl.pipeline.TaskStatsHook", false]], "time_base (audiocodec property)": [[162, "spdl.io.AudioCodec.time_base", false]], "time_base (imagecodec property)": [[179, "spdl.io.ImageCodec.time_base", false]], "time_base (videocodec property)": [[187, "spdl.io.VideoCodec.time_base", false]], "time_base (videoframes property)": [[191, "spdl.io.VideoFrames.time_base", false]], "timestamp (audiopackets property)": [[167, "spdl.io.AudioPackets.timestamp", false]], "timestamp (videopackets property)": [[192, "spdl.io.VideoPackets.timestamp", false]], "to_jax() (in module spdl.io)": [[228, "spdl.io.to_jax", false]], "to_numba() (in module spdl.io)": [[229, "spdl.io.to_numba", false]], "to_numpy() (in module spdl.io)": [[230, "spdl.io.to_numpy", false]], "to_torch() (in module spdl.io)": [[231, "spdl.io.to_torch", false]], "torch_cuda_warmup() (in module streaming_nvdec_decoding)": [[278, "streaming_nvdec_decoding.torch_cuda_warmup", false]], "trace_counter() (in module spdl.io.utils)": [[243, "spdl.io.utils.trace_counter", false]], "trace_event() (in module spdl.io.utils)": [[244, "spdl.io.utils.trace_event", false]], "trace_gc() (in module spdl.io.utils)": [[245, "spdl.io.utils.trace_gc", false]], "tracing() (in module spdl.io.utils)": [[246, "spdl.io.utils.tracing", false]], "transfer_buffer() (in module spdl.io)": [[232, "spdl.io.transfer_buffer", false]], "transfer_buffer_cpu() (in module spdl.io)": [[233, "spdl.io.transfer_buffer_cpu", false]], "transfer_tensor() (in module spdl.io)": [[234, "spdl.io.transfer_tensor", false]], "video_codec (demuxer property)": [[176, "spdl.io.Demuxer.video_codec", false]], "video_dataloading": [[280, "module-video_dataloading", false]], "video_encode_config() (in module spdl.io)": [[247, "spdl.io.video_encode_config", false]], "video_stream_index (demuxer property)": [[176, "spdl.io.Demuxer.video_stream_index", false]], "videocodec (class in spdl.io)": [[187, "spdl.io.VideoCodec", false]], "videodecoder (class in spdl.io)": [[188, "spdl.io.VideoDecoder", false]], "videoencodeconfig (class in spdl.io)": [[189, "spdl.io.VideoEncodeConfig", false]], "videoencoder (class in spdl.io)": [[190, "spdl.io.VideoEncoder", false]], "videoframes (class in spdl.io)": [[191, "spdl.io.VideoFrames", false]], "videopackets (class in spdl.io)": [[192, "spdl.io.VideoPackets", false]], "width (imagecodec property)": [[179, "spdl.io.ImageCodec.width", false]], "width (imageframes property)": [[181, "spdl.io.ImageFrames.width", false]], "width (imagepackets property)": [[182, "spdl.io.ImagePackets.width", false]], "width (videocodec property)": [[187, "spdl.io.VideoCodec.width", false]], "width (videoframes property)": [[191, "spdl.io.VideoFrames.width", false]], "width (videopackets property)": [[192, "spdl.io.VideoPackets.width", false]], "worker_entrypoint() (in module image_dataloading)": [[14, "image_dataloading.worker_entrypoint", false]], "worker_entrypoint() (in module video_dataloading)": [[280, "video_dataloading.worker_entrypoint", false]], "write() (muxer method)": [[183, "spdl.io.Muxer.write", false]]}, "objects": {"": [[34, 0, 1, "c.SPDL_DEFAULT_BUFFER_SIZE", "SPDL_DEFAULT_BUFFER_SIZE"], [32, 0, 1, "c._IS_AUDIO", "_IS_AUDIO"], [33, 0, 1, "c._IS_IMAGE", "_IS_IMAGE"], [31, 0, 1, "c._IS_VIDEO", "_IS_VIDEO"], [102, 1, 1, "_CPPv410AVRational", "AVRational"], [149, 2, 1, "_CPPv410AVRational", "AVRational"], [102, 3, 1, "_CPPv4N10AVRational3denE", "AVRational::den"], [102, 3, 1, "_CPPv4N10AVRational3numE", "AVRational::num"], [134, 2, 1, "_CPPv4N4spdl4core9AnyFramesE", "spdl::core::AnyFrames"], [146, 2, 1, "_CPPv4N4spdl4core10AnyPacketsE", "spdl::core::AnyPackets"], [119, 2, 1, "_CPPv4N4spdl4core10AudioCodecE", "spdl::core::AudioCodec"], [148, 2, 1, "_CPPv4N4spdl4core17AudioEncodeConfigE", "spdl::core::AudioEncodeConfig"], [127, 2, 1, "_CPPv4N4spdl4core12AudioEncoderE", "spdl::core::AudioEncoder"], [124, 2, 1, "_CPPv4N4spdl4core15AudioEncoderPtrE", "spdl::core::AudioEncoderPtr"], [132, 2, 1, "_CPPv4N4spdl4core11AudioFramesE", "spdl::core::AudioFrames"], [133, 2, 1, "_CPPv4N4spdl4core14AudioFramesPtrE", "spdl::core::AudioFramesPtr"], [142, 2, 1, "_CPPv4N4spdl4core12AudioPacketsE", "spdl::core::AudioPackets"], [145, 2, 1, "_CPPv4N4spdl4core15AudioPacketsPtrE", "spdl::core::AudioPacketsPtr"], [16, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", "spdl::core::BSF"], [16, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERK3BSF", "spdl::core::BSF::BSF"], [16, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF"], [16, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERR3BSF", "spdl::core::BSF::BSF"], [16, 5, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF::bsf"], [16, 5, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF::codec"], [16, 4, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter"], [16, 5, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter::flush"], [16, 5, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter::packets"], [16, 4, 1, "_CPPv4N4spdl4core3BSF5flushEv", "spdl::core::BSF::flush"], [16, 4, 1, "_CPPv4NK4spdl4core3BSF9get_codecEv", "spdl::core::BSF::get_codec"], [16, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", "spdl::core::BSF::media"], [16, 4, 1, "_CPPv4N4spdl4core3BSFaSERK3BSF", "spdl::core::BSF::operator="], [16, 4, 1, "_CPPv4N4spdl4core3BSFaSERR3BSF", "spdl::core::BSF::operator="], [16, 4, 1, "_CPPv4N4spdl4core3BSFD0Ev", "spdl::core::BSF::~BSF"], [103, 1, 1, "_CPPv4N4spdl4core12BytesAdaptorE", "spdl::core::BytesAdaptor"], [103, 4, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface"], [103, 5, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface::data"], [103, 5, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface::dmx_cfg"], [104, 1, 1, "_CPPv4N4spdl4core9CPUBufferE", "spdl::core::CPUBuffer"], [104, 4, 1, "_CPPv4N4spdl4core9CPUBuffer4dataEv", "spdl::core::CPUBuffer::data"], [104, 3, 1, "_CPPv4N4spdl4core9CPUBuffer5depthE", "spdl::core::CPUBuffer::depth"], [104, 3, 1, "_CPPv4N4spdl4core9CPUBuffer10elem_classE", "spdl::core::CPUBuffer::elem_class"], [104, 3, 1, "_CPPv4N4spdl4core9CPUBuffer5shapeE", "spdl::core::CPUBuffer::shape"], [104, 3, 1, "_CPPv4N4spdl4core9CPUBuffer7storageE", "spdl::core::CPUBuffer::storage"], [117, 2, 1, "_CPPv4N4spdl4core12CPUBufferPtrE", "spdl::core::CPUBufferPtr"], [17, 1, 1, "_CPPv4N4spdl4core10CPUStorageE", "spdl::core::CPUStorage"], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage"], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERK10CPUStorage", "spdl::core::CPUStorage::CPUStorage"], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERR10CPUStorage", "spdl::core::CPUStorage::CPUStorage"], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageEv", "spdl::core::CPUStorage::CPUStorage"], [17, 5, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage::pin_memory"], [17, 5, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage::size"], [17, 4, 1, "_CPPv4NK4spdl4core10CPUStorage4dataEv", "spdl::core::CPUStorage::data"], [17, 4, 1, "_CPPv4NK4spdl4core10CPUStorage9is_pinnedEv", "spdl::core::CPUStorage::is_pinned"], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorageaSERK10CPUStorage", "spdl::core::CPUStorage::operator="], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorageaSERR10CPUStorage", "spdl::core::CPUStorage::operator="], [17, 3, 1, "_CPPv4N4spdl4core10CPUStorage4sizeE", "spdl::core::CPUStorage::size"], [17, 4, 1, "_CPPv4N4spdl4core10CPUStorageD0Ev", "spdl::core::CPUStorage::~CPUStorage"], [18, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", "spdl::core::Codec"], [18, 4, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec"], [18, 4, 1, "_CPPv4N4spdl4core5Codec5CodecERK5CodecI5mediaE", "spdl::core::Codec::Codec"], [18, 4, 1, "_CPPv4N4spdl4core5Codec5CodecERR5CodecI5mediaE", "spdl::core::Codec::Codec"], [18, 4, 1, "_CPPv4N4spdl4core5Codec5CodecEv", "spdl::core::Codec::Codec"], [18, 5, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec::frame_rate"], [18, 5, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec::time_base"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec12get_bit_rateEv", "spdl::core::Codec::get_bit_rate"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec19get_bits_per_sampleEv", "spdl::core::Codec::get_bits_per_sample"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec18get_channel_layoutEv", "spdl::core::Codec::get_channel_layout"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec12get_codec_idEv", "spdl::core::Codec::get_codec_id"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec14get_frame_rateEv", "spdl::core::Codec::get_frame_rate"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec10get_heightEv", "spdl::core::Codec::get_height"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec8get_nameEv", "spdl::core::Codec::get_name"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec16get_num_channelsEv", "spdl::core::Codec::get_num_channels"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec14get_parametersEv", "spdl::core::Codec::get_parameters"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec11get_pix_fmtEv", "spdl::core::Codec::get_pix_fmt"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec23get_sample_aspect_ratioEv", "spdl::core::Codec::get_sample_aspect_ratio"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec14get_sample_fmtEv", "spdl::core::Codec::get_sample_fmt"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec15get_sample_rateEv", "spdl::core::Codec::get_sample_rate"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec13get_time_baseEv", "spdl::core::Codec::get_time_base"], [18, 4, 1, "_CPPv4NK4spdl4core5Codec9get_widthEv", "spdl::core::Codec::get_width"], [18, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", "spdl::core::Codec::media"], [18, 4, 1, "_CPPv4N4spdl4core5CodecaSERK5CodecI5mediaE", "spdl::core::Codec::operator="], [18, 4, 1, "_CPPv4N4spdl4core5CodecaSERR5CodecI5mediaE", "spdl::core::Codec::operator="], [18, 4, 1, "_CPPv4N4spdl4core5CodecD0Ev", "spdl::core::Codec::~Codec"], [38, 7, 1, "_CPPv4N4spdl4core7CodecIDE", "spdl::core::CodecID"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID3AV1E", "spdl::core::CodecID::AV1"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID4H264E", "spdl::core::CodecID::H264"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID4HEVCE", "spdl::core::CodecID::HEVC"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID5MJPEGE", "spdl::core::CodecID::MJPEG"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID10MPEG1VIDEOE", "spdl::core::CodecID::MPEG1VIDEO"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID10MPEG2VIDEOE", "spdl::core::CodecID::MPEG2VIDEO"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID5MPEG4E", "spdl::core::CodecID::MPEG4"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID3VC1E", "spdl::core::CodecID::VC1"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID3VP8E", "spdl::core::CodecID::VP8"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID3VP9E", "spdl::core::CodecID::VP9"], [38, 8, 1, "_CPPv4N4spdl4core7CodecID4WMV3E", "spdl::core::CodecID::WMV3"], [105, 1, 1, "_CPPv4N4spdl4core13DataInterfaceE", "spdl::core::DataInterface"], [105, 4, 1, "_CPPv4N4spdl4core13DataInterface11get_fmt_ctxEv", "spdl::core::DataInterface::get_fmt_ctx"], [105, 4, 1, "_CPPv4N4spdl4core13DataInterfaceD0Ev", "spdl::core::DataInterface::~DataInterface"], [115, 2, 1, "_CPPv4N4spdl4core16DataInterfacePtrE", "spdl::core::DataInterfacePtr"], [106, 1, 1, "_CPPv4N4spdl4core12DecodeConfigE", "spdl::core::DecodeConfig"], [106, 3, 1, "_CPPv4N4spdl4core12DecodeConfig7decoderE", "spdl::core::DecodeConfig::decoder"], [106, 3, 1, "_CPPv4N4spdl4core12DecodeConfig15decoder_optionsE", "spdl::core::DecodeConfig::decoder_options"], [19, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", "spdl::core::Decoder"], [19, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder"], [19, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK7Decoder", "spdl::core::Decoder::Decoder"], [19, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERR7Decoder", "spdl::core::Decoder::Decoder"], [19, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::cfg"], [19, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::codec"], [19, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::filter_desc"], [19, 4, 1, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", "spdl::core::Decoder::decode"], [19, 5, 1, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", "spdl::core::Decoder::decode::packets"], [19, 4, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush"], [19, 5, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush::num_frames"], [19, 5, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush::packets"], [19, 4, 1, "_CPPv4N4spdl4core7Decoder5flushEv", "spdl::core::Decoder::flush"], [19, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", "spdl::core::Decoder::media"], [19, 4, 1, "_CPPv4N4spdl4core7DecoderaSERK7Decoder", "spdl::core::Decoder::operator="], [19, 4, 1, "_CPPv4N4spdl4core7DecoderaSERR7Decoder", "spdl::core::Decoder::operator="], [19, 4, 1, "_CPPv4N4spdl4core7DecoderD0Ev", "spdl::core::Decoder::~Decoder"], [121, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", "spdl::core::DecoderPtr"], [121, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", "spdl::core::DecoderPtr::media"], [107, 1, 1, "_CPPv4N4spdl4core11DemuxConfigE", "spdl::core::DemuxConfig"], [107, 3, 1, "_CPPv4N4spdl4core11DemuxConfig11buffer_sizeE", "spdl::core::DemuxConfig::buffer_size"], [107, 3, 1, "_CPPv4N4spdl4core11DemuxConfig6formatE", "spdl::core::DemuxConfig::format"], [107, 3, 1, "_CPPv4N4spdl4core11DemuxConfig14format_optionsE", "spdl::core::DemuxConfig::format_options"], [20, 1, 1, "_CPPv4N4spdl4core7DemuxerE", "spdl::core::Demuxer"], [20, 4, 1, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", "spdl::core::Demuxer::Demuxer"], [20, 5, 1, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", "spdl::core::Demuxer::Demuxer::di"], [20, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::bsf"], [20, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::media"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::window"], [20, 4, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", "spdl::core::Demuxer::get_default_codec"], [20, 6, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", "spdl::core::Demuxer::get_default_codec::media"], [20, 4, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", "spdl::core::Demuxer::get_default_stream_index"], [20, 6, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", "spdl::core::Demuxer::get_default_stream_index::media"], [20, 4, 1, "_CPPv4NK4spdl4core7Demuxer9has_audioEv", "spdl::core::Demuxer::has_audio"], [20, 4, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux"], [20, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::duration"], [20, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::indices"], [20, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::num_packets"], [20, 4, 1, "_CPPv4N4spdl4core7DemuxerD0Ev", "spdl::core::Demuxer::~Demuxer"], [123, 2, 1, "_CPPv4N4spdl4core10DemuxerPtrE", "spdl::core::DemuxerPtr"], [40, 7, 1, "_CPPv4N4spdl4core9ElemClassE", "spdl::core::ElemClass"], [40, 8, 1, "_CPPv4N4spdl4core9ElemClass5FloatE", "spdl::core::ElemClass::Float"], [40, 8, 1, "_CPPv4N4spdl4core9ElemClass3IntE", "spdl::core::ElemClass::Int"], [40, 8, 1, "_CPPv4N4spdl4core9ElemClass4UIntE", "spdl::core::ElemClass::UInt"], [108, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", "spdl::core::EncodeConfigBase"], [108, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", "spdl::core::EncodeConfigBase::media"], [21, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", "spdl::core::Encoder"], [21, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderEPN6detail11EncoderImplI5mediaEE", "spdl::core::Encoder::Encoder"], [21, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderERK7EncoderI5mediaE", "spdl::core::Encoder::Encoder"], [21, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderERR7EncoderI5mediaE", "spdl::core::Encoder::Encoder"], [21, 4, 1, "_CPPv4N4spdl4core7Encoder6encodeERRK9FramesPtrI5mediaE", "spdl::core::Encoder::encode"], [21, 4, 1, "_CPPv4N4spdl4core7Encoder5flushEv", "spdl::core::Encoder::flush"], [21, 4, 1, "_CPPv4NK4spdl4core7Encoder14get_frame_sizeEv", "spdl::core::Encoder::get_frame_size"], [21, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", "spdl::core::Encoder::media"], [21, 4, 1, "_CPPv4N4spdl4core7EncoderaSERK7EncoderI5mediaE", "spdl::core::Encoder::operator="], [21, 4, 1, "_CPPv4N4spdl4core7EncoderaSERR7EncoderI5mediaE", "spdl::core::Encoder::operator="], [21, 4, 1, "_CPPv4N4spdl4core7EncoderD0Ev", "spdl::core::Encoder::~Encoder"], [128, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", "spdl::core::EncoderPtr"], [128, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", "spdl::core::EncoderPtr::media"], [22, 1, 1, "_CPPv4N4spdl4core11FilterGraphE", "spdl::core::FilterGraph"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERK11FilterGraph", "spdl::core::FilterGraph::FilterGraph"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", "spdl::core::FilterGraph::FilterGraph"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERR11FilterGraph", "spdl::core::FilterGraph::FilterGraph"], [22, 5, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", "spdl::core::FilterGraph::FilterGraph::filter_desc"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames"], [22, 5, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames::frames"], [22, 5, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames::name"], [22, 4, 1, "_CPPv4NK4spdl4core11FilterGraph4dumpEv", "spdl::core::FilterGraph::dump"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraph5flushEv", "spdl::core::FilterGraph::flush"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::get_frames"], [22, 5, 1, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::get_frames::name"], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraphaSERK11FilterGraph", "spdl::core::FilterGraph::operator="], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraphaSERR11FilterGraph", "spdl::core::FilterGraph::operator="], [22, 4, 1, "_CPPv4N4spdl4core11FilterGraphD0Ev", "spdl::core::FilterGraph::~FilterGraph"], [129, 2, 1, "_CPPv4N4spdl4core14FilterGraphPtrE", "spdl::core::FilterGraphPtr"], [23, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", "spdl::core::Frames"], [23, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", "spdl::core::Frames::media"], [136, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", "spdl::core::FramesPtr"], [136, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", "spdl::core::FramesPtr::media"], [109, 1, 1, "_CPPv4I0EN4spdl4core9GeneratorE", "spdl::core::Generator"], [109, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", "spdl::core::Generator::Generator"], [109, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorERK9Generator", "spdl::core::Generator::Generator"], [109, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorERR9Generator", "spdl::core::Generator::Generator"], [109, 5, 1, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", "spdl::core::Generator::Generator::h"], [109, 6, 1, "_CPPv4I0EN4spdl4core9GeneratorE", "spdl::core::Generator::T"], [109, 3, 1, "_CPPv4N4spdl4core9Generator2h_E", "spdl::core::Generator::h_"], [109, 2, 1, "_CPPv4N4spdl4core9Generator11handle_typeE", "spdl::core::Generator::handle_type"], [109, 4, 1, "_CPPv4N4spdl4core9GeneratorcvbEv", "spdl::core::Generator::operator bool"], [109, 4, 1, "_CPPv4N4spdl4core9GeneratorclEv", "spdl::core::Generator::operator()"], [109, 4, 1, "_CPPv4N4spdl4core9GeneratoraSERK9Generator", "spdl::core::Generator::operator="], [109, 4, 1, "_CPPv4N4spdl4core9GeneratoraSERR9Generator", "spdl::core::Generator::operator="], [109, 1, 1, "_CPPv4N4spdl4core9Generator12promise_typeE", "spdl::core::Generator::promise_type"], [110, 1, 1, "_CPPv4N4spdl4core9Generator12promise_typeE", "spdl::core::Generator::promise_type"], [109, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", "spdl::core::Generator::promise_type::exception"], [110, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", "spdl::core::Generator::promise_type::exception"], [109, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", "spdl::core::Generator::promise_type::final_suspend"], [110, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", "spdl::core::Generator::promise_type::final_suspend"], [109, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", "spdl::core::Generator::promise_type::get_return_object"], [110, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", "spdl::core::Generator::promise_type::get_return_object"], [109, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", "spdl::core::Generator::promise_type::initial_suspend"], [110, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", "spdl::core::Generator::promise_type::initial_suspend"], [109, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", "spdl::core::Generator::promise_type::return_void"], [110, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", "spdl::core::Generator::promise_type::return_void"], [109, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", "spdl::core::Generator::promise_type::unhandled_exception"], [110, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", "spdl::core::Generator::promise_type::unhandled_exception"], [109, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type5valueE", "spdl::core::Generator::promise_type::value"], [110, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type5valueE", "spdl::core::Generator::promise_type::value"], [109, 4, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value"], [110, 4, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value"], [109, 6, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::From"], [110, 6, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::From"], [109, 5, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::from"], [110, 5, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::from"], [109, 4, 1, "_CPPv4N4spdl4core9GeneratorD0Ev", "spdl::core::Generator::~Generator"], [118, 2, 1, "_CPPv4N4spdl4core10ImageCodecE", "spdl::core::ImageCodec"], [131, 2, 1, "_CPPv4N4spdl4core11ImageFramesE", "spdl::core::ImageFrames"], [130, 2, 1, "_CPPv4N4spdl4core14ImageFramesPtrE", "spdl::core::ImageFramesPtr"], [147, 2, 1, "_CPPv4N4spdl4core12ImagePacketsE", "spdl::core::ImagePackets"], [141, 2, 1, "_CPPv4N4spdl4core15ImagePacketsPtrE", "spdl::core::ImagePacketsPtr"], [24, 1, 1, "_CPPv4N4spdl4core13InternalErrorE", "spdl::core::InternalError"], [39, 7, 1, "_CPPv4N4spdl4core9MediaTypeE", "spdl::core::MediaType"], [39, 8, 1, "_CPPv4N4spdl4core9MediaType5AudioE", "spdl::core::MediaType::Audio"], [39, 8, 1, "_CPPv4N4spdl4core9MediaType5ImageE", "spdl::core::MediaType::Image"], [39, 8, 1, "_CPPv4N4spdl4core9MediaType5VideoE", "spdl::core::MediaType::Video"], [25, 1, 1, "_CPPv4N4spdl4core5MuxerE", "spdl::core::Muxer"], [25, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERK5Muxer", "spdl::core::Muxer::Muxer"], [25, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer"], [25, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERR5Muxer", "spdl::core::Muxer::Muxer"], [25, 5, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer::muxer"], [25, 5, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer::uri"], [25, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream"], [25, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::codec_config"], [25, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::encoder"], [25, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::encoder_config"], [25, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::media"], [25, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream"], [25, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream::codec"], [25, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream::media"], [25, 4, 1, "_CPPv4N4spdl4core5Muxer5closeEv", "spdl::core::Muxer::close"], [25, 4, 1, "_CPPv4N4spdl4core5Muxer5flushEv", "spdl::core::Muxer::flush"], [25, 4, 1, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::open"], [25, 5, 1, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::open::muxer_config"], [25, 4, 1, "_CPPv4N4spdl4core5MuxeraSERK5Muxer", "spdl::core::Muxer::operator="], [25, 4, 1, "_CPPv4N4spdl4core5MuxeraSERR5Muxer", "spdl::core::Muxer::operator="], [25, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write"], [25, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::i"], [25, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::media"], [25, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::packets"], [25, 4, 1, "_CPPv4N4spdl4core5MuxerD0Ev", "spdl::core::Muxer::~Muxer"], [138, 2, 1, "_CPPv4N4spdl4core8MuxerPtrE", "spdl::core::MuxerPtr"], [152, 2, 1, "_CPPv4N4spdl4core10OptionDictE", "spdl::core::OptionDict"], [26, 1, 1, "_CPPv4N4spdl4core12PacketSeriesE", "spdl::core::PacketSeries"], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERK12PacketSeries", "spdl::core::PacketSeries::PacketSeries"], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", "spdl::core::PacketSeries::PacketSeries"], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesEv", "spdl::core::PacketSeries::PacketSeries"], [26, 5, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", "spdl::core::PacketSeries::PacketSeries::other"], [26, 4, 1, "_CPPv4NK4spdl4core12PacketSeries11get_packetsEv", "spdl::core::PacketSeries::get_packets"], [26, 4, 1, "_CPPv4NK4spdl4core12PacketSeries9iter_dataEv", "spdl::core::PacketSeries::iter_data"], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeriesaSERK12PacketSeries", "spdl::core::PacketSeries::operator="], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", "spdl::core::PacketSeries::operator="], [26, 5, 1, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", "spdl::core::PacketSeries::operator=::other"], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeries4pushEP8AVPacket", "spdl::core::PacketSeries::push"], [26, 4, 1, "_CPPv4N4spdl4core12PacketSeriesD0Ev", "spdl::core::PacketSeries::~PacketSeries"], [139, 2, 1, "_CPPv4N4spdl4core15PacketSeriesPtrE", "spdl::core::PacketSeriesPtr"], [111, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", "spdl::core::Packets"], [111, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets"], [111, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERK7PacketsI5mediaE", "spdl::core::Packets::Packets"], [111, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets"], [111, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets"], [111, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERR7PacketsI5mediaE", "spdl::core::Packets::Packets"], [111, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsEv", "spdl::core::Packets::Packets"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::codec"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::id"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::index"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::index"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::src"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::src"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::stream_index"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::time_base"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::time_base"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::timestamp"], [111, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::timestamp"], [111, 3, 1, "_CPPv4N4spdl4core7Packets5codecE", "spdl::core::Packets::codec"], [111, 3, 1, "_CPPv4N4spdl4core7Packets2idE", "spdl::core::Packets::id"], [111, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", "spdl::core::Packets::media"], [111, 4, 1, "_CPPv4N4spdl4core7PacketsaSERK7PacketsI5mediaE", "spdl::core::Packets::operator="], [111, 4, 1, "_CPPv4N4spdl4core7PacketsaSERR7PacketsI5mediaE", "spdl::core::Packets::operator="], [111, 3, 1, "_CPPv4N4spdl4core7Packets4pktsE", "spdl::core::Packets::pkts"], [111, 3, 1, "_CPPv4N4spdl4core7Packets3srcE", "spdl::core::Packets::src"], [111, 3, 1, "_CPPv4N4spdl4core7Packets12stream_indexE", "spdl::core::Packets::stream_index"], [111, 3, 1, "_CPPv4N4spdl4core7Packets9time_baseE", "spdl::core::Packets::time_base"], [111, 3, 1, "_CPPv4N4spdl4core7Packets9timestampE", "spdl::core::Packets::timestamp"], [111, 4, 1, "_CPPv4N4spdl4core7PacketsD0Ev", "spdl::core::Packets::~Packets"], [144, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", "spdl::core::PacketsPtr"], [144, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", "spdl::core::PacketsPtr::media"], [151, 2, 1, "_CPPv4N4spdl4core8RationalE", "spdl::core::Rational"], [112, 1, 1, "_CPPv4N4spdl4core13RawPacketDataE", "spdl::core::RawPacketData"], [112, 3, 1, "_CPPv4N4spdl4core13RawPacketData4dataE", "spdl::core::RawPacketData::data"], [112, 3, 1, "_CPPv4N4spdl4core13RawPacketData3ptsE", "spdl::core::RawPacketData::pts"], [112, 3, 1, "_CPPv4N4spdl4core13RawPacketData4sizeE", "spdl::core::RawPacketData::size"], [113, 1, 1, "_CPPv4N4spdl4core13SourceAdaptorE", "spdl::core::SourceAdaptor"], [113, 4, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface"], [113, 5, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface::dmx_cfg"], [113, 5, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface::url"], [113, 4, 1, "_CPPv4N4spdl4core13SourceAdaptorD0Ev", "spdl::core::SourceAdaptor::~SourceAdaptor"], [116, 2, 1, "_CPPv4N4spdl4core16SourceAdaptorPtrE", "spdl::core::SourceAdaptorPtr"], [114, 1, 1, "_CPPv4N4spdl4core7StorageE", "spdl::core::Storage"], [114, 4, 1, "_CPPv4NK4spdl4core7Storage4dataEv", "spdl::core::Storage::data"], [114, 4, 1, "_CPPv4N4spdl4core7StorageD0Ev", "spdl::core::Storage::~Storage"], [27, 1, 1, "_CPPv4N4spdl4core16StreamingDemuxerE", "spdl::core::StreamingDemuxer"], [27, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer"], [27, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::duration"], [27, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::num_packets"], [27, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::p"], [27, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::stream_index"], [27, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer4doneEv", "spdl::core::StreamingDemuxer::done"], [27, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer4nextEv", "spdl::core::StreamingDemuxer::next"], [122, 2, 1, "_CPPv4N4spdl4core19StreamingDemuxerPtrE", "spdl::core::StreamingDemuxerPtr"], [28, 1, 1, "_CPPv4N4spdl4core14TracingSessionE", "spdl::core::TracingSession"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", "spdl::core::TracingSession::TracingSession"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERK14TracingSession", "spdl::core::TracingSession::TracingSession"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", "spdl::core::TracingSession::TracingSession"], [28, 5, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", "spdl::core::TracingSession::TracingSession::other"], [28, 5, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", "spdl::core::TracingSession::TracingSession::sess"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", "spdl::core::TracingSession::config"], [28, 5, 1, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", "spdl::core::TracingSession::config::process_name"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession4initEv", "spdl::core::TracingSession::init"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSessionaSERK14TracingSession", "spdl::core::TracingSession::operator="], [28, 4, 1, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", "spdl::core::TracingSession::operator="], [28, 5, 1, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", "spdl::core::TracingSession::operator=::other"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start"], [28, 5, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start::buffer_size_in_kb"], [28, 5, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start::fd"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSession4stopEv", "spdl::core::TracingSession::stop"], [28, 4, 1, "_CPPv4N4spdl4core14TracingSessionD0Ev", "spdl::core::TracingSession::~TracingSession"], [120, 2, 1, "_CPPv4N4spdl4core10VideoCodecE", "spdl::core::VideoCodec"], [150, 2, 1, "_CPPv4N4spdl4core17VideoEncodeConfigE", "spdl::core::VideoEncodeConfig"], [125, 2, 1, "_CPPv4N4spdl4core12VideoEncoderE", "spdl::core::VideoEncoder"], [126, 2, 1, "_CPPv4N4spdl4core15VideoEncoderPtrE", "spdl::core::VideoEncoderPtr"], [137, 2, 1, "_CPPv4N4spdl4core11VideoFramesE", "spdl::core::VideoFrames"], [135, 2, 1, "_CPPv4N4spdl4core14VideoFramesPtrE", "spdl::core::VideoFramesPtr"], [140, 2, 1, "_CPPv4N4spdl4core12VideoPacketsE", "spdl::core::VideoPackets"], [143, 2, 1, "_CPPv4N4spdl4core15VideoPacketsPtrE", "spdl::core::VideoPacketsPtr"], [65, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone"], [65, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone::media"], [65, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone::src"], [59, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames"], [61, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames"], [59, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::batch"], [61, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::frames"], [59, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::media"], [61, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::media"], [59, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::storage"], [61, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::storage"], [57, 4, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer"], [57, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::depth"], [57, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::elem_class"], [57, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::shape"], [57, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::storage"], [58, 4, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::bits"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::data"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::pts"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::sample_fmt"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::sample_rate"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::shape"], [58, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::stride"], [60, 4, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::bits"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::data"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::frame_rate"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::pts"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::sample_fmt"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::shape"], [60, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::stride"], [29, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", "spdl::core::detail::DecoderImpl"], [29, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", "spdl::core::detail::DecoderImpl::media"], [30, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", "spdl::core::detail::EncoderImpl"], [30, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", "spdl::core::detail::EncoderImpl::media"], [67, 4, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices"], [67, 5, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices::indices"], [67, 5, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices::src"], [68, 4, 1, "_CPPv4N4spdl4core18get_ffmpeg_filtersEv", "spdl::core::get_ffmpeg_filters"], [75, 4, 1, "_CPPv4N4spdl4core20get_ffmpeg_log_levelEv", "spdl::core::get_ffmpeg_log_level"], [69, 4, 1, "_CPPv4N4spdl4core19get_ffmpeg_versionsEv", "spdl::core::get_ffmpeg_versions"], [66, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", "spdl::core::get_timestamps"], [66, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", "spdl::core::get_timestamps::media"], [66, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", "spdl::core::get_timestamps::raw"], [77, 4, 1, "_CPPv4N4spdl4core9init_glogEPKc", "spdl::core::init_glog"], [77, 5, 1, "_CPPv4N4spdl4core9init_glogEPKc", "spdl::core::init_glog::name"], [74, 4, 1, "_CPPv4N4spdl4core12init_tracingEv", "spdl::core::init_tracing"], [62, 4, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer"], [63, 4, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer"], [63, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::adaptor"], [62, 5, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::data"], [62, 5, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::dmx_cfg"], [63, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::dmx_cfg"], [63, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::src"], [64, 4, 1, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", "spdl::core::make_filter_graph"], [64, 5, 1, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", "spdl::core::make_filter_graph::filter_desc"], [73, 4, 1, "_CPPv4N4spdl4core18register_avdevicesEv", "spdl::core::register_avdevices"], [72, 4, 1, "_CPPv4N4spdl4core20set_ffmpeg_log_levelEi", "spdl::core::set_ffmpeg_log_level"], [70, 4, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter"], [70, 6, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::Number"], [70, 5, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::counter"], [70, 5, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::i"], [76, 4, 1, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", "spdl::core::trace_event_begin"], [76, 5, 1, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", "spdl::core::trace_event_begin::name"], [71, 4, 1, "_CPPv4N4spdl4core15trace_event_endEv", "spdl::core::trace_event_end"], [13, 9, 0, "-", "data_formats"], [14, 9, 0, "-", "image_dataloading"], [15, 9, 0, "-", "imagenet_classification"], [154, 9, 0, "-", "multi_thread_preprocessing"], [155, 9, 0, "-", "performance_analysis"], [278, 9, 0, "-", "streaming_nvdec_decoding"], [279, 9, 0, "-", "streaming_video_processing"], [280, 9, 0, "-", "video_dataloading"]], "data_formats": [[13, 10, 1, "", "DataSource"], [13, 12, 1, "", "get_mock_data"], [13, 12, 1, "", "get_pipeline"], [13, 12, 1, "", "load_npy"], [13, 12, 1, "", "load_npy_spdl"], [13, 12, 1, "", "load_torch"], [13, 12, 1, "", "main"], [13, 12, 1, "", "run_pipeline"]], "data_formats.DataSource": [[13, 11, 1, "", "__iter__"]], "image_dataloading": [[14, 10, 1, "", "PerfResult"], [14, 12, 1, "", "batch_decode"], [14, 12, 1, "", "benchmark"], [14, 12, 1, "", "entrypoint"], [14, 12, 1, "", "get_pipeline"], [14, 12, 1, "", "source"], [14, 12, 1, "", "worker_entrypoint"]], "image_dataloading.PerfResult": [[14, 13, 1, "", "elapsed"], [14, 13, 1, "", "num_batches"], [14, 13, 1, "", "num_frames"]], "imagenet_classification": [[15, 10, 1, "", "Classification"], [15, 10, 1, "", "ModelBundle"], [15, 10, 1, "", "Preprocessing"], [15, 12, 1, "", "benchmark"], [15, 12, 1, "", "entrypoint"], [15, 12, 1, "", "get_dataloader"], [15, 12, 1, "", "get_decode_func"], [15, 12, 1, "", "get_model"]], "imagenet_classification.Classification": [[15, 11, 1, "", "forward"]], "imagenet_classification.ModelBundle": [[15, 11, 1, "", "forward"]], "imagenet_classification.Preprocessing": [[15, 11, 1, "", "forward"]], "multi_thread_preprocessing": [[154, 12, 1, "", "entrypoint"], [154, 12, 1, "", "exp_spdl"], [154, 12, 1, "", "exp_torch"], [154, 12, 1, "", "run_dataloader"]], "performance_analysis": [[155, 10, 1, "", "CustomQueue"], [155, 10, 1, "", "CustomTaskHook"], [155, 12, 1, "", "build_pipeline"], [155, 12, 1, "", "decode"], [155, 12, 1, "", "main"], [155, 12, 1, "", "parse_args"]], "performance_analysis.CustomQueue": [[155, 11, 1, "", "interval_stats_callback"]], "performance_analysis.CustomTaskHook": [[155, 11, 1, "", "interval_stats_callback"]], "spdl": [[156, 9, 0, "-", "dataloader"], [161, 9, 0, "-", "io"], [248, 9, 0, "-", "pipeline"], [262, 9, 0, "-", "source"]], "spdl.dataloader": [[157, 10, 1, "", "CacheDataLoader"], [158, 10, 1, "", "DataLoader"], [159, 10, 1, "", "PyTorchDataLoader"], [160, 12, 1, "", "get_pytorch_dataloader"]], "spdl.dataloader.CacheDataLoader": [[157, 11, 1, "", "__iter__"], [157, 11, 1, "", "__len__"]], "spdl.dataloader.DataLoader": [[158, 11, 1, "", "__iter__"]], "spdl.dataloader.PyTorchDataLoader": [[159, 11, 1, "", "__iter__"], [159, 11, 1, "", "__len__"]], "spdl.io": [[162, 10, 1, "", "AudioCodec"], [163, 10, 1, "", "AudioDecoder"], [164, 10, 1, "", "AudioEncodeConfig"], [165, 10, 1, "", "AudioEncoder"], [166, 10, 1, "", "AudioFrames"], [167, 10, 1, "", "AudioPackets"], [168, 10, 1, "", "BSF"], [169, 10, 1, "", "CPUBuffer"], [170, 10, 1, "", "CPUStorage"], [171, 10, 1, "", "CUDABuffer"], [172, 10, 1, "", "CUDAConfig"], [173, 10, 1, "", "DecodeConfig"], [174, 12, 1, "", "Decoder"], [175, 10, 1, "", "DemuxConfig"], [176, 10, 1, "", "Demuxer"], [177, 10, 1, "", "FilterGraph"], [178, 10, 1, "", "Frames"], [179, 10, 1, "", "ImageCodec"], [180, 10, 1, "", "ImageDecoder"], [181, 10, 1, "", "ImageFrames"], [182, 10, 1, "", "ImagePackets"], [183, 10, 1, "", "Muxer"], [184, 10, 1, "", "NpzFile"], [185, 10, 1, "", "NvDecDecoder"], [186, 10, 1, "", "Packets"], [187, 10, 1, "", "VideoCodec"], [188, 10, 1, "", "VideoDecoder"], [189, 10, 1, "", "VideoEncodeConfig"], [190, 10, 1, "", "VideoEncoder"], [191, 10, 1, "", "VideoFrames"], [192, 10, 1, "", "VideoPackets"], [193, 12, 1, "", "apply_bsf"], [194, 12, 1, "", "audio_encode_config"], [195, 12, 1, "", "convert_array"], [196, 12, 1, "", "convert_frames"], [197, 12, 1, "", "cpu_storage"], [198, 12, 1, "", "create_reference_audio_frame"], [199, 12, 1, "", "create_reference_video_frame"], [200, 12, 1, "", "cuda_config"], [201, 12, 1, "", "decode_config"], [202, 12, 1, "", "decode_image_nvjpeg"], [203, 12, 1, "", "decode_packets"], [204, 12, 1, "", "decode_packets_nvdec"], [205, 12, 1, "", "demux_audio"], [206, 12, 1, "", "demux_config"], [207, 12, 1, "", "demux_image"], [208, 12, 1, "", "demux_video"], [209, 12, 1, "", "encode_image"], [210, 12, 1, "", "get_abuffer_desc"], [211, 12, 1, "", "get_audio_filter_desc"], [212, 12, 1, "", "get_buffer_desc"], [213, 12, 1, "", "get_filter_desc"], [214, 12, 1, "", "get_video_filter_desc"], [215, 12, 1, "", "load_audio"], [216, 12, 1, "", "load_image"], [217, 12, 1, "", "load_image_batch"], [218, 12, 1, "", "load_image_batch_nvjpeg"], [219, 12, 1, "", "load_npy"], [220, 12, 1, "", "load_npz"], [221, 12, 1, "", "load_video"], [222, 12, 1, "", "nv12_to_bgr"], [223, 12, 1, "", "nv12_to_rgb"], [224, 12, 1, "", "nvdec_decoder"], [225, 12, 1, "", "sample_decode_video"], [226, 12, 1, "", "save_image"], [227, 12, 1, "", "streaming_load_video_nvdec"], [228, 12, 1, "", "to_jax"], [229, 12, 1, "", "to_numba"], [230, 12, 1, "", "to_numpy"], [231, 12, 1, "", "to_torch"], [232, 12, 1, "", "transfer_buffer"], [233, 12, 1, "", "transfer_buffer_cpu"], [234, 12, 1, "", "transfer_tensor"], [235, 9, 0, "-", "utils"], [247, 12, 1, "", "video_encode_config"]], "spdl.io.AudioCodec": [[162, 14, 1, "", "channel_layout"], [162, 14, 1, "", "name"], [162, 14, 1, "", "num_channels"], [162, 14, 1, "", "sample_fmt"], [162, 14, 1, "", "sample_rate"], [162, 14, 1, "", "time_base"]], "spdl.io.AudioDecoder": [[163, 11, 1, "", "decode"], [163, 11, 1, "", "flush"]], "spdl.io.AudioEncoder": [[165, 11, 1, "", "encode"], [165, 11, 1, "", "flush"], [165, 14, 1, "", "frame_size"]], "spdl.io.AudioFrames": [[166, 11, 1, "", "__len__"], [166, 11, 1, "", "clone"], [166, 14, 1, "", "num_channels"], [166, 14, 1, "", "num_frames"], [166, 14, 1, "", "sample_fmt"], [166, 14, 1, "", "sample_rate"]], "spdl.io.AudioPackets": [[167, 11, 1, "", "clone"], [167, 14, 1, "", "codec"], [167, 14, 1, "", "num_channels"], [167, 14, 1, "", "sample_rate"], [167, 14, 1, "", "timestamp"]], "spdl.io.BSF": [[168, 11, 1, "", "filter"], [168, 11, 1, "", "flush"]], "spdl.io.CUDABuffer": [[171, 14, 1, "", "device_index"]], "spdl.io.Demuxer": [[176, 14, 1, "", "audio_codec"], [176, 14, 1, "", "audio_stream_index"], [176, 11, 1, "", "demux_audio"], [176, 11, 1, "", "demux_image"], [176, 11, 1, "", "demux_video"], [176, 11, 1, "", "has_audio"], [176, 14, 1, "", "image_codec"], [176, 11, 1, "", "streaming_demux"], [176, 14, 1, "", "video_codec"], [176, 14, 1, "", "video_stream_index"]], "spdl.io.FilterGraph": [[177, 11, 1, "", "add_frames"], [177, 11, 1, "", "flush"], [177, 11, 1, "", "get_frames"]], "spdl.io.ImageCodec": [[179, 14, 1, "", "height"], [179, 14, 1, "", "name"], [179, 14, 1, "", "pix_fmt"], [179, 14, 1, "", "sample_aspect_ratio"], [179, 14, 1, "", "time_base"], [179, 14, 1, "", "width"]], "spdl.io.ImageDecoder": [[180, 11, 1, "", "decode"]], "spdl.io.ImageFrames": [[181, 11, 1, "", "clone"], [181, 14, 1, "", "height"], [181, 14, 1, "", "metadata"], [181, 14, 1, "", "num_planes"], [181, 14, 1, "", "pix_fmt"], [181, 14, 1, "", "pts"], [181, 14, 1, "", "width"]], "spdl.io.ImagePackets": [[182, 11, 1, "", "clone"], [182, 14, 1, "", "codec"], [182, 14, 1, "", "height"], [182, 14, 1, "", "pix_fmt"], [182, 14, 1, "", "width"]], "spdl.io.Muxer": [[183, 11, 1, "", "add_encode_stream"], [183, 11, 1, "", "add_remux_stream"], [183, 11, 1, "", "close"], [183, 11, 1, "", "flush"], [183, 11, 1, "", "open"], [183, 11, 1, "", "write"]], "spdl.io.NpzFile": [[184, 11, 1, "", "__getitem__"], [184, 11, 1, "", "__iter__"], [184, 11, 1, "", "__len__"]], "spdl.io.NvDecDecoder": [[185, 11, 1, "", "decode"], [185, 11, 1, "", "flush"], [185, 11, 1, "", "init"]], "spdl.io.VideoCodec": [[187, 14, 1, "", "frame_rate"], [187, 14, 1, "", "height"], [187, 14, 1, "", "name"], [187, 14, 1, "", "pix_fmt"], [187, 14, 1, "", "sample_aspect_ratio"], [187, 14, 1, "", "time_base"], [187, 14, 1, "", "width"]], "spdl.io.VideoDecoder": [[188, 11, 1, "", "decode"], [188, 11, 1, "", "flush"]], "spdl.io.VideoEncoder": [[190, 11, 1, "", "encode"], [190, 11, 1, "", "flush"]], "spdl.io.VideoFrames": [[191, 11, 1, "", "__getitem__"], [191, 11, 1, "", "__len__"], [191, 11, 1, "", "clone"], [191, 11, 1, "", "get_pts"], [191, 11, 1, "", "get_timestamps"], [191, 14, 1, "", "height"], [191, 14, 1, "", "num_frames"], [191, 14, 1, "", "num_planes"], [191, 14, 1, "", "pix_fmt"], [191, 14, 1, "", "time_base"], [191, 14, 1, "", "width"]], "spdl.io.VideoPackets": [[192, 11, 1, "", "__len__"], [192, 11, 1, "", "clone"], [192, 14, 1, "", "codec"], [192, 14, 1, "", "frame_rate"], [192, 11, 1, "", "get_timestamps"], [192, 14, 1, "", "height"], [192, 14, 1, "", "pix_fmt"], [192, 14, 1, "", "timestamp"], [192, 14, 1, "", "width"]], "spdl.io.utils": [[236, 12, 1, "", "built_with_cuda"], [237, 12, 1, "", "built_with_nvcodec"], [238, 12, 1, "", "built_with_nvjpeg"], [239, 12, 1, "", "get_ffmpeg_filters"], [240, 12, 1, "", "get_ffmpeg_log_level"], [241, 12, 1, "", "get_ffmpeg_versions"], [242, 12, 1, "", "set_ffmpeg_log_level"], [243, 12, 1, "", "trace_counter"], [244, 12, 1, "", "trace_event"], [245, 12, 1, "", "trace_gc"], [246, 12, 1, "", "tracing"]], "spdl.pipeline": [[249, 10, 1, "", "AsyncQueue"], [250, 10, 1, "", "Pipeline"], [251, 10, 1, "", "PipelineBuilder"], [252, 15, 1, "", "PipelineFailure"], [253, 10, 1, "", "QueuePerfStats"], [254, 10, 1, "", "StatsQueue"], [255, 10, 1, "", "TaskHook"], [256, 10, 1, "", "TaskPerfStats"], [257, 10, 1, "", "TaskStatsHook"], [258, 12, 1, "", "cache_iterator"], [259, 12, 1, "", "create_task"], [260, 12, 1, "", "iterate_in_subprocess"], [261, 12, 1, "", "run_pipeline_in_subprocess"]], "spdl.pipeline.AsyncQueue": [[249, 11, 1, "", "stage_hook"]], "spdl.pipeline.Pipeline": [[250, 11, 1, "", "__iter__"], [250, 11, 1, "", "auto_stop"], [250, 11, 1, "", "get_item"], [250, 11, 1, "", "get_iterator"], [250, 11, 1, "", "start"], [250, 11, 1, "", "stop"]], "spdl.pipeline.PipelineBuilder": [[251, 11, 1, "", "add_sink"], [251, 11, 1, "", "add_source"], [251, 11, 1, "", "aggregate"], [251, 11, 1, "", "build"], [251, 11, 1, "", "disaggregate"], [251, 11, 1, "", "pipe"]], "spdl.pipeline.QueuePerfStats": [[253, 13, 1, "", "ave_get_time"], [253, 13, 1, "", "ave_put_time"], [253, 13, 1, "", "elapsed"], [253, 13, 1, "", "num_items"], [253, 13, 1, "", "occupancy_rate"], [253, 14, 1, "", "qps"]], "spdl.pipeline.StatsQueue": [[254, 11, 1, "", "get"], [254, 11, 1, "", "interval_stats_callback"], [254, 11, 1, "", "put"], [254, 11, 1, "", "stage_hook"]], "spdl.pipeline.TaskHook": [[255, 11, 1, "", "stage_hook"], [255, 11, 1, "", "task_hook"]], "spdl.pipeline.TaskPerfStats": [[256, 13, 1, "", "ave_time"], [256, 13, 1, "", "num_failures"], [256, 13, 1, "", "num_tasks"]], "spdl.pipeline.TaskStatsHook": [[257, 11, 1, "", "interval_stats_callback"], [257, 11, 1, "", "stage_hook"], [257, 11, 1, "", "task_hook"]], "spdl.source": [[263, 10, 1, "", "DistributedDeterministicSampler"], [264, 10, 1, "", "DistributedRandomSampler"], [265, 10, 1, "", "IterableWithShuffle"], [266, 10, 1, "", "SizedIterable"], [267, 10, 1, "", "SizedIterableWithShuffle"], [268, 9, 0, "-", "imagenet"], [272, 9, 0, "-", "local_directory"], [274, 9, 0, "-", "utils"]], "spdl.source.DistributedDeterministicSampler": [[263, 11, 1, "", "__iter__"], [263, 11, 1, "", "__len__"]], "spdl.source.DistributedRandomSampler": [[264, 11, 1, "", "__iter__"], [264, 11, 1, "", "__len__"], [264, 11, 1, "", "shuffle"]], "spdl.source.IterableWithShuffle": [[265, 11, 1, "", "shuffle"]], "spdl.source.SizedIterableWithShuffle": [[267, 11, 1, "", "shuffle"]], "spdl.source.imagenet": [[269, 10, 1, "", "ImageNet"], [270, 12, 1, "", "get_mappings"], [271, 12, 1, "", "parse_wnid"]], "spdl.source.imagenet.ImageNet": [[269, 11, 1, "", "__iter__"], [269, 11, 1, "", "shuffle"]], "spdl.source.local_directory": [[273, 10, 1, "", "LocalDirectory"]], "spdl.source.local_directory.LocalDirectory": [[273, 11, 1, "", "__iter__"], [273, 11, 1, "", "shuffle"]], "spdl.source.utils": [[275, 10, 1, "", "MergeIterator"], [276, 12, 1, "", "embed_shuffle"], [277, 12, 1, "", "repeat_source"]], "spdl.source.utils.MergeIterator": [[275, 11, 1, "", "__iter__"]], "streaming_nvdec_decoding": [[278, 12, 1, "", "decode"], [278, 12, 1, "", "main"], [278, 12, 1, "", "parse_args"], [278, 12, 1, "", "run"], [278, 12, 1, "", "torch_cuda_warmup"]], "streaming_video_processing": [[279, 12, 1, "", "build_components"], [279, 12, 1, "", "get_filter_desc"], [279, 12, 1, "", "main"], [279, 12, 1, "", "parse_args"], [279, 12, 1, "", "process"]], "video_dataloading": [[280, 10, 1, "", "PerfResult"], [280, 12, 1, "", "benchmark"], [280, 12, 1, "", "decode_video"], [280, 12, 1, "", "decode_video_nvdec"], [280, 12, 1, "", "entrypoint"], [280, 12, 1, "", "get_pipeline"], [280, 12, 1, "", "source"], [280, 12, 1, "", "worker_entrypoint"]], "video_dataloading.PerfResult": [[280, 13, 1, "", "elapsed"], [280, 13, 1, "", "num_batches"], [280, 13, 1, "", "num_frames"]]}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "type", "C++ type"], "3": ["cpp", "member", "C++ member"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "templateParam", "C++ template parameter"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "enumerator", "C++ enumerator"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "method", "Python method"], "12": ["py", "function", "Python function"], "13": ["py", "attribute", "Python attribute"], "14": ["py", "property", "Python property"], "15": ["py", "exception", "Python exception"]}, "objtypes": {"0": "c:macro", "1": "cpp:class", "2": "cpp:type", "3": "cpp:member", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:templateParam", "7": "cpp:enum", "8": "cpp:enumerator", "9": "py:module", "10": "py:class", "11": "py:method", "12": "py:function", "13": "py:attribute", "14": "py:property", "15": "py:exception"}, "terms": {"": [1, 2, 3, 4, 5, 6, 7, 9, 14, 15, 88, 97, 98, 99, 155, 158, 159, 166, 178, 186, 200, 223, 242, 251, 260, 271, 279, 280, 281, 282, 284, 285, 286, 293, 294, 296, 298, 299, 302, 303, 305], "0": [3, 13, 14, 15, 85, 94, 98, 99, 105, 114, 154, 155, 158, 183, 185, 186, 197, 201, 204, 214, 219, 220, 242, 243, 251, 253, 264, 275, 276, 277, 278, 279, 280, 281, 286, 287, 289, 293, 297, 298, 302, 304], "04": [288, 293], "05d": 278, "06": 288, "1": [3, 4, 9, 12, 13, 14, 15, 19, 85, 88, 90, 99, 154, 155, 160, 176, 177, 183, 185, 186, 194, 210, 211, 212, 214, 222, 223, 241, 247, 249, 251, 253, 254, 257, 261, 264, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 289, 293, 297, 298, 299, 304], "10": [185, 204, 220, 223, 250, 264, 275, 289, 299], "100": [1, 7, 154, 241, 259, 297, 299, 301], "1000": [13, 270], "1080": 278, "11": [275, 284, 288, 289], "12": [275, 284, 293, 297], "120": 155, "1234": 183, "128": [155, 223], "12800": 177, "13": [4, 186, 284, 289, 299, 302], "14": 3, "15": [14, 186, 280, 284, 289, 298], "16": [13, 14, 15, 154, 166, 194, 198, 199, 209, 223, 226, 242, 280, 293, 298], "17": 284, "19": [284, 298], "1920": 278, "198": 209, "1c": 177, "1f": [13, 278], "2": [3, 9, 13, 15, 58, 85, 88, 89, 99, 154, 155, 160, 223, 227, 241, 243, 259, 264, 275, 278, 279, 280, 281, 282, 284, 289, 293, 298, 302], "20": [9, 15, 219, 275, 289, 298], "200": 299, "20067": [288, 305], "2024": 288, "2025": 288, "20mb": 293, "21": [275, 284], "22": [275, 288], "222": 280, "224": [14, 15, 154, 158, 287, 293], "2240": 15, "224x224": 293, "224x224x3": 293, "225": 154, "2250": 15, "229": 154, "2290": 15, "23": [284, 288, 298], "24": [242, 293], "240": [186, 278], "25": 288, "2504": [288, 305], "255": [15, 154, 209], "256": [13, 15, 293], "26": 9, "2d": 198, "2f": [14, 15, 154, 280], "2x": 154, "2x4": 293, "3": [3, 4, 6, 12, 13, 15, 99, 154, 155, 158, 176, 186, 197, 199, 202, 206, 209, 223, 226, 241, 243, 250, 251, 260, 264, 278, 279, 280, 281, 282, 284, 289, 293, 298], "30": [250, 298], "300m": 185, "30m": 299, "32": [4, 6, 13, 14, 15, 154, 158, 166, 194, 198, 209, 211, 242, 278, 287, 293], "320": [186, 278, 280], "320x240": 177, "320x480": 177, "32bit": 194, "32x0": 293, "340": 1, "3670924": 12, "3d": 199, "3x3": 223, "4": [4, 6, 7, 9, 12, 13, 99, 154, 223, 264, 279, 282, 287, 289, 293, 297, 302, 303, 304], "40": [14, 242, 301, 303], "406": 154, "4060": 15, "4096": 246, "4147200": 293, "44100": 177, "44100hz": 177, "456": 154, "4560": 15, "48": 242, "480": 13, "485": 154, "4850": 15, "4d": 199, "5": [15, 99, 154, 183, 186, 223, 243, 264, 275, 279, 284, 289, 302, 303, 305], "50": 1, "500": 278, "52": 293, "56": 242, "58": 241, "6": [13, 15, 99, 223, 264, 279, 289, 305], "60": [9, 15, 241], "600x240": 177, "63": 194, "636": 270, "64": [166, 198], "640": 13, "68783184": 12, "7": [15, 99, 186, 223, 243, 264, 279, 284, 289, 298, 299, 302], "720x480": 293, "720x480x12": 293, "7x": 154, "8": [6, 13, 14, 154, 155, 158, 166, 194, 198, 223, 226, 242, 264, 279, 280, 293, 297, 298, 302, 304], "8096": [99, 107], "849": 302, "85": 297, "8bit": 199, "9": [186, 223, 241, 264, 275, 279, 284], "96": 209, "99": 297, "A": [1, 3, 4, 5, 6, 14, 15, 155, 158, 159, 166, 167, 176, 177, 181, 182, 184, 191, 192, 193, 195, 196, 200, 202, 204, 217, 218, 223, 228, 229, 230, 231, 234, 251, 255, 265, 266, 267, 280, 281, 282, 287, 298, 302, 304], "And": 293, "As": [1, 3, 7, 293, 294, 296, 297, 299, 302, 303, 304, 305], "At": [249, 301, 302], "But": [280, 296, 297, 302], "By": [153, 186, 192, 200, 201, 223, 258, 260, 264, 275, 278, 289, 293, 298, 299, 302], "For": [2, 3, 6, 7, 94, 155, 177, 179, 183, 191, 194, 200, 242, 279, 280, 281, 282, 285, 286, 287, 293, 296, 297, 302, 303, 304], "If": [1, 3, 4, 5, 6, 7, 9, 12, 13, 98, 158, 166, 168, 176, 185, 191, 192, 197, 203, 210, 212, 214, 217, 218, 223, 224, 225, 226, 234, 247, 250, 251, 255, 258, 260, 264, 271, 275, 276, 278, 281, 285, 286, 287, 293, 296, 297, 298, 299, 302, 305], "In": [1, 3, 4, 5, 7, 8, 12, 154, 155, 165, 166, 260, 264, 279, 281, 284, 285, 286, 292, 293, 296, 297, 300, 301, 304], "It": [1, 3, 4, 5, 7, 9, 14, 85, 97, 99, 157, 158, 184, 200, 219, 220, 250, 251, 253, 255, 279, 280, 281, 284, 285, 287, 292, 293, 297, 299, 301, 302, 304, 305], "Its": [7, 305], "NOT": [284, 288], "No": [97, 158], "On": [1, 3, 154, 297], "One": [3, 5, 13, 184, 206, 249, 260, 281, 286, 289, 293, 296, 300, 302], "Or": 282, "Such": [6, 85, 304], "TO": 284, "That": [6, 284, 293], "The": [2, 3, 8, 9, 12, 13, 14, 15, 85, 89, 154, 155, 157, 158, 159, 162, 165, 166, 167, 168, 171, 174, 176, 177, 179, 181, 182, 183, 185, 186, 187, 191, 192, 193, 194, 196, 197, 198, 199, 200, 202, 204, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 223, 225, 226, 227, 234, 242, 243, 244, 246, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 267, 269, 270, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 305], "Then": [7, 279, 286, 293], "There": [3, 4, 7, 219, 260, 281, 282, 284, 285, 286, 287, 293, 296, 298, 299, 302, 304], "These": [4, 7, 85, 100, 289, 298, 303, 305], "To": [3, 4, 7, 9, 12, 14, 15, 155, 158, 168, 169, 171, 185, 186, 203, 251, 255, 279, 281, 284, 286, 289, 293, 296, 297, 301], "With": [7, 9, 264, 302], "_": [3, 13, 15, 154, 155, 185, 278], "__all__": [13, 14, 15, 154, 155, 278, 279, 280], "__await__": [5, 281], "__doc__": [14, 15, 155, 278, 279, 280], "__getitem__": [6, 154, 184, 191, 251, 293], "__getstate__": 286, "__has_includ": 99, "__init__": [6, 13, 15, 155], "__iter__": [13, 157, 158, 159, 184, 250, 260, 263, 264, 269, 273, 275, 276, 284, 303], "__len__": [157, 159, 166, 184, 191, 192, 263, 264], "__main__": [13, 14, 15, 154, 155, 278, 279, 280], "__name__": [13, 14, 15, 154, 155, 278, 279, 280], "__placeholder__": 225, "__repr__": 186, "__setstate__": 286, "_arg": 154, "_cmd": 260, "_decode_func": 280, "_dump_np": 13, "_dump_torch": 13, "_enter_iteration_mod": 260, "_execute_iter": 260, "_expand": 15, "_filter_desc_default": [174, 203, 215, 216, 217, 221], "_frame": [14, 280], "_get_dataload": 15, "_get_decode_fn": 280, "_get_experimental_nvjpeg_decode_funct": 15, "_get_load_fn": 13, "_get_pipelin": [14, 280], "_get_threadlocal_stream": 286, "_init": [14, 280], "_init_log": [14, 15, 280], "_is_audio": [10, 50, 78, 94, 101], "_is_imag": [10, 50, 78, 94, 101], "_is_video": [10, 50, 78, 94, 101], "_iterate_result": 260, "_lg": [14, 15, 280], "_log": 155, "_mp4toannexb": 185, "_parse_arg": [14, 15, 154, 280], "_parse_process_arg": [14, 280], "_print": 154, "_read_arrai": 219, "_read_array_head": 219, "_scalart": [13, 184, 219], "_signum": [14, 280], "_spdl_ffmpeg6": 186, "_src": 6, "_static": 155, "_statu": 260, "_step": 155, "_subprocessiter": 260, "_writer": 155, "aac": 183, "ab": [288, 305], "abc": [13, 14, 15, 154, 155, 184, 280], "abhinandan": 288, "abl": [3, 5, 297, 299], "abort": [255, 260], "about": [1, 3, 5, 9, 88, 185, 186, 281, 285, 293, 297, 299, 305], "abov": [1, 5, 6, 9, 209, 296, 297, 298, 302], "absorb": [251, 255], "absort": 255, "abstract": [1, 3, 85, 88, 98, 158, 255, 293, 294, 296, 303, 305], "abuff": [177, 210, 212], "abuffersink": [177, 210], "acc1": 15, "acc5": 15, "acceler": 185, "access": [7, 155, 183, 184, 186, 197, 285, 293, 296], "accessor": 296, "accommod": [280, 282], "accomplish": [3, 281], "accordingli": 165, "accumul": 287, "accuraci": [15, 299], "achiev": [3, 4, 7, 12, 157, 258, 281, 286, 292, 293, 294, 299, 300, 301, 305], "acknowledg": 260, "acquir": 302, "acquisit": 293, "across": [263, 286, 288, 297, 300], "act": [183, 282], "action": [14, 15, 255, 280, 298], "activ": [1, 3, 234, 302], "actual": [5, 85, 89, 179, 260, 289, 296, 299], "ad": [3, 98, 100, 154], "adaptor": [37, 47, 55, 63, 80, 91, 101, 103, 105, 113, 115, 116, 153], "add": [1, 3, 97, 98, 155, 177, 183, 255, 259, 279, 281, 289, 293, 301], "add_argu": [14, 15, 154, 155, 278, 279, 280], "add_done_callback": 3, "add_encode_stream": [10, 25, 78, 96, 101, 165, 183, 190, 279], "add_fram": [10, 22, 78, 93, 101, 177, 210, 212, 279], "add_pointer_t": 98, "add_remux_stream": [10, 25, 78, 96, 101, 183, 279], "add_scalar": 155, "add_sink": [6, 12, 13, 14, 154, 155, 250, 251, 280, 282, 284, 286, 287, 293, 297, 303], "add_sourc": [6, 12, 13, 14, 154, 155, 250, 251, 280, 282, 284, 286, 287, 293, 297, 303], "addit": [6, 7, 85, 154, 287, 293, 296, 302, 303, 304, 305], "address": [3, 200], "adjust": [3, 214, 280, 293, 294, 300], "admonit": 279, "adopt": [292, 293, 294, 305], "advancc": [2, 281], "advantag": [12, 281, 286], "advis": [3, 6, 12, 281], "affect": [7, 13, 242, 282, 297, 298], "affili": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280], "after": [9, 155, 157, 185, 186, 203, 204, 214, 223, 250, 255, 258, 275, 284, 293, 296, 297, 298, 301], "afterward": 303, "again": 1, "against": [154, 289, 292], "aggerg": 158, "aggreg": [6, 14, 15, 154, 158, 251, 280, 284, 286, 287, 293, 294, 297, 303], "agnost": [1, 281], "ahead": 304, "ai": [4, 279, 288, 300, 305], "aim": [281, 305], "alex": 288, "algorithm": 214, "align": [5, 85], "aliv": [198, 199, 296], "all": [2, 3, 7, 9, 12, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 177, 183, 191, 192, 234, 242, 263, 264, 275, 278, 279, 280, 281, 282, 284, 286, 293, 298, 302], "all_reduc": [298, 304], "alloc": [14, 15, 158, 170, 185, 197, 200, 278, 280, 293, 299, 302], "allocator_typ": [17, 98], "allow": [1, 4, 5, 6, 97, 177, 183, 250, 260, 285, 286, 294, 297, 298, 299, 300, 302, 305], "allow_pickl": [7, 13], "almost": [154, 159, 220, 298], "alon": 290, "along": [12, 294], "alongsid": [5, 260], "alpha": 204, "alreadi": [3, 251, 281], "also": [3, 4, 5, 6, 7, 9, 12, 184, 186, 192, 281, 286, 287, 293, 296, 297, 301, 302, 304, 305], "alt": 155, "altern": [3, 7, 186, 279, 282], "although": [294, 302], "alwai": [4, 191, 253, 284, 286, 297, 298], "am": 298, "among": 12, "amount": [4, 5, 260, 304], "an": [1, 2, 3, 4, 5, 6, 7, 12, 13, 15, 91, 155, 158, 177, 180, 182, 183, 186, 191, 198, 199, 200, 210, 212, 217, 218, 224, 225, 234, 242, 244, 247, 250, 251, 252, 254, 255, 260, 261, 269, 271, 277, 279, 282, 283, 284, 285, 287, 293, 296, 297, 298, 299, 301, 302, 304, 305], "analogi": 298, "analys": 300, "analysi": [7, 9, 285, 288, 293, 294, 297, 300], "analyz": [7, 253, 254, 256, 257, 285, 288, 300, 302], "andrei": 288, "ani": [4, 5, 9, 13, 168, 184, 217, 218, 219, 225, 250, 259, 260, 261, 281, 282, 286, 294, 299, 304], "annex": [168, 185, 193], "annor": 1, "annot": [1, 302], "anoth": [1, 5, 279, 282, 286, 296, 298, 299, 301, 302], "answer": [7, 293, 299], "anti": [250, 251, 284, 301, 302], "anul": [177, 210], "anyfram": [10, 22, 50, 78, 82, 93, 94, 101], "anypacket": [10, 27, 53, 78, 82, 91, 97, 101], "anyth": 255, "anytim": [3, 281], "anywher": 285, "aoption": 305, "apach": 289, "api": [4, 179, 200, 202, 204, 296, 302], "app": 183, "appar": 296, "appear": 9, "append": 154, "appli": [3, 9, 154, 155, 158, 168, 185, 192, 193, 203, 226, 251, 264, 265, 267, 269, 273, 279, 285, 287, 293, 298, 299, 303], "applic": [4, 154, 281, 284, 286, 289, 299, 305], "apply_bsf": [168, 185], "apprach": 281, "approach": [3, 186, 281, 286, 292, 299, 300, 302], "approxim": 9, "ar": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 85, 97, 98, 100, 154, 155, 158, 159, 165, 166, 176, 178, 183, 185, 186, 191, 192, 200, 202, 209, 211, 214, 218, 223, 226, 234, 236, 237, 238, 242, 249, 250, 251, 253, 254, 258, 260, 264, 269, 270, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305], "arang": [219, 220], "architectur": [9, 159, 297], "archiv": [184, 220], "archiveprefix": 288, "arg": [12, 13, 14, 15, 154, 155, 213, 278, 279, 280], "argpars": [14, 15, 154, 155, 278, 279, 280], "args_": [14, 15, 280], "args_set": [14, 280], "argset": 154, "argument": [12, 155, 183, 186, 200, 210, 212, 214, 215, 216, 217, 221, 223, 226, 250, 251, 260, 278, 279, 282, 286, 287], "argumentpars": [14, 15, 154, 155, 278, 279, 280], "argv": 278, "aris": [294, 304], "around": [4, 5, 9, 88, 154, 157, 184, 251, 259, 284, 286, 288, 298, 302, 303], "arr": 13, "arrai": [4, 7, 13, 45, 58, 89, 99, 104, 158, 165, 169, 171, 176, 183, 184, 190, 191, 195, 198, 199, 209, 219, 228, 229, 230, 231, 247, 279, 286, 293, 302], "array_equ": [219, 220], "arxiv": [288, 305], "asctim": [14, 15, 280], "asfract": 199, "ask": [97, 288, 294, 299], "aspect": [179, 187, 214, 281], "assert": [219, 220, 278, 279], "assess": 299, "assign": [3, 249, 254, 255, 263, 264, 281, 284], "assum": [3, 281], "async": [1, 3, 15, 155, 158, 250, 251, 254, 255, 257, 282, 284, 286, 287, 288, 295, 302, 305], "async_decode_packet": 201, "async_demux_audio": 206, "async_demux_media": [201, 206], "async_demux_video": 201, "async_load_image_batch": 15, "async_load_image_batch_nvjpeg": 15, "async_preprocess": 282, "async_wrapp": 4, "asynccontextmanag": 255, "asynchron": [1, 2, 3, 4, 5, 234, 251, 281, 282, 286, 287, 302], "asynchronous_my_func": 286, "asyncio": [1, 2, 3, 4, 5, 155, 206, 249, 250, 251, 259, 281, 286, 296, 302], "asynciter": [158, 249, 251, 254, 255, 257, 287], "asyncqueu": [251, 254, 261], "attach": [3, 4, 155, 181, 210, 212, 245, 251, 281, 287, 297], "attempt": [1, 3, 9, 186, 253, 294, 296, 297, 302], "attend": [1, 3, 281], "attribut": [162, 165, 166, 167, 171, 176, 179, 181, 182, 187, 191, 192, 249, 253, 254, 256, 284], "audio": [10, 39, 78, 88, 92, 94, 97, 99, 101, 119, 124, 127, 132, 133, 142, 145, 148, 162, 163, 164, 165, 166, 167, 183, 186, 190, 193, 196, 198, 205, 210, 211, 215, 250, 279, 294, 297, 305], "audio_codec": [176, 183, 210, 279], "audio_decod": 176, "audio_encode_config": [164, 183], "audio_fram": 177, "audio_index": 279, "audio_packet": 279, "audio_stream_index": [176, 279], "audiocodec": [10, 44, 78, 82, 88, 101, 167, 174, 176, 183, 210], "audiodecod": 174, "audioencod": [10, 48, 78, 82, 92, 101, 183], "audioencodeconfig": [10, 55, 78, 82, 99, 101, 183, 194], "audioencoderptr": [10, 48, 78, 82, 92, 101], "audiofram": [10, 50, 78, 82, 94, 101, 163, 165, 177, 196, 198, 203], "audioframesptr": [10, 50, 58, 78, 82, 89, 94, 101, 134], "audiopacket": [10, 53, 78, 82, 97, 101, 163, 165, 176, 183, 193, 203, 205, 211, 213, 279], "audiopacketsptr": [10, 53, 78, 82, 97, 101, 146], "author": [288, 305], "auto": 89, "auto_stop": [13, 14, 154, 155, 250, 280, 284, 293, 303], "autograd": 278, "automag": 305, "automat": [6, 183, 250, 264, 284, 289], "autotun": 15, "av": 183, "av1": [10, 38, 78, 99, 101], "avail": [6, 97, 158, 168, 183, 193, 214, 239, 250, 253, 270, 275, 278, 280, 282, 286, 289, 293, 294, 297, 298, 301, 303], "avcodecid": 99, "avcodecparamet": [18, 88], "ave_get_tim": [155, 253], "ave_put_tim": [155, 253], "ave_tim": [14, 155, 256, 280, 297], "averag": [9, 253, 256, 300], "avformatcontext": [85, 105], "avfram": [94, 97, 178], "aviocontext": 85, "avmediatyp": 99, "avoid": [7, 12, 288, 293, 303], "avpacket": [26, 97, 186], "avrat": [10, 55, 78, 79, 99, 101, 151], "awai": [85, 88, 296], "await": [2, 3, 4, 15, 155, 158, 201, 250, 251, 286, 288, 296], "awar": [3, 12, 97, 289, 293, 302], "awkward": 281, "aync": 5, "b": [168, 185, 193, 196, 223, 247], "back": [1, 3, 5, 260, 279, 281, 286, 293, 297], "backbon": 15, "background": [7, 158, 186, 234, 250, 284, 286, 287, 289, 293, 296], "backward": [9, 299], "bandwidth": [3, 281, 294, 302], "bare": 3, "base": [7, 9, 10, 23, 78, 97, 101, 156, 183, 191, 202, 204, 255, 263, 264, 265, 266, 267, 269, 273, 275, 282, 288, 292, 293, 294, 305], "basecontext": 160, "baselin": [7, 9, 154], "baseselector": 5, "bash": 14, "basic": [3, 8, 220, 250, 251, 281, 293], "basicconfig": [14, 15, 155, 278, 280], "batch": [6, 9, 14, 15, 59, 89, 154, 158, 159, 185, 196, 217, 218, 223, 234, 258, 280, 286, 287, 291, 297, 298, 299, 301, 303], "batch_decod": 14, "batch_sampl": 160, "batch_siz": [14, 15, 154, 158, 160, 286, 293, 303], "batchifi": [6, 158], "becam": 1, "becaus": [2, 5, 7, 293, 296, 297, 298, 304, 305], "becom": [3, 7, 9, 158, 250, 253, 293, 294, 296, 297, 298, 299, 301, 304], "bed": 305, "been": [7, 260], "befor": [3, 4, 7, 15, 154, 158, 185, 247, 251, 253, 255, 258, 260, 275, 276, 279, 281, 286, 293, 296, 297, 298, 299, 301, 303], "begin": [3, 89, 280, 281], "behavior": [1, 9, 12, 94, 158, 184, 194, 201, 206, 214, 247, 254, 257, 275, 282], "being": [1, 3, 5, 250, 255, 281, 284, 287, 302], "believ": [3, 294], "bellow": [7, 154, 185], "below": 298, "benchmark": [7, 13, 14, 15, 154, 278, 280, 293, 305], "benefit": 294, "best": [3, 288, 294], "better": [98, 292], "between": [3, 4, 85, 254, 286, 287, 293, 296, 297, 304], "beyond": [293, 302], "bf": [168, 193], "bf16": 15, "bfloat16": 15, "bgr": [199, 202, 204, 222], "bgr24": [199, 226], "bgra": 204, "bibtex": 288, "bicub": 214, "bigger": 282, "bin": [13, 14, 154, 155, 279], "binari": [13, 289], "bind": [286, 289], "bit": [7, 58, 60, 89, 166, 185, 193, 194, 198, 199, 211, 226, 247, 293, 296], "bit_rat": [99, 186, 194, 247], "bits_per_sampl": 186, "bitstream": [97, 168, 193], "blob": 99, "block": [3, 5, 14, 15, 170, 197, 251, 253, 254, 280, 281, 284, 287, 296, 297, 298, 304], "blog": 288, "blue": 1, "bool": [10, 13, 14, 15, 16, 17, 20, 27, 66, 78, 86, 91, 95, 97, 98, 101, 109, 154, 158, 160, 168, 176, 192, 217, 219, 222, 223, 224, 236, 237, 238, 246, 251, 258, 259, 260, 276, 280], "boost": [7, 293], "both": [5, 154, 260, 286, 293, 297], "bottleneck": [7, 12, 157, 249, 258, 285, 288, 294, 297, 298, 299, 300, 304, 305], "bottom": 227, "bound": [3, 6, 281, 301, 302], "boundari": 7, "box": [3, 281, 305], "bp": [14, 280], "branch": [1, 7, 219, 281], "break": [6, 14, 15, 154, 278, 280], "breakdown": 9, "breviti": [3, 281], "bsd": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280, 289], "bsf": [10, 20, 37, 44, 53, 78, 80, 82, 91, 101, 153, 185, 193], "bsfimpl": 86, "bsftemplat": [79, 101], "bt2020": 223, "bt2020c": 223, "bt470": 223, "bt601": 223, "bt709": [223, 247, 279], "bucket": 287, "buf": [4, 13], "buffer": [3, 6, 14, 15, 37, 45, 50, 54, 55, 57, 80, 89, 94, 99, 101, 104, 117, 153, 154, 155, 158, 163, 165, 166, 168, 169, 176, 177, 181, 185, 188, 190, 191, 195, 196, 197, 202, 204, 206, 209, 212, 215, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 246, 249, 250, 251, 254, 260, 278, 279, 280, 284, 287, 293, 295, 297, 298], "buffer_arg": 279, "buffer_s": [10, 13, 14, 15, 78, 99, 101, 107, 155, 158, 206, 246, 249, 251, 254, 260, 280], "buffer_size_in_kb": [28, 100], "buffersink": [177, 212, 279], "bug": 3, "build": [1, 2, 3, 6, 12, 13, 14, 15, 99, 154, 155, 183, 210, 212, 250, 251, 261, 279, 280, 281, 282, 283, 285, 286, 287, 288, 293, 297, 303, 305], "build_compon": 279, "build_pipelin": 155, "builder": [154, 261, 286], "built": [280, 289, 297], "bulk": [7, 97], "bundl": [7, 13, 15], "byte": [6, 7, 13, 85, 176, 197, 202, 205, 207, 208, 215, 216, 217, 218, 219, 220, 221, 227, 246, 280, 286, 287, 293, 303], "bytearrai": 219, "bytesadaptor": [10, 41, 78, 82, 85, 101, 113], "bytesadaptorstruct": [79, 101], "bytesio": [7, 13, 219], "c": [7, 12, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 185, 196, 199, 202, 206, 220, 278, 279, 280, 282, 288, 289], "cabl": 302, "cach": [157, 224, 258, 286, 289, 300, 301], "cache_iter": [157, 299], "cachedataload": [7, 9, 299], "caching_allocator_alloc": [14, 15, 200, 278, 280], "caching_allocator_delet": [14, 15, 200, 278, 280], "calcul": 293, "call": [1, 3, 5, 7, 183, 185, 186, 219, 234, 249, 250, 251, 254, 255, 257, 258, 276, 279, 296, 302, 303, 304], "callabl": [3, 13, 15, 158, 160, 200, 251, 260, 261, 280, 286, 287], "callback": [1, 3, 5, 155, 254, 257, 259, 281, 287], "callback_chain": 3, "can": [1, 2, 3, 4, 5, 6, 7, 9, 12, 14, 85, 99, 154, 155, 157, 159, 165, 166, 167, 174, 176, 177, 181, 182, 183, 185, 191, 192, 197, 200, 206, 210, 211, 212, 214, 219, 223, 243, 250, 251, 254, 255, 257, 258, 260, 263, 264, 281, 282, 284, 285, 286, 287, 289, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "cancel": [250, 287, 296], "cannot": [3, 5, 7, 9, 12, 242, 281, 284, 293, 296, 297], "capac": [282, 294], "captur": 249, "care": [281, 302], "carefulli": 296, "carri": [88, 97, 285], "case": [1, 3, 5, 9, 12, 13, 88, 97, 165, 183, 185, 220, 260, 264, 280, 282, 286, 288, 293, 296, 297, 298, 299, 300, 302, 304], "case_studi": 13, "cast": [158, 169, 171], "catch": 304, "caught": 255, "caus": [3, 99, 186, 250, 251, 284, 298, 302, 304], "caveat": [181, 250, 251, 283], "cb": 3, "cd": [14, 280], "center": 214, "certain": [7, 186, 286, 299], "cfg": [19, 90, 201, 206], "chain": [2, 281, 298], "challeng": 3, "chanc": [293, 294], "chang": [4, 8, 9, 99, 154, 202, 204, 211, 214, 218, 223, 226, 281, 282, 289, 292, 293, 294, 297, 299, 302, 304], "channel": [162, 165, 166, 167, 191, 194, 196, 198, 199, 204, 209, 211, 222, 226, 280], "channel_layout": [162, 177], "char": [77, 94, 100], "characterist": 247, "chart": 281, "check": [1, 3, 236, 237, 238, 281, 285, 289, 293, 298, 302], "chip": 185, "choic": [7, 15, 186, 269, 296], "choos": [255, 275, 289, 296, 305], "chose": 201, "christian": 288, "chunk": [7, 227, 279], "circl": 1, "cite": 288, "cl": [6, 154], "clang": 289, "class": [3, 4, 7, 10, 12, 38, 39, 40, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 114, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 248, 249, 250, 251, 253, 254, 255, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 279, 284, 285, 286, 288, 292, 293, 297, 303], "class_map": 270, "classif": [6, 288, 293, 301], "classifi": 15, "cleanli": 296, "clear": 3, "clearli": 298, "cli": [13, 14, 15, 99, 154, 278, 280], "click": [13, 14, 15, 154, 155, 278, 279, 280], "client": 287, "clone": [10, 15, 50, 78, 82, 94, 101, 166, 167, 181, 182, 191, 192], "close": [1, 10, 25, 78, 96, 101, 155, 183, 253, 296, 297], "closer": 281, "closur": 12, "cloud": 303, "clss": 293, "cmake": 289, "cnocurr": 3, "code": [1, 3, 5, 7, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 186, 276, 277, 278, 279, 280, 281, 282, 284, 286, 289, 293, 294, 296, 297], "codec": [10, 16, 19, 20, 25, 37, 42, 46, 47, 53, 55, 78, 80, 82, 86, 90, 91, 96, 97, 101, 111, 118, 119, 120, 153, 162, 167, 168, 174, 176, 179, 182, 183, 185, 186, 187, 192, 210, 212, 289], "codec_config": [25, 96], "codecclass": [79, 101], "codecid": [10, 18, 55, 78, 82, 88, 99, 101], "codecidenum": [79, 101], "codecpar": 88, "coeff": [222, 223], "coeffici": 223, "collat": [154, 159, 286, 293, 297, 303], "collate_fn": [154, 160], "collect": [7, 13, 14, 15, 154, 155, 184, 186, 245, 253, 254, 256, 257, 280, 283, 284, 288, 297, 302], "collector": 284, "color": [191, 196, 203, 214, 222, 223, 247], "color_primari": [99, 247, 279], "color_primmari": 247, "color_trc": [99, 247, 279], "colorspac": [99, 247, 279], "com": [12, 99, 280], "combin": [6, 7, 215, 216, 217, 221, 242, 250, 251, 283], "come": [4, 281, 293, 294], "comlet": 281, "command": [155, 183, 260, 278, 279, 289], "common": [3, 9, 88, 94, 191, 203, 242, 281, 292, 298, 302, 304], "commonli": 293, "commun": [2, 7, 159, 263, 264, 293, 298], "compar": [4, 154, 157, 258, 292, 297], "comparison": 154, "compat": [6, 7, 179], "compet": [3, 302], "compil": [15, 236, 237, 238, 243, 289, 299], "complement": 4, "complet": [1, 3, 5, 158, 223, 234, 251, 255, 258, 260, 281, 282, 285, 293, 296, 297, 299, 301, 304], "complex": [1, 3, 5, 12, 281], "complic": [3, 281], "compon": [6, 191, 289, 293, 296, 305], "comport": 286, "compos": [3, 154, 158, 287, 288, 293, 296, 298, 302], "composit": [6, 234, 288, 293, 294, 300], "compress": [7, 13, 192, 194, 247, 302], "compression_level": [99, 194, 247], "compris": 191, "comput": [3, 4, 9, 15, 197, 234, 281, 294, 298, 299, 301, 302, 304, 305], "computation": 303, "con": [4, 291], "conccur": [3, 281], "conceptu": 293, "concern": [3, 5, 281], "concret": [1, 234], "concurr": [1, 2, 5, 6, 7, 12, 13, 14, 15, 154, 155, 158, 250, 251, 253, 280, 283, 286, 288, 291, 293, 294, 297, 300, 303, 305], "condit": [219, 286, 289], "conduct": [301, 305], "config": [10, 13, 28, 78, 100, 101, 176, 183, 201, 203, 206, 225, 227, 263, 264, 279], "configur": [14, 154, 164, 173, 175, 183, 185, 189, 217, 232, 250, 278, 279, 282, 293, 294], "confus": 9, "connect": [251, 287], "consequ": [296, 297], "consid": [294, 296], "consider": 296, "consist": [6, 9, 250, 255, 280, 286, 293, 297, 298, 304], "consol": [254, 257], "const": [10, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 45, 47, 57, 58, 60, 64, 65, 66, 67, 76, 77, 78, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 109, 111, 113, 114], "constrain": [12, 282], "constraint": [3, 4, 5, 281, 286, 296, 303, 305], "construct": [12, 97, 99, 177, 210, 211, 212, 214, 226, 280, 284, 286, 302, 303, 305], "constructor": 12, "consum": [3, 5, 9, 85, 198, 199, 253, 284, 293, 297, 298, 301, 302, 303], "consumpt": [159, 297], "contain": [14, 97, 167, 176, 182, 192, 206, 219, 227, 234, 251, 269, 271, 280, 284, 289, 293, 297], "content": [214, 302], "context": [3, 4, 88, 183, 249, 250, 254, 255, 260, 261, 278, 281, 282, 284, 286, 296, 297, 305], "contextlib": [15, 155, 255, 278], "contextmanag": 255, "contigu": [104, 178, 293], "continu": [275, 279, 280, 285], "contract": 5, "control": [260, 296, 302], "convent": [6, 284, 286], "convers": [7, 15, 37, 43, 50, 55, 58, 59, 60, 61, 80, 101, 153, 191, 203, 223, 226, 279, 293, 297], "convert": [2, 4, 5, 6, 99, 154, 158, 165, 166, 168, 177, 181, 185, 190, 191, 193, 195, 196, 211, 223, 227, 228, 229, 230, 231, 247, 251, 276, 277, 279, 281, 286, 287, 293], "convert_fram": [6, 10, 45, 78, 82, 89, 101, 154, 155, 158, 176, 197, 215, 216, 217, 221, 279, 280, 293], "convertible_to": [95, 109, 110], "convin": 183, "convolut": 296, "cooper": 296, "copi": [4, 7, 99, 159, 186, 219, 234, 286, 293], "copyright": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280], "core": [1, 9, 10, 17, 36, 38, 39, 40, 78, 79, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 113, 114, 153, 161, 286, 302], "corefil": [80, 101], "corenamespac": [79, 101], "coro": 259, "coroutin": [5, 51, 95, 259, 286, 296], "coroutine_handl": [95, 109], "coroutinu": 296, "corpor": 289, "correct": 242, "correspond": [14, 99, 183, 191, 192, 194, 198, 199, 200, 242, 270, 296, 297], "cost": [4, 7, 294, 299], "could": [3, 5, 9, 99, 281, 287, 301], "count": [186, 284, 297], "counter": [70, 100, 243], "coupl": [7, 293], "cours": [2, 297], "cover": [4, 8, 167, 192, 214, 250, 251, 264, 289, 294], "cpp": 89, "cpu": [4, 7, 9, 104, 170, 197, 209, 232, 233, 234, 278, 280, 294, 301, 302, 303, 305], "cpu_buff": [10, 43, 78, 82, 87, 101, 158], "cpu_count": 4, "cpu_storag": [158, 170, 195, 196], "cpubuff": [10, 43, 57, 78, 82, 87, 101, 117, 158, 195, 196, 215, 216, 217, 221, 228, 229, 230, 231, 232, 233, 293], "cpubufferptr": [10, 43, 57, 59, 61, 78, 82, 87, 89, 101], "cpubufferstruct": [79, 101], "cpustorag": [10, 45, 54, 57, 78, 82, 87, 89, 98, 101, 104, 114, 195, 196, 197, 217], "cpustoragetempl": [79, 101], "crash": 242, "creat": [3, 4, 7, 14, 57, 85, 88, 91, 154, 155, 158, 159, 181, 183, 185, 186, 198, 199, 219, 224, 234, 251, 260, 261, 279, 280, 281, 284, 285, 286, 288, 293, 302, 303, 305], "create_model": 15, "create_reference_audio_fram": [10, 45, 78, 82, 89, 101, 165], "create_reference_video_fram": [10, 45, 78, 82, 89, 101, 190, 279], "creation": [6, 185, 260, 293, 301], "criteria": 275, "critic": 186, "crop": [185, 204, 214], "crop_bottom": [185, 204], "crop_height": [15, 214], "crop_left": [185, 204], "crop_right": [185, 204], "crop_top": [185, 204], "crop_width": [15, 214], "cstddef": [43, 54, 87, 98], "cstdint": [54, 55, 98, 99], "cuda": [14, 15, 154, 158, 171, 172, 185, 202, 209, 215, 216, 217, 218, 221, 223, 227, 229, 231, 232, 233, 234, 236, 278, 280, 286, 289, 299], "cuda_array_interfac": 229, "cuda_buff": 158, "cuda_config": [14, 15, 158, 172, 185, 197, 204, 278, 280, 287], "cuda_device_index": 158, "cuda_index": 278, "cuda_stream": [158, 197, 200, 278], "cudabuff": [158, 185, 202, 204, 215, 216, 217, 218, 221, 222, 223, 227, 229, 231, 232, 233], "cudaconfig": [14, 15, 185, 200, 202, 204, 215, 217, 218, 221, 222, 223, 227, 232, 278], "cudastorag": 98, "cum": 288, "cumbersom": 3, "current": [3, 226, 240, 263, 264, 281, 293, 301, 305], "current_except": 95, "currentmodul": 155, "custom": [100, 155, 176, 194, 200, 201, 203, 206, 209, 234, 244, 247, 251, 255, 283, 289], "customqueu": 155, "customtaskhook": 155, "cuviddec": 289, "cvdfoundat": 280, "cycl": 296, "cyclomat": [3, 281], "d": [14, 15, 280], "d_empti": 297, "d_measur": 297, "daemon": 260, "data": [3, 4, 6, 8, 9, 10, 12, 14, 15, 17, 58, 60, 62, 78, 85, 87, 89, 91, 97, 98, 101, 103, 104, 112, 114, 154, 155, 156, 157, 158, 159, 165, 166, 167, 176, 181, 182, 183, 184, 186, 191, 192, 194, 197, 198, 199, 200, 202, 209, 211, 219, 220, 226, 232, 233, 234, 242, 247, 249, 250, 251, 253, 255, 258, 263, 264, 265, 266, 267, 279, 280, 281, 282, 284, 285, 286, 287, 289, 292, 293, 294, 296, 299, 300, 301, 302, 303, 304, 305], "data_": 98, "data_format": [7, 13], "data_readi": 297, "databas": 285, "dataclass": [14, 234, 251, 280, 287], "datainterfac": [10, 41, 78, 82, 85, 101, 115], "datainterfaceptr": [10, 20, 41, 78, 82, 85, 91, 101, 103, 113], "datainterfacestruct": [79, 101], "dataload": [9, 15, 154, 284, 286, 287, 288, 291, 294, 298, 299, 304], "dataset": [4, 7, 15, 154, 155, 159, 160, 262, 263, 264, 268, 269, 280, 286, 288, 292, 293, 297, 302, 303], "dataset_dir": 155, "dataset_directori": 293, "datasourc": 13, "date": 289, "dbl": [166, 194, 198, 211], "dblp": [198, 211], "dc": 288, "dead": 284, "deadlock": [3, 250, 251, 284], "deal": 9, "dealloc": 98, "deallocator_typ": [17, 98], "debug": [14, 15, 97, 192, 242, 260, 280], "decai": 7, "decid": [255, 293, 296, 300], "decod": [6, 10, 14, 15, 23, 29, 37, 44, 50, 53, 55, 78, 80, 82, 88, 97, 99, 101, 106, 121, 153, 154, 155, 158, 163, 167, 168, 173, 178, 180, 182, 183, 186, 188, 191, 192, 193, 196, 202, 203, 204, 210, 212, 217, 218, 224, 225, 227, 250, 279, 286, 287, 288, 289, 291, 297, 302, 303, 305], "decode_": 278, "decode_and_flush": [10, 19, 78, 90, 101], "decode_and_preprocess": 6, "decode_concurr": 280, "decode_config": [173, 174, 203, 215, 216, 217, 221, 225], "decode_fn": 280, "decode_func": 15, "decode_imag": [6, 15, 154, 158, 293], "decode_images_nvjpeg": 15, "decode_packet": [6, 154, 155, 158, 174, 186, 197, 215, 216, 217, 221, 225, 280, 293], "decode_packets_nvdec": [185, 280], "decode_video": 280, "decode_video_nvdec": 280, "decodeconfig": [10, 19, 55, 78, 82, 90, 99, 101, 174, 201, 203, 215, 216, 217, 221, 225], "decodeconfigstruct": [79, 101], "decoder_opt": [10, 78, 99, 101, 106, 201], "decoderclass": [79, 101], "decoderimpl": [10, 46, 78, 83, 90, 101], "decoderimpltempl": [79, 101], "decoderptr": [10, 46, 78, 82, 90, 101], "decomposit": 6, "decompress": [298, 302], "decor": 255, "decord": 12, "decreas": [7, 154], "dedic": [9, 234, 286], "deduc": 293, "deetrmin": 234, "def": [2, 3, 4, 5, 6, 12, 13, 14, 15, 154, 155, 158, 209, 250, 255, 278, 279, 280, 282, 284, 286, 287, 293, 303], "default": [1, 12, 14, 15, 17, 18, 85, 88, 91, 95, 97, 98, 105, 109, 111, 113, 114, 154, 155, 158, 176, 177, 191, 192, 201, 203, 204, 211, 214, 219, 223, 224, 247, 250, 251, 254, 257, 258, 260, 275, 276, 278, 280, 282, 283, 289, 293, 305], "default_alloc": [17, 98], "default_col": [154, 293], "default_dealloc": [17, 98], "defaultselector": 1, "defin": [5, 10, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 38, 39, 40, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 94, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 157, 159, 251, 286, 287, 297, 302], "definit": [99, 153, 261], "degrad": [7, 9, 285, 304, 305], "degre": [3, 7, 154, 299], "del": 258, "delai": [5, 281, 284], "deleg": [3, 5, 12, 251], "delet": [16, 17, 19, 21, 22, 25, 28, 86, 90, 92, 93, 94, 95, 96, 98, 100, 109, 186, 200, 284], "delete_src": 258, "delta": [254, 257], "demand": [294, 297], "demonstr": [185, 227, 284], "demux": [6, 10, 27, 37, 41, 44, 51, 53, 55, 62, 63, 78, 80, 82, 85, 88, 97, 101, 122, 123, 153, 167, 168, 174, 175, 183, 185, 186, 192, 205, 206, 207, 208, 210, 211, 212, 214, 217, 227, 279], "demux_audio": [176, 215], "demux_config": [175, 176, 205, 207, 208, 215, 216, 217, 221], "demux_imag": [6, 154, 158, 176, 186, 197, 216, 217, 293], "demux_video": [155, 176, 185, 186, 193, 216, 221, 280], "demux_window": [10, 20, 78, 91, 97, 101], "demuxconfig": [10, 47, 55, 78, 82, 85, 91, 99, 101, 103, 113, 176, 205, 206, 207, 208, 215, 216, 217, 221], "demuxconfigtempl": [79, 101], "demuxerimpl": [27, 91], "demuxerptr": [10, 47, 62, 63, 78, 82, 91, 101], "demuxertempl": [79, 101], "den": [10, 78, 99, 101, 102], "denomin": [102, 162, 179, 187, 191, 192, 199], "denot": [167, 192], "depend": [7, 242, 288, 296, 299], "depict": [1, 3, 281], "deploi": 286, "depth": [10, 57, 78, 87, 101, 104], "deriv": [10, 78, 101], "desc": 203, "describ": [6, 7, 154, 303], "descript": [14, 15, 155, 158, 177, 193, 203, 210, 211, 212, 214, 217, 225, 242, 278, 279, 280], "descriptor": 246, "deseri": [4, 7, 293], "design": [186, 285, 293, 296, 305], "dest": 15, "destin": [183, 254, 257, 285], "destroi": [95, 302], "destruct": 302, "destructor": 97, "detach": 296, "detail": [7, 9, 10, 12, 13, 21, 27, 42, 46, 47, 48, 49, 52, 78, 82, 86, 89, 90, 91, 92, 93, 96, 101, 157, 163, 180, 183, 188, 195, 219, 225, 227, 242, 250, 251, 255, 280, 282, 285, 288, 293, 295, 299], "detailtempl": [79, 101], "determin": [6, 275, 282, 285, 299, 300], "determinist": 264, "develop": [2, 242, 280, 294, 300, 305], "deviat": 15, "devic": [14, 15, 158, 171, 172, 185, 197, 200, 202, 204, 209, 215, 216, 217, 218, 221, 223, 227, 232, 234, 278, 280, 286], "device_config": [14, 15, 202, 204, 215, 216, 217, 218, 221, 222, 223, 227, 232, 278, 280], "device_count": 278, "device_index": [14, 15, 158, 171, 185, 197, 200, 278, 280, 287], "devicendarrai": 229, "devx": 305, "di": [20, 91], "diagram": [1, 154, 250, 255, 260, 279, 281, 282, 287, 296, 297], "dict": [13, 155, 176, 181, 183, 201, 206, 227, 234, 241, 251, 261, 270, 278], "dictat": 5, "dictionari": [7, 184], "did": 9, "differ": [2, 3, 6, 7, 9, 13, 85, 94, 154, 159, 166, 183, 184, 185, 191, 214, 219, 281, 286, 292, 293, 294, 296, 297, 298, 299, 302, 304], "difficult": [292, 301], "dim": [15, 89], "dimension": 176, "dir": [15, 154, 155, 278], "direct": 289, "directli": [5, 6, 7, 97, 202, 204, 279, 293, 294, 297], "directori": [13, 14, 15, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 154, 155, 158, 269, 272, 278, 279, 280, 287], "disabl": [97, 191, 203, 251, 278], "disaggreg": [251, 287, 294, 297, 303], "discard": [6, 293], "discatd": 192, "discret": [198, 199], "discuss": [7, 300], "disjoint": [263, 264], "dispatch": [4, 286], "displai": 192, "disrupt": 298, "distil": 85, "distinguish": 293, "distribut": [263, 289, 298, 299, 304], "divid": 302, "divis": [158, 214], "dl": 157, "dmx_cfg": [62, 63, 85, 91, 103, 113], "do": [3, 7, 9, 12, 99, 158, 185, 250, 255, 264, 279, 281, 284, 289, 293, 294, 298, 303, 304], "do_oper": 246, "doc": [230, 289], "docstr": 3, "document": [10, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 183, 210, 212, 260, 289], "doe": [1, 4, 5, 7, 158, 168, 186, 191, 198, 199, 206, 210, 212, 219, 242, 251, 260, 281, 282, 284, 285, 286, 288, 293, 294, 298, 299, 303, 304, 305], "domain": [7, 281], "don": [1, 3, 4, 281], "done": [1, 3, 5, 10, 27, 78, 91, 95, 101, 185, 204, 250, 280, 281], "doubl": [20, 27, 66, 91, 94, 97, 111], "down": [2, 3, 6, 7, 281, 302], "download": [6, 280, 282, 286, 287, 289, 297, 300, 302, 303], "download_from_remot": 7, "downsid": 286, "downstream": [3, 251, 253, 254, 297], "doxygen": 99, "drain": 279, "draw": 264, "drawback": 294, "drawn": 264, "driven": 285, "drop": [9, 158, 159, 211, 214, 220, 251, 255, 286, 293, 297, 301, 303, 305], "drop_last": [15, 158, 160, 251], "dry": 278, "dst": 183, "dtype": [13, 15, 99, 184, 195, 198, 199, 209, 219, 226, 280], "dual": 289, "due": [6, 9, 159, 185, 186, 243, 286, 297, 303], "dump": [4, 10, 22, 78, 93, 101], "durat": [20, 27, 91, 176, 206, 210, 212, 250, 253, 279, 297, 299], "dure": [191, 249, 289, 296, 297], "dynam": 289, "e": [12, 13, 183, 194, 198, 211, 234, 253, 255, 278, 281, 289, 296, 297], "each": [3, 4, 5, 6, 7, 14, 85, 154, 159, 181, 185, 191, 192, 194, 204, 227, 249, 250, 251, 255, 263, 264, 275, 279, 280, 281, 286, 292, 297, 298, 302, 304], "earlier": [287, 304], "eas": 302, "easi": [3, 5, 7, 210, 212, 281, 284, 286, 294, 296, 297, 299], "easier": [294, 299], "effect": [3, 9, 251, 286, 299, 301, 302], "effici": [1, 3, 4, 6, 219, 220, 281, 286, 288, 290, 294, 301, 302, 303], "effort": [7, 9, 294], "either": [13, 209, 286, 287], "elabor": [260, 305], "elaps": [13, 14, 15, 154, 253, 278, 280, 297], "elast": 297, "elegantli": 3, "elem_class": [10, 57, 78, 87, 101, 104], "elemclass": [10, 55, 57, 78, 82, 87, 99, 101, 104], "elemclassenum": [79, 101], "element": [3, 104], "elimin": 301, "els": [1, 3, 7, 13, 14, 15, 99, 154, 278, 280, 281], "embed": 276, "embed_shuffl": 264, "emploi": 186, "employe": 285, "empti": [185, 251, 253, 278, 297], "en": 229, "enabl": [14, 15, 246, 254, 257, 280, 289, 293, 302, 305], "enc_height": 279, "enc_pix_fmt": 279, "enc_width": 279, "encapsul": [85, 286, 296], "encod": [10, 25, 30, 37, 50, 52, 53, 55, 78, 80, 82, 88, 96, 97, 99, 101, 124, 125, 126, 127, 128, 153, 164, 165, 183, 189, 190, 194, 198, 199, 209, 247, 279, 280], "encode_config": 209, "encodeconfig": 209, "encodeconfigbas": [10, 25, 55, 78, 82, 96, 99, 101, 148, 150], "encodeconfigbasetempl": [79, 101], "encoder_config": [25, 96, 183], "encoderclass": [79, 101], "encoderimpl": [10, 21, 48, 78, 83, 92, 101], "encoderimplstruct": [79, 101], "encoderptr": [10, 25, 48, 78, 82, 92, 96, 101, 124, 126], "encount": [2, 8, 9, 252, 296], "encourag": 296, "end": [3, 163, 165, 167, 168, 177, 185, 188, 190, 192, 211, 214, 249, 251, 276, 279, 280, 284, 289, 305], "endif": 99, "engin": [7, 185, 248, 288, 305], "enhanc": 301, "enough": [3, 9, 297, 302, 304], "ensur": [3, 7, 186, 234, 263, 264, 285, 286, 293, 302], "enter": 260, "enter_context": 278, "entir": [5, 7, 176, 214, 251, 264, 292], "entri": 155, "entrypoint": [13, 14, 15, 154, 278, 279, 280], "enum": [10, 99, 153], "enumer": [14, 15, 38, 39, 40, 154, 280], "env": [13, 14, 154, 155, 279], "envelop": 293, "environ": [234, 289, 293, 294, 305], "eoferror": 250, "epoch": [276, 277, 286, 304], "epollselector": 1, "eprint": 288, "equal": 264, "equip": 298, "equival": [219, 276, 277, 286, 292, 293], "eras": 89, "error": [85, 99, 154, 186, 217, 218, 225, 242, 252, 260, 281, 284, 286], "especi": [281, 302], "essenti": 294, "estim": [7, 157, 258, 300, 301], "etc": 91, "eula": 289, "ev": [14, 280], "eval": 15, "even": [3, 7, 9, 12, 186, 219, 255, 281, 284, 293, 305], "event": [2, 3, 4, 5, 14, 251, 280, 282, 284, 286, 287, 288, 296, 302, 305], "eventu": 5, "ever": 99, "everi": [1, 251, 294], "evolut": [3, 281], "evolv": 281, "exactli": [251, 287], "examin": [297, 300], "examlpl": 155, "exampl": [3, 4, 5, 6, 8, 12, 13, 14, 99, 154, 155, 158, 191, 200, 209, 219, 220, 242, 247, 255, 270, 275, 278, 279, 280, 281, 282, 285, 286, 287, 288, 293, 297, 298, 302, 304], "example_performance_analysis_tensorboard": 155, "exceed": [211, 214], "except": [1, 3, 10, 51, 78, 95, 101, 109, 110, 248, 252, 255, 271, 281], "exception_ptr": [95, 109, 110], "excess": 214, "execut": [1, 2, 4, 5, 9, 12, 154, 158, 159, 186, 195, 219, 234, 248, 249, 250, 251, 255, 256, 260, 278, 282, 284, 286, 287, 293, 294, 296, 300, 302, 305], "executor": [1, 5, 12, 13, 251, 281, 283, 305], "exhaust": [250, 251, 260, 275], "exhibit": [7, 297], "exist": [186, 287, 293, 299, 302, 305], "exit": [5, 260, 284, 297], "exitstack": 278, "exmperiment": [202, 204], "exot": 7, "exp_spdl": 154, "exp_spdl_": 154, "exp_torch": 154, "exp_torch_": 154, "exp_torch_thread": 154, "expand": 15, "expect": [1, 5, 7, 15, 157, 165, 223, 258, 294, 305], "expens": 185, "experi": [9, 286, 298, 301, 305], "experienc": 297, "experiment": [202, 204, 218, 220, 260, 276], "explain": [4, 250, 251, 253, 254, 256, 257, 285, 296], "explicit": [17, 18, 20, 21, 22, 26, 28, 88, 91, 92, 93, 95, 97, 98, 100, 109, 111, 296], "explicitli": [4, 281, 293, 296], "explor": 7, "export": [253, 254, 256, 257, 278, 285, 300, 305], "export_chrome_trac": [15, 278], "expos": [97, 155, 293, 297], "express": [5, 162, 179, 187, 191, 199, 210, 211, 212, 213, 214], "ext": 287, "extend": [3, 155, 249, 254, 281], "extens": [4, 7, 12, 183, 281, 289], "extern": [91, 99, 297], "extra": [7, 226, 286, 293], "extract": 279, "extract_packets_at_indic": [10, 53, 78, 82, 97, 101], "extrem": [4, 242, 299], "f": [13, 14, 15, 154, 158, 183, 185, 206, 210, 212, 220, 250, 278, 279, 280, 286, 287], "face": 3, "facilit": [12, 250, 280], "fact": [3, 281], "factor": [3, 6, 281, 297, 298, 299, 301, 302], "factori": [87, 155, 164, 170, 172, 173, 175, 183, 189, 203, 285], "fail": [1, 3, 6, 9, 217, 218, 225, 255, 256, 260, 281, 286, 296], "failur": [251, 255, 260, 297, 304], "fairli": 1, "fals": [7, 13, 14, 15, 16, 17, 66, 86, 95, 97, 98, 154, 158, 160, 168, 192, 219, 222, 223, 251, 259, 260, 264, 276, 280], "famili": 289, "familiar": [2, 281], "far": [5, 98, 282], "fashion": [168, 185, 278, 279], "fast": [3, 159, 297, 301, 302, 304, 305], "faster": [2, 7, 9, 159, 219, 253, 282, 286, 288, 293, 297, 298, 304, 305], "fastest": 305, "fatal": 242, "fcc": 223, "fd": [28, 100], "feasibl": [7, 303], "featur": [3, 7, 15, 281, 305], "fed": 247, "feed": 185, "feedback": 305, "fetch": [1, 3, 97, 165, 185, 190, 200, 253, 260, 263, 264, 279, 281, 286, 287, 289, 293, 296, 297], "few": [12, 293, 302], "fewer": 293, "ffmpeg": [23, 88, 89, 94, 99, 100, 168, 178, 183, 186, 193, 202, 204, 206, 210, 211, 212, 214, 240, 241, 242, 247, 289, 293], "ffmpeg_opt": 99, "fftool": 99, "field": [155, 285], "figur": [3, 7, 9, 293, 297, 298, 299, 302, 304, 305], "file": [7, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 158, 176, 183, 186, 191, 202, 209, 219, 220, 246, 250, 269, 272, 278, 279, 280, 285, 287, 288, 289, 293, 302], "filenam": [14, 15], "fill": [95, 297, 298], "filter": [10, 16, 78, 86, 97, 101, 158, 168, 178, 185, 193, 198, 199, 203, 210, 211, 212, 213, 214, 217, 225, 239, 279], "filter_arg": [213, 279], "filter_desc": [15, 19, 22, 64, 90, 93, 154, 155, 158, 174, 177, 203, 210, 211, 212, 214, 215, 216, 217, 221, 225, 279, 280, 293], "filter_graph": [22, 37, 50, 64, 80, 101, 129, 153, 177, 210, 212, 279], "filtergraph": [10, 49, 78, 82, 93, 101, 129, 210, 212, 226, 279], "filtergraphimpl": 93, "filtergraphptr": [10, 49, 64, 78, 82, 93, 101], "filtergraphtempl": [79, 101], "final": [2, 5, 14, 15, 154, 185, 249, 254, 255, 279, 280, 284, 293], "final_suspend": [10, 78, 95, 101, 109, 110], "find": [1, 14, 158, 280, 285, 288, 297, 302], "find_fil": 287, "fine": [286, 293], "finish": [260, 282, 301], "first": [3, 94, 166, 185, 194, 198, 199, 214, 234, 250, 271, 279, 281, 284, 289, 293, 299], "first_complet": [1, 3, 281], "fit": [292, 294, 305], "fix": [211, 214, 243, 297], "flamegraph": 302, "flexibl": [281, 286, 294, 305], "flist": [14, 280], "float": [7, 10, 13, 14, 15, 40, 78, 99, 101, 154, 155, 158, 160, 166, 167, 176, 181, 191, 192, 194, 198, 205, 208, 211, 214, 215, 221, 243, 250, 251, 253, 254, 256, 257, 260, 261, 264, 275, 280], "flow": [3, 5, 281, 284, 285, 296], "flt": [166, 194, 198, 211], "fltp": [194, 198, 211], "flush": [10, 16, 19, 21, 22, 25, 78, 86, 90, 92, 93, 96, 101, 163, 165, 168, 174, 177, 183, 185, 188, 190, 279], "flv": 183, "fmt": [14, 15, 280, 289], "fn": [1, 3, 158, 260, 281], "fn1": [3, 281], "fn2": [3, 281], "fn3": [3, 281], "focu": 299, "follos": 260, "follow": [1, 3, 4, 5, 6, 7, 9, 12, 14, 15, 154, 155, 159, 186, 194, 198, 199, 200, 209, 223, 226, 234, 242, 250, 255, 260, 264, 276, 277, 279, 281, 282, 284, 285, 286, 287, 288, 289, 293, 296, 297, 298, 299, 301, 302, 303, 304, 305], "foo": [168, 174, 176, 186, 193, 209, 210], "footprint": 293, "foreground": [15, 234, 296, 297], "forev": [255, 258], "forget": 284, "fork": 154, "form": [1, 192], "format": [4, 8, 10, 12, 14, 15, 78, 99, 101, 107, 158, 162, 166, 179, 181, 182, 183, 185, 187, 191, 192, 194, 198, 199, 202, 203, 204, 206, 209, 210, 211, 212, 214, 217, 218, 219, 223, 226, 227, 242, 247, 279, 280, 286, 288, 293, 297, 302], "format_opt": [10, 78, 99, 101, 107, 206], "formatter_class": [14, 15], "formula": 223, "forth": 286, "fortran": 219, "fortun": [3, 281], "forward": [9, 15, 95, 299], "found": [7, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 219, 234, 242, 260, 269, 271, 278, 279, 280, 286, 304], "foundat": [2, 281], "four": 297, "fp": [14, 15, 280], "fraction": [162, 179, 187], "frame": [6, 10, 14, 22, 31, 32, 33, 37, 43, 45, 46, 48, 49, 55, 65, 78, 80, 82, 89, 90, 92, 93, 97, 101, 130, 131, 132, 133, 134, 135, 136, 137, 153, 154, 155, 158, 163, 165, 166, 174, 176, 177, 181, 182, 183, 185, 186, 187, 188, 190, 191, 192, 196, 197, 198, 199, 201, 203, 204, 210, 211, 212, 214, 217, 218, 225, 227, 247, 278, 279, 280, 287, 293], "frame_r": [18, 60, 86, 88, 89, 99, 187, 192, 199, 214, 247, 279], "frame_s": 165, "frames0": 177, "frames1": 177, "framesclass": [79, 101], "framesptr": [10, 19, 21, 50, 65, 78, 82, 90, 92, 94, 101, 130, 133, 135], "free": [4, 9, 200, 286, 288, 293, 294, 305], "free_thread": 289, "frequent": 288, "friend": 97, "from": [1, 2, 3, 4, 5, 6, 8, 9, 13, 14, 15, 85, 88, 91, 95, 97, 109, 110, 154, 155, 157, 158, 168, 176, 177, 178, 181, 183, 184, 185, 186, 195, 197, 204, 205, 207, 208, 211, 214, 215, 216, 217, 219, 221, 225, 227, 241, 250, 251, 253, 254, 255, 258, 260, 261, 264, 269, 270, 271, 275, 276, 277, 278, 279, 280, 281, 284, 286, 287, 288, 291, 294, 296, 297, 298, 299, 302, 303, 304, 305], "from_numpi": 13, "from_promis": 95, "fromarrai": 278, "fromfil": 219, "front": 289, "ft": 289, "fulfil": 296, "full": [95, 284, 297], "fullscreen": 183, "func": [3, 13, 14, 15, 154, 278, 279, 280, 281], "function": [1, 2, 3, 5, 6, 9, 10, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 85, 87, 103, 104, 105, 109, 110, 111, 113, 114, 153, 156, 157, 158, 159, 161, 164, 169, 170, 171, 172, 173, 175, 177, 178, 183, 185, 186, 189, 195, 197, 198, 199, 200, 203, 211, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 234, 235, 247, 248, 251, 258, 261, 268, 269, 274, 281, 282, 284, 285, 286, 287, 288, 293, 294, 296, 297, 300, 301, 305], "functool": [14, 155, 260, 286, 287], "fundament": [3, 281], "further": [6, 198, 199], "futur": [1, 2, 4, 5, 12, 13, 242, 251, 264, 294], "future1": [3, 281], "future2": [3, 281], "future3": [3, 281], "futures1": 3, "futures2": 3, "g": [12, 183, 194, 223, 278], "gael": 288, "gain": [157, 258, 300, 301, 304], "garbag": [186, 245, 284], "gather": 297, "gcc": 289, "gen": 91, "geneartor": 251, "gener": [5, 7, 10, 13, 14, 26, 37, 47, 53, 78, 79, 80, 82, 91, 97, 101, 153, 157, 158, 159, 160, 165, 186, 190, 195, 203, 206, 219, 248, 250, 251, 255, 259, 260, 264, 275, 280, 281, 286, 293, 296, 297], "generatorstruct": [79, 101], "get": [1, 3, 7, 9, 15, 91, 94, 97, 154, 177, 191, 192, 213, 239, 240, 241, 249, 250, 253, 254, 263, 264, 270, 275, 279, 284, 288, 293, 296, 300], "get_abuffer_desc": 177, "get_audio_filter_desc": [203, 213], "get_bit_r": [10, 18, 78, 88, 101], "get_bits_per_sampl": [10, 18, 78, 88, 101], "get_buffer_desc": 177, "get_channel_layout": [10, 18, 78, 88, 101], "get_codec": [10, 16, 78, 86, 101], "get_codec_id": [10, 18, 78, 88, 101], "get_dataload": 15, "get_decode_func": 15, "get_default_codec": [10, 20, 78, 91, 101], "get_default_stream_index": [10, 20, 78, 91, 101], "get_ffmpeg_filt": [10, 56, 78, 82, 100, 101], "get_ffmpeg_log_level": [10, 56, 78, 82, 100, 101], "get_ffmpeg_vers": [10, 56, 78, 82, 100, 101], "get_filter_desc": [155, 158, 203, 279, 280], "get_fmt_ctx": [10, 78, 85, 101, 105], "get_fram": [10, 22, 78, 93, 94, 101, 177, 210, 212, 279], "get_frame_r": [10, 18, 78, 88, 101], "get_frame_s": [10, 21, 78, 92, 101], "get_handle_for_remot": 7, "get_height": [10, 18, 78, 88, 94, 101], "get_id": 94, "get_interfac": [10, 78, 85, 101, 103, 113], "get_item": [250, 296], "get_iter": [14, 250, 280, 284, 303], "get_map": 269, "get_media_format_nam": 94, "get_metadata": 94, "get_mock_data": 13, "get_model": 15, "get_nam": [10, 18, 78, 88, 101], "get_next_task": [1, 3, 281], "get_nowait": 296, "get_num_channel": [10, 18, 78, 88, 94, 101], "get_num_fram": 94, "get_num_plan": 94, "get_packet": [10, 26, 78, 97, 101], "get_paramet": [10, 18, 78, 88, 101], "get_pipelin": [13, 14, 280, 284], "get_pix_fmt": [10, 18, 78, 88, 101], "get_pt": [94, 191], "get_pytorch_dataload": 159, "get_rank": [263, 264], "get_return_object": [10, 78, 95, 101, 109, 110], "get_running_loop": [4, 155, 286], "get_sample_aspect_ratio": [10, 18, 78, 88, 101], "get_sample_fmt": [10, 18, 78, 88, 101], "get_sample_r": [10, 18, 78, 88, 94, 101], "get_siz": 98, "get_time_bas": [10, 18, 78, 88, 94, 101], "get_timestamp": [10, 53, 78, 82, 94, 97, 101, 191, 192], "get_video_filter_desc": [15, 154, 203, 213, 293], "get_width": [10, 18, 78, 88, 94, 101], "get_world_s": [263, 264], "getlogg": [14, 15, 154, 280], "getter": 88, "getvalu": 219, "gflag": 289, "gil": [3, 4, 5, 7, 9, 220, 285, 286, 288, 293, 294, 302, 305], "github": [99, 280], "give": [7, 185, 251, 293, 294, 302, 305], "given": [13, 14, 15, 91, 154, 155, 157, 163, 180, 185, 188, 195, 198, 199, 204, 209, 213, 214, 223, 226, 232, 233, 234, 250, 251, 255, 258, 260, 261, 264, 275, 278, 280, 282, 286, 287], "glob": [158, 287], "global": [12, 260], "global_step": 155, "glog": [100, 289], "go": [1, 3, 6, 260, 281, 285, 293, 294, 298, 302], "goal": [297, 300, 301, 305], "goe": [1, 5, 284], "gokul": 288, "good": [9, 284, 293, 294, 299], "gop": 247, "gop_siz": [99, 247], "govern": [7, 298], "gpl": 289, "gpu": [3, 7, 9, 14, 15, 154, 158, 185, 195, 197, 202, 204, 232, 234, 278, 281, 286, 287, 289, 293, 297, 298, 301, 302, 303, 305], "gpu_transf": [286, 297, 303], "grai": 226, "granular": 302, "graph": [177, 198, 199, 210, 212, 279, 299], "gray16": 199, "gray16b": 226, "gray16l": 226, "gray8": [199, 209, 214], "grayscal": 199, "great": 9, "greater": 264, "group": 305, "grow": 293, "guarante": [192, 305], "guid": [8, 155, 285, 288], "gunasekaran": 288, "gz": 278, "h": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 183, 196, 199, 202, 223, 279, 280, 289], "h264": [10, 38, 78, 99, 101, 168, 185, 193], "h_": [10, 78, 95, 101, 109], "ha": [3, 4, 5, 7, 159, 176, 177, 185, 203, 211, 214, 251, 253, 255, 260, 281, 286, 293, 296, 297, 304], "had": [1, 253, 298], "halt": 251, "hand": [154, 297], "handi": 97, "handl": [1, 2, 3, 4, 7, 9, 15, 165, 214, 249, 254, 281, 286], "handle_typ": [10, 78, 95, 101, 109], "handler_stop_sign": [14, 280], "handrol": 15, "hang": 284, "happen": [1, 5, 99, 185, 234, 284, 293, 298, 302, 304], "hard": 289, "hardwar": [183, 185, 280, 286, 289, 303, 304], "has_audio": [10, 20, 78, 91, 101, 176], "hasattr": [277, 286], "have": [3, 4, 5, 6, 9, 168, 203, 206, 251, 260, 281, 282, 286, 294, 296, 298, 299, 302], "head": 15, "header": [88, 97, 99, 206, 219, 242, 289], "headspac": [7, 9, 288, 300], "height": [14, 15, 99, 155, 158, 179, 181, 182, 186, 187, 191, 192, 196, 197, 204, 209, 214, 217, 218, 223, 226, 227, 247, 278, 279, 280, 287], "held": [7, 302], "hell": [3, 281], "help": [7, 154, 197, 249, 260, 278, 281, 286, 293, 297, 298, 299, 302, 305], "helper": [3, 4, 6, 97, 157, 177, 281], "here": [3, 13, 14, 15, 154, 155, 165, 185, 255, 260, 278, 279, 280, 281, 284, 293, 294, 297], "hevc": [10, 38, 78, 99, 101, 185], "hfile": [80, 101], "hide": 289, "high": [4, 7, 12, 281, 293, 294, 301, 305], "higher": [154, 280, 292, 293, 297, 298], "highest": 7, "highli": [9, 305], "hira": 288, "hira2025scalableperformantdataload": 288, "hit": 301, "hold": [4, 5, 7, 23, 168, 178, 186, 285, 288, 293, 302], "home": [35, 36, 37, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 153, 154], "hook": [251, 255], "hook_factori": 155, "hope": 281, "hour": 299, "how": [1, 2, 3, 4, 5, 7, 13, 154, 155, 185, 214, 227, 250, 251, 253, 254, 255, 256, 257, 278, 279, 281, 282, 284, 285, 286, 287, 288, 292, 293, 294, 296, 299, 300, 301, 302, 304], "howev": [2, 3, 5, 7, 9, 12, 159, 186, 191, 219, 242, 255, 289, 296, 301, 302, 303, 304], "html": [13, 99, 155, 168, 183, 193, 210, 212, 214, 229, 230], "http": [12, 91, 99, 168, 183, 193, 210, 212, 214, 229, 230, 247, 280, 288, 305], "huge": 293, "huggingfac": 294, "hypothet": 282, "i": [1, 3, 5, 6, 7, 9, 13, 14, 15, 25, 70, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 110, 154, 155, 157, 158, 159, 161, 162, 166, 167, 168, 176, 177, 179, 181, 183, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 203, 204, 206, 211, 214, 219, 220, 222, 223, 224, 227, 234, 236, 237, 238, 242, 243, 247, 249, 250, 251, 253, 254, 255, 257, 258, 260, 263, 264, 265, 266, 267, 269, 270, 271, 275, 276, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304], "icicl": 1, "id": [10, 14, 78, 94, 97, 101, 111, 269, 270, 271, 280], "idea": 299, "ideal": [296, 305], "ident": 280, "identif": 297, "identifi": [176, 217, 249, 297, 298, 300, 302, 305], "iglob": 158, "ignor": [13, 15, 260, 264, 275, 279], "ih": 279, "illeg": 242, "illustr": [2, 3, 9, 154, 210, 212, 250, 255, 260, 279, 281, 282, 286, 287, 293, 297, 298, 299], "ilsvrc2012": 270, "imag": [6, 7, 10, 13, 15, 39, 78, 88, 94, 97, 99, 101, 118, 130, 131, 141, 147, 154, 155, 158, 176, 179, 180, 181, 182, 186, 193, 199, 202, 203, 207, 209, 212, 214, 216, 217, 218, 223, 226, 247, 269, 278, 280, 287, 288, 291, 294, 301, 305], "image_codec": 176, "image_dataload": [14, 280], "image_dataloading_chart": 14, "imagecodec": [10, 44, 78, 82, 88, 101, 174, 176, 182, 212], "imagedecod": 174, "imagefram": [6, 10, 50, 78, 82, 94, 101, 158, 177, 180, 186, 191, 196, 203, 293], "imageframesptr": [10, 50, 78, 82, 94, 101, 134], "imagenet": [14, 154, 280, 288, 293], "imagenet_classif": 15, "imagenet_classification_chart": 15, "imagepacket": [10, 53, 78, 82, 97, 101, 176, 180, 186, 193, 203, 207, 213, 225], "imagepacketsptr": [10, 53, 78, 82, 97, 101, 146], "imaginari": 287, "img": [13, 209, 278], "immedi": [251, 279, 297, 298], "impl": [13, 85, 89], "implement": [1, 2, 5, 6, 9, 85, 89, 154, 157, 158, 159, 161, 169, 171, 176, 184, 185, 186, 204, 219, 220, 226, 228, 229, 230, 231, 248, 251, 255, 261, 274, 281, 282, 287, 288, 290, 292, 293, 295, 299], "import": [1, 2, 4, 5, 6, 7, 13, 14, 15, 154, 155, 158, 206, 209, 250, 278, 279, 280, 284, 285, 286, 287, 292, 293, 297, 299, 300, 303, 305], "impos": 4, "imposs": 296, "improp": 2, "improv": [4, 7, 9, 154, 285, 293, 294, 299, 301, 305], "in0": 177, "in1": 177, "in_ord": 160, "inact": 260, "inc": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280], "includ": [7, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 153, 154, 226, 251, 258, 275, 279, 297, 299, 305], "incom": 174, "incompat": 186, "inconsist": 8, "incorpor": [289, 305], "increas": [3, 154, 281, 293, 294, 297, 298, 301, 302], "increment": [7, 174, 204], "indefinit": [158, 250], "independ": [3, 4, 197, 250, 281, 294, 297], "index": [14, 15, 94, 97, 111, 155, 171, 176, 200, 243, 251, 270, 278, 280, 286, 288], "indic": [20, 67, 85, 91, 97, 159, 176, 225, 263, 264, 270, 297, 304], "individu": [6, 9, 158, 263, 264], "ineffici": [9, 286, 293, 302], "inevit": 294, "inf": [15, 280], "infer": [15, 234], "infinit": 277, "info": [14, 15, 88, 155, 242, 278, 280], "inform": [88, 97, 168, 185, 242, 285, 297], "inherit": [10, 78, 101, 251], "init": [10, 28, 78, 100, 101, 185, 227, 249, 254], "init_glog": [10, 56, 78, 82, 100, 101], "init_resourc": 12, "init_trac": [10, 56, 78, 82, 100, 101], "initarg": 12, "initi": [4, 12, 97, 159, 168, 174, 185, 249, 250, 251, 255, 260, 263, 264, 276, 278, 286, 293, 294, 296], "initial_suspend": [10, 78, 95, 101, 109, 110], "initialization_fail": 260, "initialization_succeed": 260, "inlin": [109, 110], "inner": 5, "inou": 288, "inovk": 251, "inprop": 281, "input": [3, 4, 7, 14, 15, 85, 158, 159, 168, 193, 198, 199, 210, 212, 218, 223, 225, 234, 247, 251, 275, 278, 279, 280, 282, 286, 293, 297], "input0": 177, "input1": [3, 177], "input2": 3, "input_fil": 278, "input_flist": [14, 280], "input_height": 279, "input_path": [279, 287], "input_pix_fmt": 279, "input_width": 279, "insert": 297, "insid": [251, 255, 293], "insight": 294, "instabl": 294, "instal": 288, "instanc": [12, 157, 174, 186, 224, 251, 255, 279, 284, 285, 286, 293], "instanti": [15, 159, 185, 224, 250, 251], "instead": [1, 2, 3, 6, 7, 12, 166, 186, 211, 281, 296, 299], "instruct": [260, 289], "int": [6, 10, 13, 14, 15, 18, 19, 20, 21, 25, 27, 28, 40, 58, 60, 70, 72, 75, 78, 88, 89, 90, 91, 92, 94, 96, 97, 99, 100, 101, 102, 107, 111, 112, 154, 155, 157, 158, 159, 160, 162, 165, 166, 167, 171, 176, 179, 181, 182, 183, 184, 185, 187, 191, 192, 194, 197, 198, 199, 200, 202, 204, 206, 211, 214, 217, 218, 222, 223, 225, 227, 240, 241, 242, 243, 246, 247, 249, 251, 253, 254, 256, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 273, 275, 276, 277, 278, 279, 280, 286], "int64": [15, 195], "int64_t": [18, 58, 60, 69, 88, 89, 94, 97, 100, 112], "integ": [7, 166, 194, 195, 198, 199, 226], "integr": [280, 289, 296], "intend": [4, 88, 157, 158, 195, 197, 234, 249, 258, 289, 294, 299, 305], "intens": [302, 303], "inter": [2, 7, 159, 282, 286, 293, 296], "interact": [5, 7, 12, 296], "interest": [7, 302], "interfac": [6, 7, 85, 98, 158, 169, 171, 184, 228, 229, 230, 231, 260, 287, 293], "interleav": [199, 223, 227], "intermedi": [3, 7, 158, 281, 288], "intern": [97, 99, 162, 163, 165, 168, 178, 179, 185, 186, 187, 188, 206, 225, 279, 281, 284, 286, 293, 297], "internalerror": [10, 55, 78, 82, 99, 101], "internalerrorclass": [79, 101], "interpret": [7, 12, 155, 176, 198, 284, 286], "interpreterpoolexecutor": 3, "interrupt": [14, 280, 284, 286, 302], "interst": 281, "interv": [155, 251, 254, 257], "interval_stats_callback": [155, 254, 257, 285], "interweav": 166, "intra": [282, 296], "introduc": [2, 3, 5, 200, 281, 282, 288], "introduct": [3, 9, 12, 288], "introductori": 2, "intuit": [301, 305], "invalid": [6, 251], "invent": 281, "invers": 9, "invoc": [286, 297, 302], "invok": [1, 3, 186, 256, 281], "involv": [4, 281, 294, 303], "io": [4, 6, 7, 13, 14, 15, 97, 154, 155, 158, 250, 278, 279, 280, 281, 286, 287, 288, 289, 293, 295, 302], "irrelev": [179, 282], "is_avail": 278, "is_pin": [10, 17, 78, 98, 101], "is_set": [14, 280], "isfileobj": [7, 219], "isinst": [13, 279], "isol": 154, "issu": [2, 3, 7, 9, 191, 251, 260, 281, 286, 294, 296, 297, 300, 304], "ite": 284, "item": [3, 6, 7, 12, 13, 15, 154, 155, 158, 184, 250, 251, 253, 254, 258, 260, 275, 280, 281, 282, 284, 286, 287, 293, 297], "iter": [3, 6, 13, 14, 15, 97, 154, 155, 157, 158, 159, 176, 184, 227, 250, 251, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 280, 285, 286, 287, 299, 303, 305], "iter_": 15, "iter_data": [10, 26, 78, 97, 101], "iterablewithshuffl": [269, 273, 276, 277], "iterate_in_subprocess": [261, 286], "iteration_finish": 260, "iteration_start": 260, "iteratoin": 264, "iterator_fail": 260, "iterator_success": 260, "itnerptet": 7, "its": [3, 5, 13, 14, 15, 154, 185, 186, 279, 280, 281, 282, 289, 293, 296, 298, 299, 305], "itself": [5, 7, 12, 293, 305], "ivar": 159, "iw": 279, "j": 288, "javascript": [3, 281], "jax": [228, 289], "job": [3, 5, 7, 186, 281, 282], "join": [154, 250, 279, 287, 296], "joseph": 288, "jpeg": [14, 158, 202, 293], "json": [15, 278], "just": [3, 179, 299], "k": [13, 155, 160, 194, 281, 293, 294], "k400": 280, "keep": [3, 4, 6, 7, 13, 186, 258, 281, 286, 296, 301, 303], "kei": [6, 177, 184, 191, 293, 305], "kept": 293, "kernel": [7, 9, 195, 223, 286, 299, 301], "keyword": [2, 255, 288, 302], "kick": 186, "kill": 284, "kilo": 246, "kind": [3, 285, 287], "kinet": 280, "kinetics400": 280, "know": [1, 185, 293, 296], "known": [7, 250, 251], "kqueueselector": 1, "krishnamoorthi": 288, "krishnan": 288, "kwarg": [154, 176, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 217, 218, 221, 226, 232, 250, 261], "l00058": 99, "l1550": 99, "label": [13, 15, 195, 210, 212, 270], "lambda": [154, 278, 284], "lan": 288, "languag": [12, 282], "larg": [4, 297, 304], "larger": [242, 253], "largest": 297, "last": [3, 7, 94, 186, 194, 198, 214, 251, 278, 297], "later": [7, 155, 177, 210, 212, 281, 285, 297, 299, 304], "latest": 297, "launch": [4, 7, 9, 14, 223, 280, 286, 299, 301], "lavfi": 206, "layout": [162, 198, 199], "lbl": 13, "le": 288, "lead": [3, 242, 284, 297], "learn": [9, 155], "least": [3, 293], "leav": [284, 294], "legn": 297, "len": [3, 4, 14, 154, 278, 279, 280, 293], "length": [157, 264], "less": [185, 251, 286, 296, 297], "let": [1, 3, 4, 5, 168, 185, 201, 279, 281, 282, 284, 286, 293, 298], "level": [1, 4, 12, 14, 15, 155, 194, 240, 242, 247, 278, 280, 282, 293, 298], "levelnam": [14, 15, 280], "leverag": 7, "lgpl": 289, "lib": [7, 184, 186, 219], "libav": 242, "libavcodec": 241, "libavdevic": 241, "libavfilt": 241, "libavformat": 241, "libavutil": [97, 99, 241], "libopenh264": 201, "librari": [4, 7, 12, 236, 237, 238, 241, 281, 282, 286, 289, 294, 305], "libspdl": [35, 37, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 153, 289], "libspdldirectori": [80, 101], "licens": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280, 289], "life": 296, "lifetim": [85, 186], "light": 302, "lighter": 4, "lightweight": [250, 251, 287, 297], "like": [1, 3, 4, 6, 7, 9, 12, 14, 15, 99, 169, 171, 184, 210, 212, 247, 281, 282, 287, 293, 296, 299, 302], "limit": [3, 7, 9, 185], "line": [14, 155, 186, 278, 279, 280, 287, 292], "line_numb": [14, 280], "linear": 247, "lineno": [14, 15], "link": [289, 298], "linux": [1, 289], "list": [6, 10, 12, 13, 14, 15, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 153, 154, 155, 158, 160, 168, 183, 185, 191, 192, 193, 194, 195, 196, 217, 218, 222, 223, 225, 227, 234, 239, 250, 251, 260, 261, 264, 275, 278, 280, 285, 286, 287, 288, 293, 303], "list_bucket": 287, "listen": 183, "littl": [7, 9], "live": [183, 297], "load": [3, 4, 6, 8, 9, 12, 13, 14, 15, 154, 156, 157, 158, 215, 216, 217, 218, 219, 220, 221, 227, 236, 237, 238, 258, 280, 281, 282, 286, 287, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305], "load_fn": 13, "load_imag": 250, "load_image_batch": [6, 14, 287], "load_npi": [7, 13], "load_npy_spdl": 13, "load_npz": [7, 13, 184, 302], "load_npz_spdl": 13, "load_path_from_fil": 287, "load_torch": 13, "loader": [9, 14, 15, 154, 157, 159, 258, 292, 293, 299, 303], "local": [14, 15, 154, 176, 224, 234, 269, 272, 284, 285, 286, 294], "local_rank": 234, "localhost": 183, "locat": [7, 176, 250, 255, 285, 287, 298], "lock": [12, 158, 234, 284], "log": [14, 15, 154, 155, 240, 242, 251, 254, 255, 257, 259, 278, 280, 285, 289, 298], "log_cancel": 259, "log_dir": 155, "log_interv": 155, "logger": [14, 15, 280], "logic": [157, 158, 249, 251, 254, 255, 260, 261, 279, 284, 293, 302], "logic_error": [24, 99], "loglevel": 242, "long": [12, 185, 186, 227, 297], "longer": [5, 186, 253, 297, 299], "longest": 302, "look": [1, 2, 3, 5, 6, 7, 242, 281, 282, 284, 287, 293, 298, 301, 302], "loop": [2, 3, 4, 5, 7, 14, 15, 251, 280, 282, 284, 286, 287, 288, 295, 297, 299, 301, 302, 305], "loss": [9, 299, 304], "losslessli": 242, "lot": [3, 281, 302], "low": [1, 4, 12, 282], "lower": 301, "m": [223, 299], "machin": 298, "maco": [1, 289], "made": [3, 154, 186, 296, 302], "magic": [3, 281], "mai": [3, 242, 267, 281, 297], "main": [1, 3, 4, 7, 9, 13, 14, 15, 154, 155, 159, 200, 250, 278, 279, 280, 281, 286, 293, 302], "mainli": [192, 286, 287], "maintain": [214, 279, 281, 286], "maintan": 7, "major": [282, 293, 294], "make": [1, 3, 4, 5, 7, 9, 85, 159, 183, 197, 198, 199, 210, 212, 251, 255, 281, 284, 286, 288, 289, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 305], "make_demux": [10, 47, 78, 82, 91, 101], "make_filter_graph": [10, 49, 78, 82, 93, 101], "malinovskyi": 288, "manag": [3, 4, 91, 97, 172, 183, 200, 249, 250, 254, 255, 281, 282, 284, 296, 299], "mani": [3, 4, 7, 9, 12, 281, 282, 287, 293, 298, 299, 302, 303, 304], "manipul": [260, 261, 286], "manipult": 260, "manner": [2, 5, 7, 9, 218, 234, 260, 279, 286, 293, 296, 301], "manual": [3, 287, 289], "map": [6, 14, 27, 55, 69, 91, 99, 100, 152, 158, 159, 184, 223, 241, 270, 280, 289, 293], "mapiter": 158, "mark": 3, "martin": 288, "match": [13, 184, 185, 191, 198, 199, 209, 211, 214, 226, 264, 279, 297], "matrix": [223, 280], "max": [14, 15, 154, 280], "max_b_fram": [99, 247], "max_batch": 15, "max_bfram": 247, "max_failur": [251, 261], "max_item": 154, "max_sampl": [14, 280], "max_work": [3, 12, 281, 286], "maxim": 281, "maximum": [7, 9, 154, 157, 227, 247, 251, 258, 260, 280, 286, 300, 301], "mb": 293, "mean": [3, 15, 154, 198, 211, 253, 281, 282, 286, 293, 294, 297, 304], "meaning": 297, "meanwhil": [3, 281], "measur": [13, 14, 15, 154, 253, 254, 256, 280, 285, 293, 297, 299], "mechan": [2, 5, 168, 282, 286, 288, 292, 293], "media": [4, 6, 10, 12, 16, 18, 19, 20, 21, 23, 25, 29, 30, 45, 65, 66, 78, 82, 86, 88, 89, 90, 91, 92, 94, 96, 97, 99, 101, 108, 111, 121, 128, 136, 144, 183, 198, 199, 203, 279, 293], "mediatyp": [10, 16, 18, 19, 20, 21, 23, 25, 29, 30, 55, 59, 61, 65, 66, 78, 82, 86, 88, 89, 90, 91, 92, 94, 96, 97, 99, 101, 108, 111, 118, 119, 120, 121, 124, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 150], "mediatypestruct": [79, 101], "medium": 302, "meet": [219, 293], "member": [17, 102, 104, 106, 107, 109, 110, 111, 112], "memorandum": 296, "memori": [3, 4, 8, 41, 43, 48, 49, 50, 53, 56, 85, 87, 91, 92, 93, 94, 97, 100, 104, 158, 159, 170, 172, 176, 178, 185, 198, 199, 200, 219, 234, 281, 289, 293, 301, 302], "memory_pin": 98, "memoryview": 219, "mention": 7, "mere": 85, "merg": [158, 293], "messag": [14, 15, 280], "met": 296, "meta": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 274, 278, 279, 280, 285, 288, 302, 305], "metadata": [6, 7, 162, 176, 179, 181, 187, 302], "meth": [155, 278], "method": [1, 3, 4, 5, 12, 97, 155, 163, 165, 166, 167, 168, 176, 177, 180, 181, 182, 183, 184, 185, 188, 190, 191, 192, 234, 249, 250, 251, 254, 255, 257, 260, 264, 265, 267, 269, 273, 276, 281, 282, 284, 285, 286, 287, 293], "methodologi": 300, "metric": [9, 254, 257, 288, 297, 300], "might": [3, 4, 6, 186, 200, 202, 204, 255, 284, 289, 293, 299], "migrat": [288, 292, 302], "miguel": 288, "millisecond": 1, "mimic": 184, "min": 4, "minim": 297, "minimum": [225, 299], "misc": 288, "miscellan": 8, "mit": 289, "mitig": 185, "mix": [4, 5], "mixtur": 286, "mjpeg": [10, 38, 78, 99, 101], "ml": [7, 281, 282, 294, 305], "mobilenetv3_large_100": 15, "mock": 13, "mod": 280, "modal": 294, "mode": [13, 15, 260, 279, 286], "model": [9, 12, 15, 200, 270, 279, 286, 288, 294, 298, 299, 301, 303], "model_typ": 15, "modelbundl": 15, "modifi": [85, 254, 257, 279], "modul": [1, 3, 4, 7, 12, 15, 186, 262, 281, 286, 289, 293, 305], "mono": 177, "monoton": [13, 14, 15, 154, 278, 280], "more": [1, 3, 6, 7, 9, 12, 154, 185, 219, 220, 242, 247, 250, 260, 264, 281, 293, 298, 299, 302, 303, 304, 305], "most": [3, 7, 186, 191, 227, 270, 281, 282, 293, 297], "mostli": 305, "motiv": 3, "moto": [14, 154, 280, 288], "move": [9, 89, 95, 200, 215, 216, 217, 221, 232, 233, 286], "mp": [7, 13], "mp3": 99, "mp4": [155, 168, 174, 176, 183, 186, 193, 210, 280], "mp_context": [12, 260], "mpeg1video": [10, 38, 78, 99, 101], "mpeg2video": [10, 38, 78, 99, 101], "mpeg4": [10, 38, 78, 99, 101], "mt": [7, 9, 13], "mtp": [9, 286], "much": [7, 301, 302], "multi": [2, 5, 7, 9, 12, 13, 234, 250, 251, 281, 283, 288, 293, 305], "multi_thread_preprocess": [6, 293], "multi_thread_preprocessing_chart_spdl": 154, "multi_thread_preprocessing_chart_torch": 154, "multi_thread_preprocessing_plot": 154, "multimedia": [294, 305], "multipl": [2, 5, 6, 7, 158, 166, 167, 181, 182, 183, 186, 191, 192, 210, 212, 250, 251, 253, 263, 271, 282, 286, 287, 293, 296, 297, 298, 302, 303], "multiplex": [183, 279], "multiprocess": [4, 8, 14, 154, 260, 280], "multiprocessing_context": [154, 160], "multithread": 9, "must": [1, 4, 5, 7, 12, 13, 88, 97, 168, 176, 185, 198, 199, 209, 223, 226, 243, 247, 251, 260, 264, 279, 281, 282, 286, 287, 294, 296, 297, 302, 305], "mux": 97, "muxer": [10, 37, 48, 53, 55, 78, 80, 82, 101, 138, 153, 165, 190, 226, 279], "muxer_config": [25, 96, 183], "muxerclass": [79, 101], "muxerimpl": 96, "muxerptr": [10, 52, 78, 82, 96, 101], "my_bucket": 7, "my_data": 7, "my_func": 286, "my_oper": 244, "n": [14, 15, 155, 196, 199, 214, 263, 264, 275, 278, 280], "n03709823": 270, "n4": 99, "name": [4, 12, 14, 22, 76, 77, 93, 100, 155, 162, 166, 177, 179, 181, 182, 185, 187, 191, 192, 210, 212, 239, 241, 244, 246, 249, 251, 254, 255, 257, 259, 280, 285, 299], "namespac": [10, 14, 15, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 153, 155, 278, 279, 280], "nan": 15, "nanobind": [186, 289], "nanobind_add_modul": 289, "nanosecond": 1, "narrow": 302, "nativ": [154, 293, 296], "natur": [7, 293, 297], "nccl": [298, 304], "nchw": 15, "ndarrai": [4, 7, 13, 176, 184, 209, 219, 229, 230], "ndim": 154, "necessari": [281, 293], "necessarili": [185, 192, 264, 279, 282], "necessit": 281, "need": [3, 4, 7, 12, 97, 98, 226, 251, 279, 281, 282, 286, 287, 289, 293, 296, 299, 301], "neglig": 1, "neighbor": 209, "neighbour": [4, 7, 8, 288, 300, 302, 303, 305], "nest": [10, 78, 101], "network": [3, 7, 12, 250, 281, 287, 294, 296, 297, 298, 302, 303], "never": 296, "new": [1, 97, 155, 157, 185, 191, 219, 224, 280, 282, 293, 294, 305], "next": [1, 3, 7, 10, 27, 78, 91, 101, 158, 250, 251, 253, 275, 281, 284, 293, 296, 297, 298, 301, 304], "nhwc": 247, "ninja": 289, "nn": 15, "no_grad": [15, 154], "node": [177, 210, 212, 264, 298], "noexcept": [17, 18, 26, 28, 88, 94, 95, 97, 98, 100, 109, 110, 111], "noisi": [4, 7, 8, 288, 300, 302, 303, 305], "non": [5, 289, 293], "non_block": [234, 278, 286], "none": [1, 3, 12, 13, 14, 15, 154, 155, 157, 158, 160, 163, 165, 167, 168, 174, 176, 177, 180, 183, 185, 188, 190, 192, 195, 196, 200, 202, 203, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 225, 227, 232, 242, 246, 247, 249, 250, 251, 254, 255, 257, 258, 259, 260, 261, 264, 265, 267, 269, 273, 275, 278, 279, 280, 281, 286, 293], "nor": 293, "normal": [15, 154, 297], "normalize_transform": 154, "notabl": [286, 293], "note": [85, 88, 94, 97, 155, 168, 201, 219, 253, 260, 280, 282, 286, 289, 292, 294, 296, 297], "noth": [210, 212, 281], "notifi": [1, 165, 168, 177, 183, 185, 190, 281], "notion": 281, "notori": [3, 281], "now": [1, 3, 5, 242, 279, 281, 282, 286, 293, 298, 299, 301, 303], "np": [7, 12, 13, 209, 219, 220], "npp": [218, 289], "npy": [7, 13, 184, 219], "npyio": 184, "npz": [8, 13, 220, 302], "npzfile": 220, "null": [177, 212], "nullcontext": 15, "nullopt": [20, 62, 63, 91, 99, 106, 107], "nullptr": [28, 57, 59, 61, 63, 87, 89, 91, 98, 100], "num": [10, 14, 15, 78, 99, 101, 102, 280], "num_aggreg": 251, "num_batch": [14, 280], "num_cach": [157, 258, 299], "num_channel": [99, 162, 166, 167, 194, 198, 211], "num_correct_top1": 15, "num_correct_top5": 15, "num_draw": 264, "num_failur": [155, 256, 297], "num_fram": [14, 15, 19, 90, 166, 174, 191, 198, 211, 214, 227, 278, 280], "num_imag": 154, "num_invoc": 155, "num_item": [13, 154, 251, 253], "num_packet": [20, 27, 91, 176, 183], "num_plan": [181, 186, 191], "num_process": 12, "num_sampl": 166, "num_task": [155, 256, 297], "num_thread": [6, 13, 14, 15, 154, 155, 158, 250, 251, 261, 280, 282, 284, 293, 297, 303], "num_video_fram": 279, "num_work": [13, 14, 154, 160, 280, 293], "num_workers_": 154, "num_yield": 280, "numba": [229, 289], "number": [3, 5, 7, 13, 14, 15, 70, 100, 154, 158, 159, 162, 165, 166, 167, 181, 185, 191, 192, 194, 198, 199, 204, 211, 214, 225, 227, 243, 247, 251, 253, 254, 256, 258, 260, 263, 264, 275, 277, 279, 280, 282, 286, 293, 299, 300, 302, 305], "numer": [4, 7, 102, 162, 179, 187, 191, 192, 199], "numpi": [4, 8, 13, 176, 184, 195, 209, 219, 220, 229, 230, 278, 279, 286, 289, 293, 302], "nv12": [185, 214, 223, 227], "nv12_to_bgr": 227, "nv12_to_rgb": [185, 222, 227, 278], "nvcodec": 237, "nvcuvid": 289, "nvdec": [97, 99, 168, 185, 193, 204, 227, 280, 288], "nvdec_decod": 185, "nvdecdecod": [168, 193, 204, 224, 227], "nvidia": [280, 289], "nvjpeg": [15, 202, 218, 238, 289], "nxxxxxxxx": 271, "o": [1, 3, 5, 9, 159, 161, 176, 279, 281, 286, 288, 289, 290, 291, 302], "obj": [4, 286], "object": [1, 2, 3, 4, 5, 6, 7, 12, 14, 85, 88, 97, 155, 157, 158, 165, 167, 168, 174, 176, 177, 178, 181, 182, 183, 185, 186, 190, 191, 192, 193, 195, 196, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 215, 216, 217, 218, 219, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 251, 258, 260, 263, 264, 279, 280, 281, 284, 285, 286, 287, 293, 294, 296], "oblig": 289, "observ": [9, 154, 267, 285, 293, 294, 297, 298, 300, 304, 305], "obtain": [7, 9, 154, 203, 279, 286, 297], "occasion": [1, 5, 297], "occupancy_r": [155, 253], "occupi": [293, 297], "occur": [99, 301], "off": [7, 168, 296], "offer": [3, 4, 281, 286], "offici": [210, 212, 220, 289, 302], "offload": 282, "often": [1, 7, 158, 265, 266, 267, 280, 281, 293, 296, 299, 302, 304], "oftentim": 305, "omit": [3, 176, 279, 281, 297], "on_trace_readi": 278, "onboard": 294, "onc": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 255, 284, 289, 293, 299], "one": [1, 3, 7, 12, 15, 97, 158, 165, 168, 185, 190, 191, 192, 200, 209, 215, 216, 217, 221, 226, 227, 234, 251, 253, 271, 275, 278, 279, 281, 284, 285, 286, 287, 289, 292, 293, 294, 296, 298, 299, 301, 302, 304], "ones": [3, 281], "ongo": [5, 260], "onli": [1, 3, 5, 7, 97, 98, 154, 159, 163, 181, 188, 220, 226, 242, 251, 255, 257, 260, 281, 286, 287, 293, 296, 297, 298, 299, 301, 302, 305], "op": [251, 282, 296], "open": [10, 14, 25, 78, 96, 101, 183, 250, 279, 280, 287], "openai": 294, "opencv": 12, "oper": [2, 3, 5, 10, 12, 16, 17, 18, 19, 21, 22, 25, 26, 28, 78, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 109, 111, 154, 168, 193, 203, 234, 244, 250, 251, 253, 279, 281, 282, 284, 287, 293, 296, 297, 298, 302], "operaiton": 5, "opiton": 206, "oppos": 7, "opposit": 297, "optim": [7, 8, 9, 155, 157, 201, 258, 285, 288, 294, 299, 301, 302, 305], "option": [7, 10, 12, 14, 19, 20, 22, 25, 47, 52, 55, 56, 78, 82, 85, 90, 91, 93, 96, 97, 99, 100, 101, 106, 107, 111, 158, 174, 185, 192, 194, 200, 201, 202, 203, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 221, 225, 242, 247, 251, 255, 264, 277, 278, 279, 280, 288, 303], "optiondict": [10, 25, 55, 78, 82, 94, 96, 99, 101, 106, 107], "orchestr": [1, 2, 5, 281, 288, 297], "order": [3, 158, 192, 194, 219, 222, 251, 275, 281, 282], "org": [99, 168, 183, 193, 210, 212, 214, 230, 247, 288, 305], "organ": 302, "orient": 294, "origin": [6, 7, 9, 157, 186, 198, 199, 214, 258, 276, 281, 287, 293, 299], "other": [3, 4, 5, 6, 7, 9, 26, 28, 85, 97, 100, 154, 186, 213, 223, 250, 255, 276, 281, 286, 296, 297, 298, 304, 305], "otherwis": [6, 7, 13, 177, 198, 224, 226, 255, 264, 271, 296], "our": [1, 3, 9, 281, 288, 294, 297, 305], "out": [3, 9, 281, 284, 285, 289, 293, 296, 298, 299, 301, 302, 305], "out0": 177, "out1": 177, "outliv": 88, "output": [15, 158, 159, 183, 202, 203, 211, 214, 217, 226, 242, 246, 250, 251, 279, 282, 284, 286, 287, 297], "output0": 177, "output1": 177, "output_height": 279, "output_ord": [158, 251, 282, 293], "output_path": 279, "output_pix_fmt": 279, "output_width": 279, "outsid": 192, "over": [158, 250, 260, 263, 264, 275, 285, 297, 302], "overal": [9, 297, 304, 305], "overhead": [1, 299], "overlap": [195, 197, 234, 286, 296], "overload": 249, "overrid": [17, 85, 98, 99, 103, 155, 183, 194, 201, 206, 210, 212, 247, 251, 254, 255, 257, 285], "oversight": 5, "overview": 288, "overwrit": 206, "own": [154, 198, 199, 279, 289], "owner": 305, "ownership": 186, "p": [27, 91, 98, 166, 194, 198, 211, 278], "pack": [191, 198], "packag": [7, 289], "packet": [6, 10, 16, 19, 25, 26, 37, 42, 44, 46, 47, 48, 51, 52, 55, 66, 67, 78, 80, 82, 86, 90, 91, 92, 96, 101, 112, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 158, 163, 165, 167, 168, 174, 176, 180, 182, 183, 185, 188, 190, 192, 193, 197, 203, 204, 205, 206, 207, 208, 210, 212, 213, 225, 279, 280, 293], "packet_stream": 176, "packets2": 186, "packetseri": [10, 53, 78, 82, 97, 101, 111, 139], "packetseriesclass": [79, 101], "packetseriesptr": [10, 53, 78, 82, 97, 101], "packetsptr": [10, 16, 19, 20, 21, 53, 78, 82, 86, 90, 91, 92, 97, 101, 141, 143, 145], "packetsstruct": [79, 101], "pad": [211, 214], "pad_mod": 214, "page": [158, 234], "pair": 200, "panic": 242, "par": 165, "paradigm": [2, 3, 281, 286, 288, 291, 294], "parallel": [4, 8, 13, 250, 251, 260, 261, 282, 283, 288, 292, 294, 296, 305], "paramet": [13, 14, 15, 154, 155, 157, 158, 165, 168, 174, 176, 177, 183, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 242, 243, 244, 246, 247, 249, 250, 251, 254, 255, 257, 258, 260, 261, 263, 264, 269, 271, 275, 276, 277, 278, 279, 280, 282, 299], "parent": [36, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 260], "pars": [7, 155, 219, 271, 278, 279], "parse_arg": [14, 15, 154, 155, 278, 279, 280], "parse_known_arg": [14, 278, 280], "parse_wnid": 269, "parsed_abuffer_0": [177, 210], "parsed_abuffersink_2": 177, "parsed_anull_1": 177, "parsed_buffer_0": [177, 212], "parsed_buffersink_2": 177, "parsed_buffersink_3": 177, "parsed_null_1": 177, "parsed_showwaves_1": 177, "parsed_split_1": 177, "parsed_vstack_2": 177, "parser": [14, 15, 154, 155, 278, 279, 280], "part": [5, 7, 9, 12, 227, 255, 293, 296, 300, 301, 305], "parti": 289, "partial": [3, 14, 155, 260, 286, 287, 302], "particular": [281, 298, 302], "pass": [1, 4, 7, 12, 14, 15, 88, 97, 155, 158, 159, 169, 171, 183, 186, 211, 213, 214, 217, 226, 227, 249, 251, 255, 260, 261, 276, 280, 285, 286, 287, 293, 296, 305], "past": 298, "path": [6, 7, 9, 14, 15, 35, 36, 37, 91, 154, 155, 158, 176, 183, 186, 197, 202, 209, 210, 212, 219, 226, 227, 246, 250, 269, 273, 278, 279, 280, 287, 289, 293], "pathlib": [14, 15, 155, 278, 279, 280], "pathlik": [269, 273], "pattern": [1, 250, 251, 273, 284, 286, 301, 302], "paus": [281, 284], "pave": 305, "pcm_s16le": 206, "peak": [7, 154, 293], "peform": 264, "peopl": [1, 3], "per": [9, 200, 253, 293, 297, 301], "perf": 302, "perfetto": 289, "perform": [1, 2, 4, 6, 8, 12, 13, 14, 15, 154, 157, 186, 202, 204, 234, 250, 251, 253, 254, 255, 256, 257, 258, 260, 261, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 291, 294, 298, 299, 300, 301], "performance_analysi": [155, 285, 297], "perfresult": [14, 280], "period": [155, 254, 257], "permit": 302, "permut": [15, 154, 155, 278, 280, 293], "persistent_work": 160, "perspect": [1, 281, 296], "perturb": 304, "pftrace": [15, 246], "phenomenon": 301, "pick": [12, 275, 289], "pickl": [4, 7], "picklabl": [4, 12, 260, 286], "pil": 278, "pillow": [12, 154, 293], "piltotensor": [154, 293], "pimpl": [86, 90, 91, 92, 93, 96], "pin": 158, "pin_memori": [17, 98, 158, 160, 197, 234, 278, 286], "pin_memory_devic": 160, "pink": 1, "pip": 289, "pipe": [1, 5, 6, 12, 13, 14, 154, 155, 183, 250, 251, 255, 280, 282, 284, 285, 286, 287, 293, 297, 303], "pipelin": [1, 2, 4, 5, 6, 7, 8, 12, 13, 14, 15, 154, 155, 156, 157, 158, 226, 234, 280, 282, 283, 285, 288, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 304, 305], "pipeline_queu": 155, "pipeline_task": 155, "pipelinebuild": [1, 5, 6, 12, 13, 14, 154, 155, 249, 250, 254, 255, 261, 280, 282, 284, 285, 286, 287, 293, 297, 303], "pix_fmt": [14, 15, 99, 155, 158, 177, 179, 181, 182, 187, 191, 192, 199, 202, 203, 204, 209, 212, 214, 217, 218, 226, 247, 279, 280], "pixel": [15, 154, 179, 181, 182, 185, 187, 191, 192, 202, 203, 204, 212, 214, 217, 218, 223, 226, 247, 279, 293], "pixel_aspect": [177, 279], "pixel_format": 186, "pkt": [10, 78, 97, 101, 111], "place": [265, 267, 269, 273, 297], "placement": 289, "plain": 12, "planar": [166, 194, 198, 199, 211], "plane": [166, 181, 191, 227, 293], "platform": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280], "playabl": 279, "player": 183, "pleas": [9, 12, 155, 183, 280, 282, 285, 288, 289, 293, 297], "plot": [7, 9, 14, 15, 154, 278, 279, 297, 298, 301, 304, 305], "plot_dir": 278, "png": [155, 186, 209, 278], "point": [1, 7, 155, 191, 194, 198, 211, 299, 301], "pointer": [88, 97, 200], "pool": [1, 3, 4, 5, 12, 14, 97, 251, 280, 281, 283, 284], "popul": 85, "popular": 294, "portion": 302, "possibl": [3, 4, 7, 12, 166, 183, 200, 242, 281, 284, 298, 299, 301, 305], "possibli": 297, "post": [227, 278], "post_process": 278, "post_processing_param": [227, 278], "potenti": [4, 186, 299, 302], "pr": 302, "practic": [8, 12, 284, 288, 302], "practition": 281, "pragma": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "pre": [6, 12, 158, 282, 287, 289, 293, 305], "preced": 298, "prefetch_factor": [154, 160, 293], "prefix": [14, 251, 280], "prepar": [5, 293], "prepcoess": 298, "prepend": [14, 280], "preprocess": [15, 158, 211, 214, 226, 250, 282, 286, 288, 297, 298, 302, 303, 305], "preprocessor": 158, "present": [181, 191, 214], "pressur": [3, 297], "pretend": [279, 281], "pretrain": 15, "prevent": [3, 5, 12, 284, 287, 296, 303], "previou": [1, 3, 5, 185, 281, 286, 287, 293, 301, 304], "previous": [7, 198, 199], "primal": [168, 193, 305], "primari": [247, 282], "primarili": 305, "primaryclass": 288, "primit": [1, 6], "print": [13, 14, 154, 242, 270, 275, 278, 279, 280, 284], "privat": [94, 95, 98], "pro": [4, 291], "prob": 15, "probe": [202, 204], "problem": [3, 242, 281], "procedu": 1, "procedur": [1, 3, 5, 281], "process": [1, 2, 3, 5, 6, 7, 9, 12, 13, 14, 154, 158, 159, 177, 185, 193, 198, 199, 203, 213, 218, 227, 246, 250, 251, 254, 255, 257, 260, 278, 280, 281, 282, 283, 284, 285, 288, 289, 292, 293, 294, 296, 297, 303, 304, 305], "process_cpu_count": 4, "process_nam": [28, 100, 246], "process_with_resourc": 12, "processor": [158, 305], "processpoolexecutor": [3, 4, 12, 13, 251, 281, 286], "produc": [215, 216, 217, 221, 250, 253, 297], "product": [8, 247, 297, 298, 300, 302], "prof": [15, 278], "profil": [1, 15, 255, 278, 286, 289, 298, 300], "program": [1, 2, 3, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 153, 281, 302], "programmat": 300, "progress": [5, 7, 304], "prohibit": 293, "project": [288, 300, 305], "promis": [3, 95, 281], "promise_typ": [10, 51, 78, 82, 95, 101, 109], "promise_typetempl": [79, 101], "propag": [4, 251, 255], "proper": 3, "properli": [3, 5, 9, 236, 237, 238, 281, 284, 286], "properti": [5, 7, 162, 165, 166, 167, 171, 176, 179, 181, 182, 187, 191, 192, 253], "prospect": 299, "protocol": [158, 176, 228, 229, 230, 231, 251, 265, 266, 267, 281, 286, 287], "provid": [1, 4, 6, 14, 97, 155, 184, 185, 198, 199, 200, 201, 203, 206, 210, 212, 215, 216, 217, 221, 223, 247, 251, 258, 264, 275, 278, 280, 281, 285, 286, 289, 293, 294, 299, 302, 305], "prune": 281, "pseudo": 302, "pt": [10, 58, 60, 78, 89, 94, 97, 101, 112, 181, 191, 198, 199, 279], "public": [6, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 85, 86, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 260], "publicli": 270, "publish": [6, 155, 249], "puhrsch": 288, "pure": 7, "purpos": [3, 7, 85, 210, 212, 286, 303], "push": [10, 26, 78, 97, 101], "push_back": 94, "put": [3, 154, 249, 251, 253, 254, 260, 282, 286, 293, 294, 296, 300, 304], "put_nowait": 296, "py": [13, 14, 15, 154, 155, 278, 279, 280, 289], "pypi": 288, "pyre": [13, 14, 15, 154, 155, 278, 279, 280], "python": [1, 2, 3, 4, 7, 9, 12, 14, 15, 100, 186, 198, 199, 200, 280, 281, 284, 286, 288, 293, 294, 296, 305], "python3": [13, 14, 154, 155, 279], "pytorch": [1, 4, 7, 9, 13, 154, 159, 176, 209, 231, 234, 278, 286, 288, 289, 291, 298, 302], "pytorchdataload": 160, "qp": [9, 13, 154, 155, 253, 278, 297, 303], "qscale": [99, 194, 247], "queri": 253, "question": [288, 293, 299], "queue": [3, 154, 159, 249, 250, 251, 253, 254, 260, 280, 282, 286, 295, 298, 300], "queue_class": [155, 251, 261], "queue_siz": 280, "queueperfstat": [155, 254, 285, 300], "quick": [5, 297], "quickli": 3, "quiet": 242, "quit": [3, 281, 304], "r": [223, 280, 287], "raghuraman": 288, "rais": [13, 217, 218, 225, 250, 255, 271], "ran": [299, 301], "randint": [13, 209], "random": [13, 209, 264, 275], "rang": [3, 13, 14, 15, 94, 154, 211, 278, 280, 284, 293, 297], "rank": [263, 264, 288, 300, 304], "rase": 4, "rate": [162, 166, 167, 187, 192, 194, 198, 199, 211, 214, 247, 257, 279, 297, 302], "rather": [3, 4], "ratio": [179, 187, 214], "ration": [10, 18, 55, 60, 78, 82, 86, 88, 89, 94, 97, 99, 101, 111], "rational_8h_sourc": 99, "raw": [7, 66, 97, 176, 183, 192, 286, 287, 303], "raw_data": 7, "rawdescriptionhelpformatt": [14, 15], "rawpacketdata": [10, 26, 53, 78, 82, 97, 101], "rawpacketdatastruct": [79, 101], "re": [7, 15, 185, 293, 302], "reach": [177, 185], "react": [1, 3, 5, 255, 281], "read": [4, 7, 13, 154, 220, 278, 296], "reader": 220, "readi": [177, 300, 304], "readthedoc": 229, "real": 281, "realiz": [1, 3, 5, 296], "realli": [242, 281], "reason": [6, 186, 284, 293, 296, 297, 298, 304], "rebuild": 289, "receiv": [186, 260, 293, 298], "recent": [186, 305], "recommend": [4, 6, 7, 284, 293, 296, 301, 303], "record_funct": [15, 278], "recov": [242, 297], "recoveri": [242, 297], "rectangular": 1, "recurs": [158, 234], "red": 1, "redistribut": 289, "reduc": [7, 159, 286, 289, 299, 302, 305], "reduct": 299, "redund": [293, 302], "ref": [219, 281], "refer": [9, 12, 155, 177, 183, 186, 198, 199, 210, 212, 230, 279, 280, 285, 286, 289, 293, 297, 301], "referenc": [210, 212], "reflect": 294, "reformat": 7, "refrain": 287, "refresh": 289, "regard": 4, "region": [197, 198, 199, 214, 219, 293], "regist": 5, "register_avdevic": [10, 56, 78, 82, 100, 101], "register_buff": 15, "regul": 297, "regular": [3, 184], "reinvent": 1, "rel": [253, 297], "relat": [8, 236, 237, 238, 293, 297, 302], "relationship": [10, 78, 101], "releas": [3, 4, 7, 9, 97, 186, 220, 258, 286, 288, 289, 293, 294, 302], "relev": 7, "reliv": [3, 281], "remain": 299, "rememb": 97, "remind": 158, "remot": [7, 285, 287, 298], "remov": [204, 254], "remux": 279, "renam": 204, "repeat": [1, 13, 214, 277, 301], "repeatedli": 275, "replac": [7, 159, 220, 264, 293, 299, 305], "report": [14, 85, 251, 254, 257, 260, 280], "report_stats_interv": [14, 251, 261, 280], "repres": [3, 178, 186, 265, 266, 267, 280, 281, 293, 297], "request": [296, 297, 303], "requir": [3, 7, 14, 15, 85, 88, 92, 94, 97, 155, 168, 177, 193, 260, 278, 279, 280, 282, 287, 288, 293, 294, 296, 301, 302, 303, 305], "resampl": 250, "rescal": [155, 214, 226, 278], "research": 305, "resembl": [3, 281, 284, 298], "resembol": 13, "reserv": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280], "resiz": [14, 154, 158, 185, 202, 204, 209, 217, 218, 250, 278, 287, 293], "resolut": [155, 185, 214, 279, 280, 293], "resolv": [2, 9, 288, 294, 300], "resort": 7, "resourc": [3, 9, 85, 97, 183, 186, 258, 281, 282, 294, 299, 301, 302, 303], "resourceclass": 12, "respons": [1, 281], "respos": 302, "rest": [7, 298, 304], "restor": 219, "restrict": [243, 294], "restructur": 300, "result": [1, 3, 4, 5, 7, 12, 13, 14, 15, 85, 97, 154, 158, 159, 178, 185, 186, 191, 197, 198, 199, 210, 212, 213, 217, 251, 253, 260, 261, 267, 278, 279, 280, 281, 282, 284, 286, 287, 289, 293, 296, 297, 302], "result1": [3, 281], "result2": [3, 281], "result3": [3, 281], "resum": 284, "ret": 89, "rethrow_except": 95, "retriev": [165, 168, 211, 214, 225, 250, 269, 297], "return": [3, 4, 5, 6, 7, 12, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 157, 158, 159, 165, 166, 167, 168, 174, 176, 177, 178, 181, 182, 183, 185, 186, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 241, 250, 251, 254, 258, 260, 263, 264, 270, 271, 278, 279, 280, 281, 285, 286, 287, 293, 296, 299], "return_caches_aft": [157, 258, 299], "return_void": [10, 78, 95, 101, 109, 110], "return_when": [1, 3, 281], "reus": [185, 293], "reveal": [3, 281], "revers": 279, "revisit": 98, "rewrit": 7, "rgb": [13, 15, 158, 185, 191, 199, 202, 204, 218, 223, 227, 247, 279, 280, 293], "rgb24": [14, 15, 155, 158, 186, 199, 203, 209, 214, 217, 226, 247, 279, 280], "rgba": [177, 204, 214], "rglob": 155, "rid": 7, "right": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280, 284], "robin": 289, "robust": 286, "roman": 288, "room": 9, "root": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 269, 273, 278, 279, 280], "root_dir": [15, 154, 158], "roughli": [5, 183, 276, 277, 297], "rout": 287, "row": 97, "rsc": 12, "rtmp": 183, "rule": 3, "run": [1, 2, 5, 6, 9, 13, 14, 15, 154, 157, 158, 200, 206, 250, 251, 255, 258, 260, 261, 278, 280, 282, 283, 286, 287, 288, 289, 292, 293, 294, 296, 297, 299, 302, 303], "run_coroutine_threadsaf": 296, "run_dataload": 154, "run_forev": 296, "run_in_executor": [2, 155, 251, 282, 286], "run_in_process": 154, "run_pipelin": 13, "run_pipeline_in_subprocess": [9, 260, 286], "run_test": 154, "run_until_complet": 296, "runinng": 260, "runner": [35, 36, 37, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 153], "runtim": [14, 155, 253, 254, 256, 257, 283, 288, 289, 294, 297, 300, 302, 305], "runtimeerror": 250, "runtimewarn": 186, "rust": 12, "s16": [166, 177, 194, 198, 211], "s16le": 206, "s16p": [198, 211], "s32": [166, 194, 198, 211], "s32p": [198, 211], "s64": [166, 198, 211], "s64p": [198, 211], "safe": [250, 293, 294, 296], "sai": [3, 206, 281, 282, 284, 302], "said": 1, "sake": [3, 281, 302], "same": [3, 6, 13, 89, 159, 166, 174, 185, 191, 193, 200, 222, 223, 234, 251, 258, 264, 282, 286, 289, 293, 294, 296, 297, 299, 304], "sampl": [4, 13, 14, 94, 158, 159, 162, 166, 167, 186, 194, 197, 198, 206, 210, 211, 212, 275, 280, 298, 302, 303], "sample_aspect_ratio": [179, 187], "sample_fmt": [58, 60, 89, 99, 162, 166, 177, 194, 198, 199, 210, 211], "sample_r": [58, 89, 99, 162, 166, 167, 177, 194, 198, 211], "sampler": [159, 160, 263, 264, 293, 300], "save": [7, 13, 155, 209, 219, 226, 278, 285], "savez": [7, 13, 220], "savez_compress": [7, 13], "saw": 281, "scalabl": 305, "scale": [7, 158, 194, 214, 247, 279, 288, 293, 304], "scale_algo": [209, 214], "scale_height": [15, 154, 155, 158, 185, 202, 204, 214, 278, 280, 293], "scale_mod": 214, "scale_width": [15, 154, 155, 158, 185, 202, 204, 214, 278, 280, 293], "scaler": 214, "scenario": 281, "schedul": [1, 3, 4, 5, 7, 9, 280, 281, 282, 286, 287], "scope": [12, 284], "scratch": 305, "screen": 183, "screenshot": 1, "script": [7, 14, 15, 154, 280], "sdk": 289, "sdl": 183, "search": 289, "sec": [251, 278], "secifi": 223, "second": [9, 94, 97, 154, 155, 167, 191, 192, 250, 253, 254, 256, 257, 264, 297, 298, 301], "section": [1, 2, 3, 5, 7, 8, 260, 281, 285, 294, 296, 297, 300, 301], "see": [1, 4, 7, 9, 12, 13, 14, 15, 154, 155, 157, 163, 164, 170, 172, 173, 174, 175, 180, 181, 183, 184, 185, 188, 189, 195, 196, 203, 204, 205, 207, 208, 209, 214, 215, 216, 221, 225, 227, 249, 251, 255, 258, 278, 279, 280, 281, 282, 286, 289, 293, 294, 297, 298, 299, 302, 305], "seed": [264, 265, 267, 269, 273, 275, 276, 277], "seek": [13, 219, 220], "seemingli": 284, "seen": [5, 294], "segment": [7, 13], "segv": 99, "select": [5, 223], "selector": [1, 5], "self": [6, 13, 15, 155, 186, 251, 255, 284, 303], "send": [14, 15, 158, 195, 280, 287], "sens": [5, 281], "sent": [14, 154, 260, 279, 286], "separ": [6, 13, 97, 158, 166, 251, 293, 302], "seprat": 97, "sequenc": [3, 176, 202, 217, 260, 264, 275, 296], "sequenti": [218, 282], "seri": [97, 178, 186, 302], "serial": [4, 7, 12, 13, 219, 286, 293], "serv": [85, 183, 282, 297, 301], "server": [183, 281], "servic": 7, "sess": [28, 100], "set": [4, 6, 7, 14, 20, 27, 47, 91, 99, 158, 159, 176, 203, 225, 242, 251, 264, 280, 287], "set_default_executor": 4, "set_ffmpeg_log_level": [10, 56, 78, 82, 100, 101], "set_start_method": 154, "setlevel": 154, "setup": [263, 264, 289, 292, 297, 304], "sever": 296, "shape": [10, 14, 15, 57, 58, 60, 78, 87, 89, 101, 104, 155, 166, 196, 199, 202, 209, 211, 219, 223, 226, 227, 280], "share": [4, 8, 9, 12, 159, 186, 281, 293, 300], "shared_memori": 4, "shared_ptr": [10, 45, 57, 78, 82, 85, 87, 89, 101, 104, 116], "sharedmemori": 2, "shell": 280, "shift": [288, 291, 294], "shmem": 4, "short": 4, "should": [1, 5, 6, 88, 97, 99, 179, 186, 198, 199, 255, 294, 296, 297, 299, 301, 302, 305], "show": [3, 4, 7, 9, 154, 155, 194, 278, 279, 284, 285, 286, 293, 297, 298, 301, 302, 304, 305], "shown": 155, "showwav": 177, "shuffl": [160, 264, 265, 267, 269, 273, 276, 277], "shuffle_last": 276, "shutdown": [3, 250, 281, 284], "side": [100, 185, 204], "sign": [166, 194, 198, 199, 226], "signal": [14, 280, 296], "signific": [5, 302, 304], "significantli": [7, 154, 298, 304], "sigterm": [14, 280], "silenc": 211, "silent": 223, "similar": [3, 5, 7, 97, 281, 286, 293, 298], "similarli": [155, 251, 282], "simpl": [1, 3, 5, 9, 15, 157, 281, 293, 299, 304], "simpler": [3, 296], "simpli": [9, 284, 293, 296], "simplic": [3, 281, 296], "simplifi": [3, 99, 260, 281, 297], "sin": 220, "sinc": [3, 4, 5, 7, 9, 158, 186, 223, 281, 286, 287, 293, 294, 296, 301, 303, 304], "sine": 206, "singl": [6, 13, 15, 158, 179, 187, 191, 201, 293, 305], "sink": [15, 250, 283, 296, 297, 298, 304], "situat": [284, 297], "size": [4, 6, 10, 13, 14, 15, 17, 78, 97, 98, 101, 104, 112, 154, 158, 191, 197, 200, 206, 209, 214, 223, 246, 247, 249, 251, 254, 263, 264, 266, 280, 283, 286, 293, 297], "size_t": [17, 57, 58, 60, 67, 87, 89, 94, 97, 98, 104], "sizediter": [267, 276], "sizediterablewithshuffl": 276, "sizeof": [57, 87, 104], "skip": [3, 14, 251, 280, 281], "sleep": 3, "slice": [94, 165, 181, 191, 244], "slientli": 260, "slightli": [293, 297, 304], "slow": [2, 3, 4, 7, 281, 297, 298, 304], "slower": [7, 9, 293, 297, 298, 304], "slowest": [298, 304], "sm": 298, "small": [3, 279, 281, 293, 299], "smaller": [225, 264, 294], "smoothli": 4, "smpte240m": 223, "snippet": [3, 276, 277, 281, 282, 284, 286, 293, 297, 299], "so": [1, 2, 3, 4, 5, 7, 9, 12, 15, 85, 88, 98, 99, 154, 159, 166, 167, 177, 181, 182, 185, 191, 192, 197, 203, 210, 212, 214, 220, 250, 255, 258, 260, 279, 280, 281, 282, 284, 285, 286, 293, 294, 296, 297, 298, 299, 302, 303, 305], "softmax": 15, "softwar": [183, 289], "solut": [3, 7, 9, 154, 156, 281, 294, 305], "solv": [9, 281], "some": [3, 5, 7, 14, 165, 219, 279, 280, 281, 282, 287, 289, 294, 298, 299, 300, 301, 303], "some_task": 5, "somehow": 242, "someth": [7, 242, 250, 299], "sometim": 304, "somewhat": [260, 293, 298], "somewher": 155, "soon": [3, 253, 281, 284, 296, 297, 301], "sort": [97, 192, 270, 279], "sourc": [6, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 282, 283, 286, 288, 293, 297], "source_video": 183, "sourceadaptor": [10, 41, 78, 82, 85, 101, 103, 116], "sourceadaptorptr": [10, 41, 47, 78, 82, 85, 91, 101], "sourceadaptorstruct": [79, 101], "space": [7, 191, 203, 247, 253, 293, 302], "spare": [294, 298], "spawn": [14, 154, 280, 301], "spd": 176, "spdl": [1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 17, 35, 36, 37, 38, 39, 40, 78, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 113, 114, 153, 154, 155, 278, 279, 280, 281, 284, 285, 286, 287, 289, 290, 291, 292, 297, 298, 299, 300, 302, 303], "spdl_default_buffer_s": [10, 55, 78, 99, 101], "spdl_io": 289, "spdl_use_cuda": 289, "spdl_use_ffmpeg_vers": 289, "spdl_use_nvcodec": 289, "spdl_use_trac": 289, "spdlnamespac": [79, 101], "speak": 7, "speaker": 183, "specif": [7, 85, 88, 94, 156, 183, 202, 204, 255, 281, 302], "specifi": [14, 94, 97, 167, 172, 183, 185, 192, 203, 225, 260, 275, 280, 282, 283, 287, 289], "speed": [7, 8, 13, 253, 280, 297, 298, 299, 301, 304], "spefici": 183, "spend": [7, 299, 302], "spent": 302, "spike": 297, "spiki": 9, "spikier": 9, "split": [3, 6, 14, 15, 154, 177, 225, 263, 269, 280, 281, 302], "split_id": [14, 280], "split_siz": [14, 280], "spot": 297, "sprcifi": 200, "sqcale": [194, 247], "squash": [281, 302], "squeez": 7, "src": [6, 10, 12, 13, 14, 15, 36, 37, 63, 65, 67, 78, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 111, 153, 158, 168, 174, 176, 185, 186, 193, 201, 202, 205, 206, 207, 208, 215, 216, 217, 218, 221, 227, 258, 276, 277, 278, 280, 286], "src_height": 279, "src_pix_fmt": 279, "src_width": 279, "srcdirectori": [80, 101], "stabl": [229, 230, 293], "stack": [278, 287, 302], "stackoverflow": 12, "stage": [1, 3, 6, 7, 12, 155, 249, 250, 251, 253, 254, 255, 257, 281, 283, 285, 288, 292, 293, 294, 296, 297, 298, 300, 303, 304], "stage1": 12, "stage2": 12, "stage3": 12, "stage_hook": [249, 254, 255, 257], "stage_id": 251, "stai": 298, "stamp": [181, 191], "stand": [1, 5, 260, 290, 302], "standard": [15, 242], "start": [2, 3, 4, 5, 9, 10, 28, 78, 94, 100, 101, 154, 167, 192, 211, 214, 249, 250, 258, 260, 267, 277, 281, 284, 288, 293, 296, 304, 305], "start_iter": 260, "starv": 297, "starvat": [3, 253, 297, 303], "stash": 234, "stask_hook": 255, "stat": [155, 249, 251, 253, 254, 256, 257, 285, 297, 302], "state": [1, 5, 13, 260, 286, 293, 296, 297], "statefuldatalaod": [7, 9], "statefuldataload": 7, "static": [4, 98], "statist": [14, 155, 253, 254, 256, 257, 283, 288, 297, 298, 300, 302, 305], "statsqueu": [155, 249, 251, 253, 285], "statu": 260, "std": [10, 15, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 45, 47, 57, 58, 60, 64, 66, 67, 68, 69, 74, 76, 78, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 113, 115, 116, 117, 121, 122, 123, 128, 129, 134, 136, 138, 139, 144, 146, 152, 154], "stdexcept": [55, 99], "stdin": 186, "step": [3, 9, 94, 155, 215, 216, 217, 221, 260, 278, 281, 285, 293, 299, 300, 301, 303], "step_tim": 299, "still": [12, 159, 186, 296], "stocast": 275, "stop": [10, 15, 28, 78, 94, 100, 101, 250, 258, 260, 275, 284, 296, 299], "stop_aft": [157, 258, 275], "stop_iter": 260, "stop_request": [14, 280], "stopasynciter": 255, "storag": [7, 10, 17, 37, 43, 55, 57, 59, 61, 78, 80, 82, 87, 89, 101, 104, 153, 158, 195, 196, 197, 217, 224, 234, 250, 286, 287, 294, 298, 302, 305], "storagetempl": [79, 101], "store": [7, 12, 154, 158, 279, 286, 293], "store_fals": 15, "store_tru": [14, 15, 280], "str": [6, 13, 14, 15, 154, 155, 158, 160, 162, 166, 168, 174, 176, 177, 179, 181, 182, 183, 184, 186, 187, 191, 192, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 225, 226, 227, 239, 241, 244, 246, 247, 249, 251, 254, 257, 259, 260, 261, 269, 270, 271, 273, 278, 279, 280, 287, 293, 303], "straggler": [288, 300], "straight": [3, 281], "straightforward": [281, 296, 297], "stream": [91, 97, 158, 162, 163, 165, 167, 168, 174, 177, 183, 185, 188, 190, 192, 193, 197, 223, 234, 286, 288, 302], "stream_index": [10, 27, 78, 91, 97, 101, 111, 183], "streamer": 278, "streaming_demux": [10, 20, 78, 91, 101, 176, 183, 210, 212, 279], "streaming_demux_video": [168, 174, 185], "streaming_load_video_nvdec": [185, 278], "streaming_nvdec_decod": [185, 227], "streaming_video_processing_block": 279, "streaming_video_processing_chart": 279, "streamingdemux": [10, 47, 78, 82, 91, 101, 122], "streamingdemuxerclass": [79, 101], "streamingdemuxerptr": [10, 20, 47, 78, 82, 91, 101], "strict": [13, 14, 15, 155, 165, 217, 218, 225, 278, 279, 280], "stride": [58, 60, 89], "string": [7, 10, 13, 16, 18, 19, 20, 22, 25, 28, 41, 44, 47, 48, 52, 53, 55, 56, 58, 60, 64, 68, 69, 76, 78, 82, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 101, 106, 107, 111, 152, 241, 271, 286, 293], "string_view": [10, 41, 47, 78, 82, 85, 91, 101, 103, 113], "strip": [14, 280, 287], "stripe": 1, "stripped_audio": 183, "strobelight": 302, "strong": 298, "struct": [10, 17, 41, 43, 51, 53, 54, 55, 79, 82, 85, 87, 88, 94, 95, 97, 98, 99, 149], "structur": [280, 291, 305], "struggl": 304, "stuck": 284, "studi": [13, 286, 288, 305], "stuff": 242, "style": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 159, 278, 279, 280], "sub": [3, 12, 293, 294, 305], "subclass": [113, 114, 155, 251, 255, 285], "subcompon": 305, "subdirectori": [153, 269], "subject": 282, "submiss": 3, "submit": [1, 3, 5, 281], "submodul": 294, "subprocess": [7, 9, 14, 154, 260, 261, 283, 301], "subroutin": 302, "subsequ": 250, "subset": [14, 99, 263, 264, 280], "subtl": [5, 296, 304], "subtract": 297, "succe": [1, 3, 255, 281], "succeed": [3, 260, 281], "success": [256, 257, 297, 299], "successfulli": [3, 6, 281], "suffer": [253, 286, 303], "suffici": 260, "suffix": [166, 177, 184, 194, 198, 211], "suggest": [7, 9, 253, 293, 297, 298, 299, 301, 304], "suitabl": [7, 247], "sum": [14, 15, 280, 297], "summar": [4, 296], "summari": [2, 155, 291, 300], "summarywrit": 155, "super": [15, 155], "supoprt": 281, "support": [3, 7, 12, 15, 158, 184, 186, 202, 204, 219, 220, 223, 226, 236, 237, 238, 280, 281, 286, 289, 293, 294, 296], "supportsgetitem": 251, "suppos": 293, "suppress_repeated_log": 259, "suppression_threshold": 259, "suppression_warning_interv": 259, "sure": [85, 198, 199, 251, 255, 260, 281, 284, 289, 294], "surpris": 9, "surrog": 282, "suscept": 304, "suspect": [9, 302], "suspend_alwai": [95, 109, 110], "sustain": 293, "swap": [9, 292, 293], "switch": [4, 7, 250, 251, 280, 286, 291, 294], "sy": 278, "sync": [2, 4, 5, 222, 223, 251, 278, 296], "sync_func": 4, "synchron": [1, 2, 3, 5, 200, 234, 250, 251, 278, 281, 282, 286, 287, 288, 296, 302], "syntax": 2, "system": [2, 3, 14, 15, 281, 296, 297, 298, 299, 300], "t": [1, 3, 4, 13, 88, 95, 109, 110, 154, 157, 158, 160, 206, 234, 250, 251, 254, 258, 259, 260, 261, 265, 266, 267, 275, 276, 277, 281, 284, 286, 297], "t0": [13, 14, 15, 154, 278, 280], "t_": 251, "tabl": 4, "take": [1, 5, 7, 12, 155, 158, 185, 186, 200, 219, 251, 281, 285, 286, 287, 297, 298, 299, 300, 302, 303, 304], "take_gil": 302, "taken": [281, 302], "talk": [85, 305], "tansfer": 197, "target": [14, 15, 154, 223, 232, 234, 247, 280, 293], "tarnsform": 154, "task": [1, 2, 4, 5, 9, 15, 156, 248, 250, 251, 253, 255, 256, 257, 259, 281, 282, 286, 287, 293, 295, 299, 300, 305], "task1": 281, "task2": 281, "task3": 281, "task_fn": [3, 281], "task_funct": 286, "task_hook": [255, 257], "task_hook_factori": [155, 251, 261], "taskhook": [155, 251, 261, 285], "taskperfstat": [155, 257, 285, 300], "taskstatshook": [155, 251, 255, 256, 285], "tcodec": 168, "team": [7, 294, 305], "techniqu": 299, "tempfil": 220, "templat": [10, 20, 25, 42, 44, 45, 46, 48, 50, 51, 53, 55, 56, 78, 82, 83, 86, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 110, 121, 128, 136, 144], "temporaryfil": 220, "tensor": [4, 14, 15, 154, 155, 158, 165, 176, 183, 190, 197, 198, 199, 209, 211, 226, 231, 234, 278, 280, 286, 287, 288, 293, 302, 303], "tensorboard": [155, 285], "termin": 260, "test": [154, 289, 305], "tfp": 154, "than": [3, 7, 9, 154, 159, 220, 251, 253, 264, 281, 282, 286, 293, 297, 298, 302, 304, 305], "thei": [3, 6, 7, 12, 99, 154, 158, 176, 223, 260, 264, 281, 286, 293, 296, 297], "them": [2, 3, 4, 5, 6, 7, 12, 14, 15, 154, 158, 197, 218, 223, 234, 250, 251, 253, 260, 262, 280, 281, 282, 285, 286, 293, 294, 297, 298, 299, 300, 302, 303, 304], "themselv": 1, "therefor": [5, 12, 88, 186, 279, 282, 286, 289, 293, 296, 297, 298], "theri": 178, "thi": [1, 2, 3, 4, 5, 7, 8, 9, 12, 13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 110, 154, 155, 157, 158, 159, 167, 168, 177, 179, 181, 183, 184, 185, 186, 191, 192, 194, 195, 197, 198, 199, 202, 204, 206, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 225, 234, 242, 249, 250, 251, 253, 254, 255, 257, 258, 260, 261, 263, 264, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "thin": 184, "thing": [3, 5, 85, 281, 293, 296], "think": [3, 281, 299], "third": [227, 289], "those": 7, "though": [3, 4, 7, 9, 12, 186, 279, 281], "thought": [9, 301], "thread": [1, 2, 5, 7, 9, 12, 13, 14, 15, 97, 158, 186, 200, 224, 234, 250, 251, 280, 281, 283, 284, 287, 288, 291, 294, 295, 305], "thread_loc": 286, "threadpoolexecutor": [3, 4, 13, 281, 282, 286], "three": [3, 260, 287, 293], "throttl": 298, "through": [97, 253, 285, 286, 289, 293, 294, 297, 298, 300], "throughout": 297, "throughput": [7, 12, 154, 280, 281, 292, 293, 294, 300, 305], "throw": 94, "thrown": [99, 252], "thu": [178, 264, 281], "tiktoken": [12, 294], "time": [1, 3, 4, 5, 7, 9, 12, 13, 14, 15, 97, 154, 155, 158, 162, 165, 166, 167, 176, 179, 181, 182, 186, 187, 191, 192, 198, 199, 211, 214, 227, 243, 249, 250, 253, 254, 256, 260, 278, 280, 281, 282, 284, 286, 289, 296, 299, 300, 301, 302, 303, 304], "time_bas": [10, 18, 78, 86, 88, 94, 97, 101, 111, 162, 177, 179, 187, 191, 279], "timebas": 191, "timeout": [15, 158, 160, 250, 260, 296, 303], "timeouterror": 250, "timestamp": [7, 10, 78, 97, 101, 111, 162, 167, 176, 179, 187, 191, 192, 203, 205, 208, 211, 214, 215, 221], "timm": 15, "titl": 288, "tmp": 246, "tnum_work": 154, "to_jax": 158, "to_numba": [158, 169, 171], "to_numpi": [169, 279], "to_thread": [3, 4, 251], "to_torch": [6, 14, 15, 154, 155, 158, 169, 171, 197, 278, 280, 287, 293], "tobyt": 219, "togeth": [6, 13, 264, 293], "toi": 5, "token": 294, "too": [7, 286], "took": [14, 280], "tool": [302, 305], "toolkit": 289, "top": [3, 227, 281, 286], "top1": 15, "top5": 15, "top_catid": 15, "top_prob": 15, "topic": [8, 9], "topk": 15, "torch": [13, 14, 15, 154, 155, 158, 197, 200, 209, 231, 234, 263, 264, 278, 280, 286, 293, 299], "torch_cuda_warmup": 278, "torchdata": [7, 9], "torchvis": [154, 293], "total": 303, "total_batch": [14, 280], "total_fram": [14, 280], "tpacket": 168, "trac": [99, 247], "tracc": 244, "trace": [1, 5, 14, 15, 100, 242, 243, 244, 278, 280, 286, 298, 302, 304], "trace_count": [10, 56, 78, 82, 100, 101], "trace_ev": 15, "trace_event_begin": [10, 56, 78, 82, 100, 101], "trace_event_end": [10, 56, 78, 82, 100, 101], "trace_path": [14, 15, 278, 280], "traceback": 186, "tracer": [245, 300], "tracingsess": [10, 56, 74, 78, 82, 100, 101], "tracingsessionenum": [79, 101], "track": [254, 257], "trade": [7, 296], "tradit": 2, "train": [7, 9, 12, 13, 14, 15, 154, 157, 234, 258, 263, 264, 269, 280, 286, 288, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305], "trand": 298, "transfer": [3, 7, 14, 15, 154, 158, 195, 234, 281, 286, 287, 289, 293, 297, 302, 303], "transfer_buff": [158, 197, 215, 216, 217, 221, 280], "transfer_buffer_cpu": 209, "transfer_data": 286, "transfer_executor": 286, "transfer_fn": 158, "transfer_tensor": 286, "transfor": 15, "transform": [15, 154, 262, 274, 279, 293], "transftransform": 247, "transit": 260, "translat": 297, "travers": [234, 262, 269, 272], "treatment": 293, "tree": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280], "trend": [291, 297], "tri": [9, 185, 284, 297], "trim": [89, 211, 214], "true": [3, 4, 13, 14, 15, 95, 97, 154, 155, 158, 168, 176, 192, 197, 217, 218, 223, 224, 225, 234, 236, 237, 238, 246, 258, 259, 264, 276, 277, 278, 279, 280, 286], "truli": 299, "try": [1, 2, 3, 14, 15, 154, 255, 280, 281, 298, 299, 302], "tunabl": 294, "tupl": [6, 13, 14, 15, 20, 47, 53, 56, 67, 69, 91, 97, 100, 111, 154, 162, 167, 176, 179, 184, 187, 191, 192, 199, 200, 205, 208, 211, 214, 215, 219, 221, 234, 241, 247, 251, 269, 278, 279, 280, 286, 287], "turn": [9, 284, 287, 296, 301], "turner": 288, "tutori": [3, 281], "twice": 293, "two": [85, 183, 186, 255, 264, 282, 285, 296], "txt": [14, 15, 154, 250, 279], "type": [7, 10, 13, 14, 15, 34, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 78, 80, 85, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 104, 106, 107, 108, 110, 148, 149, 150, 151, 152, 153, 154, 155, 158, 176, 186, 191, 194, 198, 209, 228, 229, 230, 231, 234, 241, 251, 261, 271, 278, 279, 280, 281, 292, 296], "typedef": [10, 99, 153], "typeerror": 186, "typenam": [70, 95, 100, 109], "typevar": 13, "typic": [3, 12, 158, 185, 192, 250, 287, 297, 298, 302, 303], "u": [9, 160, 191, 223, 251, 261, 286], "u8": [166, 194, 198, 211], "u8p": [198, 211], "u_": 251, "udp": 183, "ui": 155, "uint": [10, 40, 57, 78, 87, 99, 101, 104], "uint64_t": 94, "uint8": [13, 155, 176, 209, 280], "uint8_t": [57, 87, 97, 104, 112], "uintptr_t": [94, 97, 111, 200], "uncommon": 294, "undef": 94, "under": [13, 14, 15, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 154, 155, 278, 279, 280, 289, 305], "underli": [185, 186, 204, 299, 302], "understand": [2, 281, 291, 292, 294], "undesir": 200, "undoubtedli": 9, "unexpect": [13, 99, 260, 284], "unexpected_cmd_reciev": 260, "unexpectedli": 5, "unhandled_except": [10, 78, 95, 101, 109, 110], "unharm": 284, "unifi": 2, "uniniti": 186, "uninstal": 289, "unique_ptr": [74, 85, 87, 90, 91, 92, 93, 94, 96, 97, 100, 115, 117, 121, 122, 123, 128, 129, 136, 138, 139, 144], "uniquiet": 294, "unit": [3, 5, 104, 162, 179, 187, 191, 198, 199, 250, 251, 281, 301], "univari": 287, "unlik": [99, 202, 204, 284, 293], "unlimit": 251, "unsaf": 154, "unseen": 294, "unsign": [166, 194, 198, 199, 226], "unstack": 287, "until": [1, 3, 158, 198, 199, 251, 267, 275, 284, 294, 296, 297, 301], "unus": [278, 284], "up": [4, 14, 275, 280, 289, 297, 301, 302, 304], "updat": 299, "upgrad": [289, 305], "upper": [9, 301], "upperbound": 7, "upstream": [3, 251, 253, 254, 293, 297], "uri": [25, 91, 96, 227], "url": [85, 113, 158, 176, 183, 250, 278, 287, 288, 303], "url_gener": 282, "us": [1, 2, 3, 5, 6, 7, 9, 12, 13, 14, 15, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 109, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 155, 158, 159, 162, 163, 165, 177, 179, 183, 185, 186, 187, 188, 190, 195, 198, 199, 201, 202, 203, 204, 206, 210, 212, 214, 218, 220, 223, 224, 226, 227, 234, 242, 247, 249, 250, 251, 253, 254, 255, 256, 257, 258, 260, 264, 265, 266, 267, 269, 270, 275, 278, 279, 281, 282, 284, 286, 287, 288, 289, 292, 293, 294, 296, 297, 299, 301, 302, 303], "usag": [2, 168, 184, 193, 197, 249, 250, 251, 281, 299], "use_bf16": 15, "use_cach": 224, "use_nvdec": 280, "use_nvjpeg": 15, "usecas": [168, 193], "user": [1, 6, 14, 97, 167, 192, 280, 281, 289, 300, 302, 305], "usr": [13, 14, 154, 155, 279], "usual": [1, 4, 191, 198, 199, 255, 279, 281, 284, 286, 293, 304], "util": [4, 9, 12, 14, 15, 28, 37, 55, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 101, 153, 154, 155, 280, 288, 293, 296, 298, 299, 301, 303, 305], "utmost": 285, "uv": [227, 289], "ux": 305, "v": [13, 14, 154, 155, 159, 191, 223, 280, 289, 295], "val": [14, 15, 154, 155, 195, 242, 243, 269, 280], "valentin": 288, "valid": [13, 181, 186, 198, 199, 211, 214, 269, 297], "valu": [3, 4, 10, 12, 13, 15, 38, 39, 40, 78, 95, 101, 109, 110, 154, 157, 162, 166, 167, 179, 183, 187, 192, 194, 198, 199, 200, 202, 204, 209, 211, 214, 223, 226, 242, 243, 247, 250, 253, 258, 260, 263, 264, 275, 276, 286, 296, 297, 304], "valueerror": 13, "vari": 183, "variabl": [4, 186, 234, 284, 289], "varianc": 298, "variant": [49, 50, 53, 93, 94, 97, 134, 146, 296], "varieti": [287, 299, 305], "vc1": [10, 38, 78, 99, 101], "vector": [10, 26, 43, 45, 50, 53, 56, 57, 60, 66, 67, 68, 78, 82, 87, 89, 94, 96, 97, 100, 101, 104], "verbos": 242, "veri": [1, 5, 7, 9, 281], "verifi": [298, 302], "versatil": 7, "version": [7, 99, 204, 241, 289, 305], "via": [5, 159, 296], "video": [10, 39, 78, 88, 92, 94, 97, 99, 101, 120, 125, 126, 135, 137, 140, 143, 150, 155, 168, 176, 181, 183, 187, 188, 189, 190, 191, 192, 193, 199, 201, 203, 208, 212, 214, 221, 225, 227, 247, 278, 288, 289, 294, 302, 305], "video_codec": [168, 174, 176, 185, 212, 279], "video_dataload": 280, "video_decod": 279, "video_encod": 279, "video_encode_config": [183, 189, 226, 279], "video_fram": 177, "video_index": 279, "video_packet": [183, 279], "video_s": [177, 279], "video_stream_index": [176, 279], "videocodec": [10, 44, 78, 82, 88, 101, 174, 176, 183, 185, 192, 212], "videodecod": [174, 279], "videoencod": [10, 48, 78, 82, 92, 101, 183, 279], "videoencodeconfig": [10, 55, 78, 82, 99, 101, 183, 247], "videoencoderptr": [10, 48, 78, 82, 92, 101], "videofram": [10, 50, 78, 82, 94, 101, 163, 174, 177, 181, 188, 190, 196, 199, 203, 279], "videoframesptr": [10, 50, 60, 78, 82, 89, 94, 101, 134], "videopacket": [10, 53, 78, 82, 97, 101, 176, 183, 185, 188, 190, 193, 203, 204, 208, 213, 214, 225], "videopacketsptr": [10, 53, 67, 78, 82, 97, 101, 146], "view": [15, 281, 282], "virtual": [17, 85, 98, 103, 105, 113, 114], "visit": 275, "visual": [186, 302], "void": [17, 22, 25, 26, 28, 58, 60, 70, 71, 72, 73, 76, 77, 87, 89, 93, 94, 95, 96, 97, 98, 100, 104, 109, 110, 114], "vp8": [10, 38, 78, 99, 101], "vp9": [10, 38, 78, 99, 101], "vstack": 177, "w": [155, 196, 199, 202, 223, 279, 280], "wa": [3, 5, 7, 9, 154, 186, 204, 242, 253, 260, 261, 281, 293, 297, 298, 305], "wai": [3, 5, 7, 159, 206, 234, 281, 282, 284, 285, 286, 289, 293, 294, 296, 299, 302, 305], "wait": [1, 3, 5, 7, 158, 223, 249, 250, 253, 260, 281, 282, 296, 297, 298, 301, 304], "walk": 300, "walltim": 155, "want": [3, 7, 183, 203, 255, 281, 286, 287, 289, 293, 294, 297, 303], "warm": [14, 280], "warn": 242, "wast": 293, "watch": 260, "wav": 297, "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 98, 99, 242, 279, 281, 282, 284, 285, 286, 289, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "weakest": 298, "weight": 275, "well": [3, 293, 296], "went": [242, 253, 297], "were": [7, 9, 204, 299, 302], "what": [1, 5, 7, 9, 198, 199, 281, 282, 288, 294, 298, 300, 302], "whatev": 7, "wheel": 1, "when": [1, 2, 3, 5, 7, 9, 12, 14, 88, 97, 99, 154, 166, 167, 168, 177, 181, 183, 186, 191, 192, 195, 198, 199, 203, 209, 210, 211, 212, 214, 219, 234, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 263, 264, 275, 280, 281, 282, 284, 285, 286, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304], "whenev": [297, 301], "where": [1, 5, 7, 9, 154, 191, 196, 219, 253, 260, 269, 280, 282, 284, 286, 287, 296, 297, 298, 299, 300, 302, 304], "wherea": [9, 292], "whether": [3, 7, 15, 154, 219, 246, 260, 281, 293, 296, 304], "which": [1, 3, 4, 6, 7, 9, 14, 97, 176, 183, 185, 191, 192, 195, 198, 199, 204, 209, 210, 211, 212, 214, 219, 220, 242, 249, 250, 251, 254, 260, 261, 270, 280, 281, 284, 285, 286, 287, 288, 289, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305], "while": [1, 3, 4, 5, 8, 9, 14, 154, 185, 195, 250, 264, 276, 277, 280, 281, 293, 297, 298, 300, 304, 305], "who": [282, 305], "whole": [2, 280, 281, 298, 305], "why": [4, 288, 291, 293, 296, 304], "width": [14, 15, 99, 155, 158, 179, 181, 182, 186, 187, 191, 192, 196, 197, 204, 209, 214, 217, 218, 223, 226, 227, 247, 278, 279, 280, 287], "wieght": 264, "wiki": [99, 247], "window": [20, 91, 97, 167, 176, 186, 192, 297, 304], "window_fullscreen": 183, "wise": [276, 294], "with_stack": 278, "with_transf": 154, "within": [94, 250, 297], "without": [3, 6, 7, 97, 99, 158, 183, 184, 197, 203, 210, 212, 226, 250, 251, 286, 293, 296, 302], "wmv3": [10, 38, 78, 99, 101], "won": [1, 88, 206, 251, 284, 297], "word": [5, 281], "wordnet": [270, 271], "work": [2, 3, 4, 5, 7, 35, 36, 37, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 153, 159, 185, 186, 206, 281, 288, 293, 294, 296, 298, 300, 304, 305], "workaround": [12, 286, 293, 294], "worker": [4, 7, 13, 14, 15, 154, 158, 159, 260, 280, 293], "worker_entrypoint": [14, 280], "worker_id": [14, 280], "worker_init_fn": 160, "workflow": 8, "workload": 305, "world": 281, "world_siz": [263, 264], "worth": [292, 298, 299], "worthwhil": 1, "would": [3, 7, 9, 282, 294, 296], "wrap": [4, 7, 157, 234, 258, 281, 284, 299, 302], "wrap_futur": 4, "wrapper": [4, 5, 157, 184, 258, 259, 287], "write": [1, 4, 5, 7, 10, 25, 78, 96, 101, 155, 183, 226, 246, 279, 287, 296], "writer": 155, "written": [5, 7, 12, 183, 209, 279, 293, 296, 303], "wroker": 260, "wrong": 242, "www": 99, "x": [15, 154, 166, 220, 279, 284], "x3": 294, "y": [154, 191, 220, 223, 227], "ycgco": 223, "ye": 293, "year": 288, "yet": 293, "yield": [13, 14, 154, 158, 159, 227, 250, 251, 255, 258, 260, 261, 263, 264, 269, 275, 276, 277, 280, 284, 287], "yield_valu": [10, 78, 95, 101, 109, 110], "you": [1, 3, 4, 6, 7, 9, 12, 155, 157, 159, 183, 185, 200, 203, 226, 251, 254, 255, 257, 258, 263, 264, 279, 281, 284, 285, 286, 287, 288, 289, 293, 294, 297, 298, 299, 300, 302, 305], "your": [157, 251, 258, 286, 289, 294, 305], "yuta": 288, "yuv": [191, 199, 279], "yuv420": [279, 293], "yuv420p": [177, 182, 192, 214, 247, 279], "yuv422p": 214, "yuv444p": [199, 209, 214, 226], "zero": [14, 280, 284, 297], "zip": [7, 154, 184, 220, 293], "zipfil": 7, "zlib": 289, "zone": 298, "zoom": 1}, "titles": ["API Reference", "The Event Loop", "Introduction to Async I/O", "Implementing Orchestration Mechanism", "Running Synchronous Functions", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">async</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">await</span></code> keywords", "Best Practices", "Data Format and Performance", "Case Studies", "Parallelism and Performance", "API References (C++)", "Examples", "Frequently Asked Questions", "Data formats", "Image dataloading", "Imagenet classification", "Template Class BSF", "Class CPUStorage", "Template Class Codec", "Template Class Decoder", "Class Demuxer", "Template Class Encoder", "Class FilterGraph", "Template Class Frames", "Class InternalError", "Class Muxer", "Class PacketSeries", "Class StreamingDemuxer", "Class TracingSession", "Template Class DecoderImpl", "Template Class EncoderImpl", "Define _IS_VIDEO", "Define _IS_AUDIO", "Define _IS_IMAGE", "Define SPDL_DEFAULT_BUFFER_SIZE", "Directory src", "Directory libspdl", "Directory core", "Enum CodecID", "Enum MediaType", "Enum ElemClass", "File adaptor.h", "File bsf.h", "File buffer.h", "File codec.h", "File conversion.h", "File decoder.h", "File demuxing.h", "File encoder.h", "File filter_graph.h", "File frames.h", "File generator.h", "File muxer.h", "File packets.h", "File storage.h", "File types.h", "File utils.h", "Function spdl::core::cpu_buffer", "Function spdl::core::create_reference_audio_frame", "Template Function spdl::core::convert_frames(const std::vector&lt;const Frames&lt;media&gt; *&gt;&amp;, std::shared_ptr&lt;CPUStorage&gt;)", "Function spdl::core::create_reference_video_frame", "Template Function spdl::core::convert_frames(const Frames&lt;media&gt; *, std::shared_ptr&lt;CPUStorage&gt;)", "Function spdl::core::make_demuxer(const std::string_view, const std::optional&lt;DemuxConfig&gt;&amp;)", "Function spdl::core::make_demuxer(const std::string&amp;, const SourceAdaptorPtr&amp;, const std::optional&lt;DemuxConfig&gt;&amp;)", "Function spdl::core::make_filter_graph", "Template Function spdl::core::clone", "Template Function spdl::core::get_timestamps", "Function spdl::core::extract_packets_at_indices", "Function spdl::core::get_ffmpeg_filters", "Function spdl::core::get_ffmpeg_versions", "Template Function spdl::core::trace_counter", "Function spdl::core::trace_event_end", "Function spdl::core::set_ffmpeg_log_level", "Function spdl::core::register_avdevices", "Function spdl::core::init_tracing", "Function spdl::core::get_ffmpeg_log_level", "Function spdl::core::trace_event_begin", "Function spdl::core::init_glog", "Full API", "Class Hierarchy", "File Hierarchy", "Namespace spdl", "Namespace spdl::core", "Namespace spdl::core::detail", "Namespace std", "Program Listing for File adaptor.h", "Program Listing for File bsf.h", "Program Listing for File buffer.h", "Program Listing for File codec.h", "Program Listing for File conversion.h", "Program Listing for File decoder.h", "Program Listing for File demuxing.h", "Program Listing for File encoder.h", "Program Listing for File filter_graph.h", "Program Listing for File frames.h", "Program Listing for File generator.h", "Program Listing for File muxer.h", "Program Listing for File packets.h", "Program Listing for File storage.h", "Program Listing for File types.h", "Program Listing for File utils.h", "Libspdl API", "Struct AVRational", "Struct BytesAdaptor", "Struct CPUBuffer", "Struct DataInterface", "Struct DecodeConfig", "Struct DemuxConfig", "Template Struct EncodeConfigBase", "Template Struct Generator", "Struct Generator::promise_type", "Template Struct Packets", "Struct RawPacketData", "Struct SourceAdaptor", "Struct Storage", "Typedef spdl::core::DataInterfacePtr", "Typedef spdl::core::SourceAdaptorPtr", "Typedef spdl::core::CPUBufferPtr", "Typedef spdl::core::ImageCodec", "Typedef spdl::core::AudioCodec", "Typedef spdl::core::VideoCodec", "Typedef spdl::core::DecoderPtr", "Typedef spdl::core::StreamingDemuxerPtr", "Typedef spdl::core::DemuxerPtr", "Typedef spdl::core::AudioEncoderPtr", "Typedef spdl::core::VideoEncoder", "Typedef spdl::core::VideoEncoderPtr", "Typedef spdl::core::AudioEncoder", "Typedef spdl::core::EncoderPtr", "Typedef spdl::core::FilterGraphPtr", "Typedef spdl::core::ImageFramesPtr", "Typedef spdl::core::ImageFrames", "Typedef spdl::core::AudioFrames", "Typedef spdl::core::AudioFramesPtr", "Typedef spdl::core::AnyFrames", "Typedef spdl::core::VideoFramesPtr", "Typedef spdl::core::FramesPtr", "Typedef spdl::core::VideoFrames", "Typedef spdl::core::MuxerPtr", "Typedef spdl::core::PacketSeriesPtr", "Typedef spdl::core::VideoPackets", "Typedef spdl::core::ImagePacketsPtr", "Typedef spdl::core::AudioPackets", "Typedef spdl::core::VideoPacketsPtr", "Typedef spdl::core::PacketsPtr", "Typedef spdl::core::AudioPacketsPtr", "Typedef spdl::core::AnyPackets", "Typedef spdl::core::ImagePackets", "Typedef spdl::core::AudioEncodeConfig", "Typedef AVRational", "Typedef spdl::core::VideoEncodeConfig", "Typedef spdl::core::Rational", "Typedef spdl::core::OptionDict", "Full API", "Multi thread preprocessing", "Performance analysis", "spdl.dataloader", "spdl.dataloader.CacheDataLoader", "spdl.dataloader.DataLoader", "spdl.dataloader.PyTorchDataLoader", "spdl.dataloader.get_pytorch_dataloader", "spdl.io", "spdl.io.AudioCodec", "spdl.io.AudioDecoder", "spdl.io.AudioEncodeConfig", "spdl.io.AudioEncoder", "spdl.io.AudioFrames", "spdl.io.AudioPackets", "spdl.io.BSF", "spdl.io.CPUBuffer", "spdl.io.CPUStorage", "spdl.io.CUDABuffer", "spdl.io.CUDAConfig", "spdl.io.DecodeConfig", "spdl.io.Decoder", "spdl.io.DemuxConfig", "spdl.io.Demuxer", "spdl.io.FilterGraph", "spdl.io.Frames", "spdl.io.ImageCodec", "spdl.io.ImageDecoder", "spdl.io.ImageFrames", "spdl.io.ImagePackets", "spdl.io.Muxer", "spdl.io.NpzFile", "spdl.io.NvDecDecoder", "spdl.io.Packets", "spdl.io.VideoCodec", "spdl.io.VideoDecoder", "spdl.io.VideoEncodeConfig", "spdl.io.VideoEncoder", "spdl.io.VideoFrames", "spdl.io.VideoPackets", "spdl.io.apply_bsf", "spdl.io.audio_encode_config", "spdl.io.convert_array", "spdl.io.convert_frames", "spdl.io.cpu_storage", "spdl.io.create_reference_audio_frame", "spdl.io.create_reference_video_frame", "spdl.io.cuda_config", "spdl.io.decode_config", "spdl.io.decode_image_nvjpeg", "spdl.io.decode_packets", "spdl.io.decode_packets_nvdec", "spdl.io.demux_audio", "spdl.io.demux_config", "spdl.io.demux_image", "spdl.io.demux_video", "spdl.io.encode_image", "spdl.io.get_abuffer_desc", "spdl.io.get_audio_filter_desc", "spdl.io.get_buffer_desc", "spdl.io.get_filter_desc", "spdl.io.get_video_filter_desc", "spdl.io.load_audio", "spdl.io.load_image", "spdl.io.load_image_batch", "spdl.io.load_image_batch_nvjpeg", "spdl.io.load_npy", "spdl.io.load_npz", "spdl.io.load_video", "spdl.io.nv12_to_bgr", "spdl.io.nv12_to_rgb", "spdl.io.nvdec_decoder", "spdl.io.sample_decode_video", "spdl.io.save_image", "spdl.io.streaming_load_video_nvdec", "spdl.io.to_jax", "spdl.io.to_numba", "spdl.io.to_numpy", "spdl.io.to_torch", "spdl.io.transfer_buffer", "spdl.io.transfer_buffer_cpu", "spdl.io.transfer_tensor", "spdl.io.utils", "spdl.io.utils.built_with_cuda", "spdl.io.utils.built_with_nvcodec", "spdl.io.utils.built_with_nvjpeg", "spdl.io.utils.get_ffmpeg_filters", "spdl.io.utils.get_ffmpeg_log_level", "spdl.io.utils.get_ffmpeg_versions", "spdl.io.utils.set_ffmpeg_log_level", "spdl.io.utils.trace_counter", "spdl.io.utils.trace_event", "spdl.io.utils.trace_gc", "spdl.io.utils.tracing", "spdl.io.video_encode_config", "spdl.pipeline", "spdl.pipeline.AsyncQueue", "spdl.pipeline.Pipeline", "spdl.pipeline.PipelineBuilder", "spdl.pipeline.PipelineFailure", "spdl.pipeline.QueuePerfStats", "spdl.pipeline.StatsQueue", "spdl.pipeline.TaskHook", "spdl.pipeline.TaskPerfStats", "spdl.pipeline.TaskStatsHook", "spdl.pipeline.cache_iterator", "spdl.pipeline.create_task", "spdl.pipeline.iterate_in_subprocess", "spdl.pipeline.run_pipeline_in_subprocess", "spdl.source", "spdl.source.DistributedDeterministicSampler", "spdl.source.DistributedRandomSampler", "spdl.source.IterableWithShuffle", "spdl.source.SizedIterable", "spdl.source.SizedIterableWithShuffle", "spdl.source.imagenet", "spdl.source.imagenet.ImageNet", "spdl.source.imagenet.get_mappings", "spdl.source.imagenet.parse_wnid", "spdl.source.local_directory", "spdl.source.local_directory.LocalDirectory", "spdl.source.utils", "spdl.source.utils.MergeIterator", "spdl.source.utils.embed_shuffle", "spdl.source.utils.repeat_source", "Streaming nvdec decoding", "Streaming video processing", "Video dataloading", "Introduction to Async", "Concurrency", "Getting Started", "Building and Running Pipeline", "Collecting Runtime Statistics", "Pipeline Parallelism", "Pipeline Stages", "SPDL (Scalable and Performant Data Loading)", "Installation", "IO Module", "Migration Guide", "Paradigm Shift", "Migrating from PyTorch DataLoader", "Why migrate to SPDL?", "Development Notes", "Implementation detail of Pipeline", "Analyzing the Performance", "Metrics across Ranks", "Headspace Analysis", "Optimization Guide", "Noisy Neighbour", "Resolving the Bottleneck", "Composition of Pipeline", "The Straggler", "Overview"], "titleterms": {"By": [41, 43, 44, 48, 50, 51, 53, 54, 55], "NOT": 305, "One": 193, "The": [1, 4, 5, 7, 281, 297, 304], "_is_audio": 32, "_is_imag": 33, "_is_video": 31, "across": 298, "adaptor": [41, 85], "adjust": 302, "an": 286, "analysi": [155, 299], "analyz": 297, "anyfram": 134, "anypacket": 146, "api": [0, 10, 78, 101, 153, 156, 161, 235, 248, 262, 268, 272, 274, 288], "apply_bsf": [161, 193], "around": 12, "ask": 12, "async": [2, 4, 5, 12, 281, 296], "asyncqueu": [248, 249], "attempt": 281, "audio": [176, 177, 206], "audio_encode_config": [161, 194], "audiocodec": [119, 161, 162], "audiodecod": [161, 163], "audioencod": [127, 161, 165], "audioencodeconfig": [148, 161, 164], "audioencoderptr": 124, "audiofram": [132, 161, 166], "audioframesptr": 133, "audiopacket": [142, 161, 167], "audiopacketsptr": 145, "averag": [297, 298], "avoid": 6, "avrat": [102, 149], "await": [5, 281], "base": [17, 24, 103], "basic": 280, "batch": 293, "best": 6, "bottleneck": 302, "bsf": [16, 42, 86, 161, 168], "buffer": [43, 87, 296], "build": [284, 289], "built_with_cuda": [235, 236], "built_with_nvcodec": [235, 237], "built_with_nvjpeg": [235, 238], "bulk": 250, "bytesadaptor": 103, "c": 10, "cach": 299, "cache_iter": [248, 258], "cachedataload": [156, 157], "call": 284, "case": 8, "caveat": 284, "chain": 3, "chang": [7, 201], "citat": 288, "class": [6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 78, 79, 82, 83, 101, 155, 280], "classif": 15, "clone": [65, 186], "codec": [18, 44, 88], "codecid": 38, "collect": 285, "combin": 286, "commun": 4, "compon": 279, "compos": [6, 281], "composit": 303, "con": 294, "concept": 305, "concurr": [3, 4, 281, 282, 292, 302], "const": [59, 61, 62, 63], "content": 288, "convers": [45, 89], "convert_arrai": [161, 195], "convert_fram": [59, 61, 161, 196], "core": [37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 305], "cpu_buff": 57, "cpu_storag": [161, 197], "cpubuff": [104, 161, 169], "cpubufferptr": 117, "cpustorag": [17, 59, 61, 161, 170], "creat": 6, "create_reference_audio_fram": [58, 161, 198], "create_reference_video_fram": [60, 161, 199], "create_task": [248, 259], "cuda": [197, 200], "cuda_config": [161, 200], "cudabuff": [161, 171], "cudaconfig": [161, 172], "custom": 286, "data": [7, 13, 260, 288, 297, 298], "datainterfac": 105, "datainterfaceptr": 115, "dataload": [14, 156, 157, 158, 159, 160, 280, 293], "dataset": 6, "decid": 299, "decod": [19, 46, 90, 161, 174, 176, 185, 201, 278, 280, 293], "decode_config": [161, 201], "decode_image_nvjpeg": [161, 202], "decode_packet": [161, 203], "decode_packets_nvdec": [161, 204], "decodeconfig": [106, 161, 173], "decoderimpl": 29, "decoderptr": 121, "default": [4, 200, 286], "defin": [31, 32, 33, 34, 50, 55, 78, 101], "definit": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "demux": [20, 47, 91, 161, 176, 193], "demux_audio": [161, 205], "demux_config": [161, 206], "demux_imag": [161, 207], "demux_video": [161, 208], "demuxconfig": [62, 63, 107, 161, 175], "demuxerptr": 123, "depend": 289, "deriv": [113, 114], "detail": [83, 260, 296], "develop": [288, 295], "devic": 183, "differ": 4, "difficulti": 281, "directori": [35, 36, 37, 153], "distribut": 264, "distributeddeterministicsampl": [262, 263], "distributedrandomsampl": [262, 264], "document": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "doe": 12, "download": 298, "dr": [7, 9], "effici": 305, "elemclass": 40, "embed_shuffl": [274, 276], "encod": [21, 48, 92], "encode_imag": [161, 209], "encodeconfigbas": 108, "encoderimpl": 30, "encoderptr": 128, "enum": [38, 39, 40, 55, 78, 82, 101], "estim": 299, "event": [1, 281], "exampl": [7, 11, 168, 174, 176, 177, 183, 185, 186, 193, 197, 201, 206, 210, 212, 241, 243, 244, 246, 250, 264], "execut": [3, 281, 297], "executor": [3, 4, 286], "extract_packets_at_indic": 67, "faster": [4, 197], "ffmpeg": 201, "file": [37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 153, 206], "filter": 177, "filter_graph": [49, 93], "filtergraph": [22, 161, 177], "filtergraphptr": 129, "format": [7, 13], "frame": [23, 50, 59, 61, 94, 161, 178], "framesptr": 136, "free": 289, "frequent": 12, "from": [7, 289, 293], "full": [78, 101, 153], "function": [4, 7, 12, 13, 14, 15, 43, 45, 47, 49, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 101, 154, 155, 260, 278, 279, 280, 302], "futur": [3, 281], "gain": 299, "gener": [51, 95, 109, 110], "get": [283, 297], "get_abuffer_desc": [161, 210], "get_audio_filter_desc": [161, 211], "get_buffer_desc": [161, 212], "get_ffmpeg_filt": [68, 235, 239], "get_ffmpeg_log_level": [75, 235, 240], "get_ffmpeg_vers": [69, 235, 241], "get_filter_desc": [161, 213], "get_map": [268, 270], "get_pytorch_dataload": [156, 160], "get_timestamp": 66, "get_video_filter_desc": [161, 214], "gil": 12, "gpu": 280, "guid": [291, 300], "h": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "h264": 201, "headeless": 206, "headspac": 299, "helper": 260, "hierarchi": [79, 80, 101], "hold": 12, "home": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "how": [12, 305], "i": [2, 4, 12, 293, 305], "imag": [14, 250, 293], "imagecodec": [118, 161, 179], "imagedecod": [161, 180], "imagefram": [131, 161, 181], "imageframesptr": 130, "imagenet": [15, 262, 268, 269, 270, 271], "imagepacket": [147, 161, 182], "imagepacketsptr": 141, "implement": [3, 7, 260, 296], "includ": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "inconsist": 9, "increment": 185, "inherit": [17, 24, 103, 113, 114], "init_glog": 77, "init_trac": 74, "input": 177, "instal": 289, "inter": 4, "intermedi": 6, "intern": 201, "internalerror": 24, "introduct": [2, 281], "io": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 290, 296], "iter": 284, "iterablewithshuffl": [262, 265], "iterate_in_subprocess": [248, 260], "keep": 284, "keyword": [5, 281], "libspdl": [36, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 101], "list": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "load": [7, 206, 250, 288], "load_audio": [161, 215], "load_imag": [161, 216], "load_image_batch": [161, 217], "load_image_batch_nvjpeg": [161, 218], "load_npi": [161, 219], "load_npz": [161, 220], "load_video": [161, 221], "local_directori": [262, 272, 273], "localdirectori": [272, 273], "lock": 197, "loop": [1, 281, 296], "make": 6, "make_demux": [62, 63], "make_filter_graph": 64, "maximum": [4, 299], "mechan": [1, 3], "media": [59, 61, 305], "mediatyp": 39, "memori": [7, 197], "mergeiter": [274, 275], "method": 186, "metric": 298, "migrat": [291, 293, 294], "modul": 290, "multi": [3, 4, 154, 286], "multimedia": 177, "multipl": [3, 177, 281], "multiplex": 1, "multiprocess": 9, "muxer": [25, 52, 96, 161, 183], "muxerptr": 138, "namespac": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 78, 81, 82, 83, 84, 101], "neighbour": [9, 301], "nest": [109, 110], "noisi": [9, 301], "note": [3, 186, 279, 287, 288, 295], "npz": 7, "npzfile": [161, 184], "number": [201, 297], "numpi": 7, "nv12_to_bgr": [161, 222], "nv12_to_rgb": [161, 223], "nvdec": 278, "nvdec_decod": [161, 224], "nvdecdecod": [161, 185], "o": [2, 4, 12, 293, 305], "off": 193, "optim": 300, "option": [62, 63, 183, 289], "optiondict": 152, "orchestr": 3, "output": 177, "overview": [156, 161, 235, 248, 262, 268, 272, 274, 305], "packet": [53, 97, 111, 161, 186], "packetseri": 26, "packetseriesptr": 139, "packetsptr": 144, "page": 197, "paradigm": 292, "parallel": [9, 286], "parse_wnid": [268, 271], "passthrough": 177, "pcm": 206, "perform": [3, 7, 9, 155, 288, 293, 297, 305], "pipelin": [3, 9, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 281, 284, 286, 287, 296, 303], "pipelinebuild": [248, 251], "pipelinefailur": [248, 252], "pool": 282, "practic": [6, 7], "preprocess": 154, "pro": 294, "process": [4, 279, 286, 287], "profil": 302, "program": [85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "promise_typ": 110, "protocol": 183, "public": 288, "put": 297, "pypi": 289, "python": 289, "pytorch": [200, 293], "pytorchdataload": [156, 159], "question": 12, "queue": [296, 297], "queueperfstat": [248, 253, 297], "rank": 298, "ration": 151, "raw": 206, "rawpacketdata": 112, "readi": [297, 298], "refer": [0, 10, 156, 161, 235, 248, 262, 268, 272, 274, 284, 288], "register_avdevic": 73, "relationship": [17, 24, 103, 109, 110, 113, 114], "releas": 12, "repeat_sourc": [274, 277], "requir": 289, "resolv": 302, "restructur": 302, "run": [3, 4, 281, 284], "run_in_executor": 4, "run_pipeline_in_subprocess": [248, 261], "runner": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "runtim": 285, "sampl": 264, "sample_decode_video": [161, 225], "sampler": 302, "save_imag": [161, 226], "scalabl": 288, "set_ffmpeg_log_level": [72, 235, 242], "shared_ptr": [59, 61], "sharedmemori": 4, "shift": 292, "sink": 287, "size": 282, "sizediter": [262, 266], "sizediterablewithshuffl": [262, 267], "sourc": [13, 14, 15, 154, 155, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 287, 289], "sourceadaptor": 113, "sourceadaptorptr": [63, 116], "spdl": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 288, 293, 294, 305], "spdl_default_buffer_s": 34, "specifi": [201, 286], "speed": 9, "src": [35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56], "stage": [282, 286, 287, 302], "start": 283, "state": 279, "statist": 285, "statsqueu": [248, 254], "std": [59, 61, 62, 63, 84], "storag": [54, 98, 114], "straggler": 304, "stream": [176, 200, 278, 279], "streaming_load_video_nvdec": [161, 227], "streamingdemux": 27, "streamingdemuxerptr": 122, "string": 63, "string_view": 62, "struct": [78, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114], "structur": [260, 292], "studi": 8, "subdirectori": [35, 36], "subprocess": 286, "summari": [3, 293, 297], "switch": 293, "synchron": 4, "task": [3, 296, 297], "taskhook": [248, 255], "taskperfstat": [248, 256, 297], "taskstatshook": [248, 257], "templat": [16, 18, 19, 21, 23, 29, 30, 59, 61, 65, 66, 70, 108, 109, 111], "tensor": 6, "thread": [3, 4, 154, 201, 282, 286, 289, 293, 296], "throughput": 297, "time": [297, 298], "tl": [7, 9], "to_jax": [161, 228], "to_numba": [161, 229], "to_numpi": [161, 230], "to_torch": [161, 231], "trace": [235, 246], "trace_count": [70, 235, 243], "trace_ev": [235, 244], "trace_event_begin": 76, "trace_event_end": 71, "trace_gc": [235, 245], "tracer": 302, "tracingsess": 28, "transfer": 197, "transfer_buff": [161, 232], "transfer_buffer_cpu": [161, 233], "transfer_tensor": [161, 234], "trend": 293, "type": [17, 24, 55, 99, 103, 109, 113, 114], "typedef": [41, 43, 44, 46, 47, 48, 49, 50, 52, 53, 55, 78, 82, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "underli": 1, "understand": 293, "unnecessari": 284, "us": [4, 197, 200, 280, 305], "usag": 280, "util": [56, 100, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 262, 274, 275, 276, 277], "v": 296, "vector": 59, "video": [177, 185, 279, 280], "video_encode_config": [161, 247], "videocodec": [120, 161, 187], "videodecod": [161, 188], "videoencod": [125, 161, 190], "videoencodeconfig": [150, 161, 189], "videoencoderptr": 126, "videofram": [137, 161, 191], "videoframesptr": 135, "videopacket": [140, 161, 192], "videopacketsptr": 143, "weight": 264, "what": [12, 299, 305], "which": 12, "whole": 185, "why": [12, 294], "work": [12, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 299]}})