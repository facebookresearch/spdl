name: "Build Conda: CUDA"

on:
  workflow_dispatch:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "examples/**"
      - "README.md"
    branches:
      - main
  push:
    paths-ignore:
      - "docs/**"
      - "examples/**"
      - "README.md"
    branches:
      - main

jobs:
  conda-build-cuda:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python-version: [ "3.10", "3.11", "3.12" ]
        cu_version: [ "11.8.0", "12.1.0" ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install conda-build
        run: conda install conda-build

      - name: Build SPDL
        run: |
          mkdir ~/package
          conda build \
            -c nvidia/label/cuda-${{ matrix.cu_version }} \
            ./packaging/conda \
            --python=${{ matrix.python-version }} \
            --output-folder ~/package
        env:
          CU_VERSION: ${{ matrix.cu_version }}
          CONDA_CUDATOOLKIT_CONSTRAINT: "- nvidia/label/cuda-${{ matrix.cu_version }}::cuda-toolkit"
          SPDL_USE_CUDA: "1"
          SPDL_USE_NVCODEC: "1"
          SPDL_USE_NVJPEG: "1"
          SPDL_USE_NPPI: "1"
          SPDL_LINK_STATIC_NVJPEG: "0"
          SPDL_USE_TRACING: "1"
          SPDL_BUILD_STUB: "0"

      - uses: actions/upload-artifact@v4
        with:
          name: spdl.${{ matrix.os }}.${{ matrix.python-version }}.${{ matrix.cu_version }}
          path: ~/package
          if-no-files-found: error
          retention-days: 1
          overwrite: true
