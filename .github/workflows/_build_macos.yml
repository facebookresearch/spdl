name: " - Wheel (macOS)"

on:
  workflow_call:
    inputs:
      python-version:
        required: true
        type: string
      free-threaded:
        description: 'Whether FT Python or not. Valid value is "ft" or not.'
        default: ''
        type: string
      run-test:
        required: false
        default: 'false'
        type: string
      os:
        default: "macos-latest"
        type: string
      test-concurrency:
        required: false
        default: '3'
        type: string

env:
  ARTIFACT: wheel-macos-py${{ inputs.python-version }}${{ inputs.free-threaded }}
        
jobs:
  build:
    runs-on: "${{ inputs.os }}"
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Build
        env:
          SPDL_USE_TRACING: 1
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          set -ex

          py_ver="${{ inputs.python-version }}"
          if [[ "${{ inputs.free-threaded }}" == 'ft' ]]; then
            py_ver="${py_ver}t"
          fi

          uv python pin "${py_ver}"
          uv python list --only-installed
          uv venv
          uv build --no-python-downloads --all-packages --wheel
          mv ./dist ~/package

      - uses: actions/upload-artifact@v4
        name: Upload build artifact
        with:
          name: "${{ env.ARTIFACT }}"
          path: ~/package
          if-no-files-found: error
          retention-days: 7
          overwrite: true

      - name: Check package
        run: |
          pip install -r ./packaging/requirements.txt
          twine check --strict ~/package/*.whl

  unit-test:
    if: "${{ inputs.run-test == 'true' }}"
    name: "test (ffmpeg ${{ matrix.ffmpeg-version }})"
    needs: ["build"]
    strategy:
      fail-fast: false
      matrix:
        ffmpeg-version: ["4.4.2", "5.1", "6.1", "7.1"]
    runs-on:  "${{ inputs.os }}"
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/download-artifact@v4
        with:
          name: "${{ env.ARTIFACT }}"
          path: ~/package

      - uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ inputs.python-version }}
          conda-remove-defaults: "true"

      - name: Setup
        run: |
          set -ex

          if [[ "${{ inputs.free-threaded }}" == 'ft' ]]; then
            conda install -q -c conda-forge python-freethreading
          fi

          # Install SPDL
          pip install $(find "${HOME}/package" -name '*.whl' -depth -maxdepth 1)

          # Install PyTorch and others
          if [[ "${{ inputs.free-threaded }}" == 'ft' ]]; then
            pip install torch numpy pytest parameterized
          else
            pip install torch numpy numba pytest parameterized
          fi

          # Install FFmpeg
          conda install -q -c conda-forge "ffmpeg==${{ matrix.ffmpeg-version }}"

      - name: Unit test
        run: |
          set -ex

          pytest -v -n ${{ inputs.test-concurrency }} \
              tests/spdl_unittest/io/ \
              tests/spdl_unittest/dataloader/
