Search.setIndex({"alltitles": {"API Reference": [[0, null], [162, "api-reference"], [167, "api-reference"], [245, "api-reference"], [258, "api-reference"], [272, "api-reference"], [284, "api-reference"], [300, "api-reference"], [306, "api-reference"], [310, "api-reference"], [312, "api-reference"]], "API References": [[326, null]], "API References (C++)": [[11, null], [11, null]], "Adjust the concurrency": [[340, "adjust-the-concurrency"]], "Aggregate": [[284, "aggregate"]], "AggregateConfig": [[284, "aggregateconfig"]], "Analyzing the Performance": [[335, null]], "ArrayInterface": [[167, "arrayinterface"]], "Async IO": [[334, "async-io"]], "AsyncQueue": [[258, "asyncqueue"]], "AudioCodec": [[167, "audiocodec"]], "AudioDecoder": [[167, "audiodecoder"]], "AudioEncodeConfig": [[167, "audioencodeconfig"]], "AudioEncoder": [[167, "audioencoder"]], "AudioFrames": [[167, "audioframes"]], "AudioPackets": [[167, "audiopackets"]], "Average Download Time": [[336, "average-download-time"]], "Average Time": [[335, "average-time"]], "Avoid creating intermediate tensors": [[6, "avoid-creating-intermediate-tensors"]], "BSF": [[167, "bsf"]], "Base Type": [[21, "base-type"], [28, "base-type"], [107, "base-type"]], "Basic Usage": [[318, "basic-usage"]], "Batching images": [[331, "batching-images"]], "Benchmark tarfile": [[14, null]], "Benchmark wav": [[15, null]], "Best Practices": [[6, null]], "Building Inference Pipeline": [[9, null]], "Building a Pipeline": [[322, "building-a-pipeline"]], "Building and Running Pipeline": [[322, null]], "Building with Free-Threaded Python": [[327, "building-with-free-threaded-python"]], "CPUBuffer": [[167, "cpubuffer"]], "CPUStorage": [[167, "cpustorage"]], "CUDAArrayInterface": [[167, "cudaarrayinterface"]], "CUDABuffer": [[167, "cudabuffer"]], "CUDAConfig": [[167, "cudaconfig"]], "CacheDataLoader": [[162, "cachedataloader"]], "Calling iter on Pipeline": [[322, null]], "Case Studies": [[8, null]], "Chaining task": [[3, "chaining-task"]], "Challenge: Keeping GPU Busy": [[9, "challenge-keeping-gpu-busy"]], "Changing the data format": [[7, "changing-the-data-format"]], "Citation": [[326, "citation"]], "Class CPUStorage": [[21, null]], "Class Demuxer": [[24, null]], "Class Documentation": [[20, "class-documentation"], [21, "class-documentation"], [22, "class-documentation"], [23, "class-documentation"], [24, "class-documentation"], [25, "class-documentation"], [26, "class-documentation"], [27, "class-documentation"], [28, "class-documentation"], [29, "class-documentation"], [30, "class-documentation"], [31, "class-documentation"], [32, "class-documentation"], [33, "class-documentation"], [34, "class-documentation"]], "Class FilterGraph": [[26, null]], "Class Hierarchy": [[83, null], [105, "class-hierarchy"]], "Class InternalError": [[28, null]], "Class Muxer": [[29, null]], "Class PacketSeries": [[30, null]], "Class StreamingDemuxer": [[31, null]], "Class TracingSession": [[32, null]], "Classes": [[14, "classes"], [15, "classes"], [16, "classes"], [18, "classes"], [19, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [50, "classes"], [51, "classes"], [52, "classes"], [53, "classes"], [54, "classes"], [55, "classes"], [56, "classes"], [57, "classes"], [58, "classes"], [59, "classes"], [60, "classes"], [86, "classes"], [87, "classes"], [159, "classes"], [318, "classes"]], "Classes and Structs": [[82, "classes-and-structs"], [105, "classes-and-structs"]], "Collecting Runtime Statistics": [[323, null]], "Composition of Pipeline": [[341, null]], "Concurrency": [[320, null]], "Concurrency Structure": [[330, "concurrency-structure"]], "Concurrent execution and Future": [[3, "concurrent-execution-and-future"], [319, "concurrent-execution-and-future"]], "Cons": [[332, "cons"]], "Contents": [[326, null]], "Core Concept": [[343, "core-concept"]], "Data Format and Performance": [[7, null]], "Data Readiness": [[335, "data-readiness"], [336, "data-readiness"]], "Data formats": [[16, null]], "DataLoader": [[162, "dataloader"]], "Deciding what to work on": [[337, "deciding-what-to-work-on"]], "DecodeConfig": [[167, "decodeconfig"]], "Decoder": [[167, "decoder"]], "Decoding images in threads": [[331, "decoding-images-in-threads"]], "Define Documentation": [[35, "define-documentation"], [36, "define-documentation"], [37, "define-documentation"], [38, "define-documentation"]], "Define SPDL_DEFAULT_BUFFER_SIZE": [[38, null]], "Define _IS_AUDIO": [[36, null]], "Define _IS_IMAGE": [[37, null]], "Define _IS_VIDEO": [[35, null]], "Defines": [[54, "defines"], [59, "defines"], [82, "defines"], [105, "defines"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/adaptor.h)": [[45, "definition-home-runner-work-spdl-spdl-src-libspdl-core-adaptor-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/bsf.h)": [[46, "definition-home-runner-work-spdl-spdl-src-libspdl-core-bsf-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/buffer.h)": [[47, "definition-home-runner-work-spdl-spdl-src-libspdl-core-buffer-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/codec.h)": [[48, "definition-home-runner-work-spdl-spdl-src-libspdl-core-codec-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/conversion.h)": [[49, "definition-home-runner-work-spdl-spdl-src-libspdl-core-conversion-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/decoder.h)": [[50, "definition-home-runner-work-spdl-spdl-src-libspdl-core-decoder-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/demuxing.h)": [[51, "definition-home-runner-work-spdl-spdl-src-libspdl-core-demuxing-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/encoder.h)": [[52, "definition-home-runner-work-spdl-spdl-src-libspdl-core-encoder-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/filter_graph.h)": [[53, "definition-home-runner-work-spdl-spdl-src-libspdl-core-filter-graph-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/frames.h)": [[54, "definition-home-runner-work-spdl-spdl-src-libspdl-core-frames-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/generator.h)": [[55, "definition-home-runner-work-spdl-spdl-src-libspdl-core-generator-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/muxer.h)": [[56, "definition-home-runner-work-spdl-spdl-src-libspdl-core-muxer-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/packets.h)": [[57, "definition-home-runner-work-spdl-spdl-src-libspdl-core-packets-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/storage.h)": [[58, "definition-home-runner-work-spdl-spdl-src-libspdl-core-storage-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/types.h)": [[59, "definition-home-runner-work-spdl-spdl-src-libspdl-core-types-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/utils.h)": [[60, "definition-home-runner-work-spdl-spdl-src-libspdl-core-utils-h"]], "DemuxConfig": [[167, "demuxconfig"]], "Demuxer": [[167, "demuxer"]], "Dependencies": [[327, "dependencies"]], "Derived Type": [[117, "derived-type"], [118, "derived-type"]], "Development Notes": [[326, null], [333, null]], "Difficulty with composing futures": [[319, "difficulty-with-composing-futures"]], "Directories": [[157, "directories"]], "Directory core": [[41, null]], "Directory libspdl": [[40, null]], "Directory src": [[39, null]], "Disaggregate": [[284, "disaggregate"]], "DisaggregateConfig": [[284, "disaggregateconfig"]], "DistributedDeterministicSampler": [[300, "distributeddeterministicsampler"]], "DistributedRandomSampler": [[300, "distributedrandomsampler"]], "Enum CodecID": [[42, null]], "Enum Documentation": [[42, "enum-documentation"], [43, "enum-documentation"], [44, "enum-documentation"]], "Enum ElemClass": [[44, null]], "Enum MediaType": [[43, null]], "Enums": [[59, "enums"], [82, "enums"], [86, "enums"], [105, "enums"]], "Estimating the maximum gain with caching": [[337, "estimating-the-maximum-gain-with-caching"]], "Example": [[175, null], [182, null], [191, null], [194, null], [218, null], [220, null], [253, null], [254, null], [256, null], [289, null], [302, null]], "Example - Audio filtering (passthrough)": [[185, null]], "Example - Device option": [[191, null]], "Example - Distributed sampling": [[302, null]], "Example - Multimedia filter": [[185, null]], "Example - Multiple Inputs": [[185, null]], "Example - Multiple outputs": [[185, null]], "Example - One-off demuxing": [[201, null]], "Example - Parsing a TAR file from a file-like object.": [[223, null]], "Example - Parsing an in-memory TAR file.": [[223, null]], "Example - Protocol option": [[191, null]], "Example - Streaming decoding audio": [[184, null]], "Example - Video filtering (passthrough)": [[185, null]], "Example - Weighted sampling": [[302, null]], "Example - decoding the whole video": [[193, null]], "Example - incremental decoding": [[193, null]], "Example:": [[251, null]], "Example: Bulk loading images": [[260, null]], "Example: Change the number of threads internal to FFmpeg decoder": [[209, null]], "Example: Loading headeless audio file (raw PCM)": [[214, null]], "Example: Specifying the decoder for H264": [[209, null]], "Example: Use page-locked memory for faster CUDA transfer.": [[205, null]], "Examples": [[12, null]], "File Hierarchy": [[84, null], [105, "file-hierarchy"]], "File adaptor.h": [[45, null]], "File bsf.h": [[46, null]], "File buffer.h": [[47, null]], "File codec.h": [[48, null]], "File conversion.h": [[49, null]], "File decoder.h": [[50, null]], "File demuxing.h": [[51, null]], "File encoder.h": [[52, null]], "File filter_graph.h": [[53, null]], "File frames.h": [[54, null]], "File generator.h": [[55, null]], "File muxer.h": [[56, null]], "File packets.h": [[57, null]], "File storage.h": [[58, null]], "File types.h": [[59, null]], "File utils.h": [[60, null]], "Files": [[41, "files"], [157, "files"]], "FilterGraph": [[167, "filtergraph"]], "Frames": [[167, "frames"]], "Frequently Asked Questions": [[13, null]], "From PyPI": [[327, "from-pypi"]], "From source": [[327, "from-source"]], "Full API": [[82, null], [105, "full-api"], [157, null]], "Function Documentation": [[61, "function-documentation"], [62, "function-documentation"], [63, "function-documentation"], [64, "function-documentation"], [65, "function-documentation"], [66, "function-documentation"], [67, "function-documentation"], [68, "function-documentation"], [69, "function-documentation"], [70, "function-documentation"], [71, "function-documentation"], [72, "function-documentation"], [73, "function-documentation"], [74, "function-documentation"], [75, "function-documentation"], [76, "function-documentation"], [77, "function-documentation"], [78, "function-documentation"], [79, "function-documentation"], [80, "function-documentation"], [81, "function-documentation"]], "Function spdl::core::cpu_buffer": [[61, null]], "Function spdl::core::create_reference_audio_frame": [[62, null]], "Function spdl::core::create_reference_video_frame": [[64, null]], "Function spdl::core::extract_packets_at_indices": [[71, null]], "Function spdl::core::get_ffmpeg_filters": [[72, null]], "Function spdl::core::get_ffmpeg_log_level": [[79, null]], "Function spdl::core::get_ffmpeg_versions": [[73, null]], "Function spdl::core::init_glog": [[81, null]], "Function spdl::core::init_tracing": [[78, null]], "Function spdl::core::make_demuxer(const std::string&, const SourceAdaptorPtr&, const std::optional<DemuxConfig>&)": [[67, null]], "Function spdl::core::make_demuxer(const std::string_view, const std::optional<DemuxConfig>&)": [[66, null]], "Function spdl::core::make_filter_graph": [[68, null]], "Function spdl::core::register_avdevices": [[77, null]], "Function spdl::core::set_ffmpeg_log_level": [[76, null]], "Function spdl::core::trace_event_begin": [[80, null]], "Function spdl::core::trace_event_end": [[75, null]], "Functions": [[14, "functions"], [15, "functions"], [16, "functions"], [17, "functions"], [18, "functions"], [19, "functions"], [47, "functions"], [49, "functions"], [51, "functions"], [53, "functions"], [54, "functions"], [57, "functions"], [60, "functions"], [82, "functions"], [86, "functions"], [105, "functions"], [158, "functions"], [159, "functions"], [160, "functions"], [161, "functions"], [316, "functions"], [317, "functions"], [318, "functions"]], "Getting Started": [[321, null]], "Headspace Analysis": [[337, null]], "Helper functions and data structures": [[297, "helper-functions-and-data-structures"]], "How to use SPDL?": [[343, "how-to-use-spdl"]], "How to work around GIL?": [[13, "how-to-work-around-gil"]], "Hydra integration": [[17, null]], "IO Module": [[328, null]], "Image dataloading": [[18, null]], "ImageCodec": [[167, "imagecodec"]], "ImageDecoder": [[167, "imagedecoder"]], "ImageFrames": [[167, "imageframes"]], "ImageNet": [[306, "imagenet"]], "ImagePackets": [[167, "imagepackets"]], "Imagenet classification": [[19, null]], "Implementation Detail": [[297, "implementation-detail"]], "Implementation detail of Pipeline": [[334, null]], "Implementing Orchestration Mechanism": [[3, null]], "Included By": [[45, "included-by"], [47, "included-by"], [48, "included-by"], [52, "included-by"], [54, "included-by"], [55, "included-by"], [57, "included-by"], [58, "included-by"], [59, "included-by"]], "Includes": [[45, "includes"], [46, "includes"], [47, "includes"], [48, "includes"], [49, "includes"], [50, "includes"], [51, "includes"], [52, "includes"], [53, "includes"], [54, "includes"], [55, "includes"], [56, "includes"], [57, "includes"], [58, "includes"], [59, "includes"], [60, "includes"]], "Inconsistent Performance": [[10, "inconsistent-performance"]], "Inheritance Relationships": [[21, "inheritance-relationships"], [28, "inheritance-relationships"], [107, "inheritance-relationships"], [117, "inheritance-relationships"], [118, "inheritance-relationships"]], "Installation": [[327, null]], "Introduction to Async": [[319, null]], "Introduction to Async I/O": [[2, null]], "IterableWithShuffle": [[300, "iterablewithshuffle"]], "Keeping unnecessary references to Pipeline": [[322, null]], "Libspdl API": [[105, null]], "Loading data from memory": [[7, "loading-data-from-memory"]], "LocalDirectory": [[310, "localdirectory"]], "Make Dataset class composable": [[6, "make-dataset-class-composable"]], "Media I/O": [[343, "media-i-o"]], "Merge": [[284, "merge"]], "MergeConfig": [[284, "mergeconfig"]], "MergeIterator": [[312, "mergeiterator"]], "Metrics across Ranks": [[336, null]], "Migrating from PyTorch DataLoader": [[331, null]], "Migration Guide": [[329, null]], "Multi thread preprocessing": [[158, null]], "Multi-processing (combined)": [[324, "multi-processing-combined"]], "Multi-processing (stage)": [[324, "multi-processing-stage"]], "Multi-threading (custom)": [[324, "multi-threading-custom"]], "Multi-threading (default)": [[324, "multi-threading-default"]], "Multi-threading in subprocess": [[324, "multi-threading-in-subprocess"]], "Muxer": [[167, "muxer"]], "Namespace spdl": [[85, null]], "Namespace spdl::core": [[86, null]], "Namespace spdl::core::detail": [[87, null]], "Namespace std": [[88, null]], "Namespaces": [[45, "namespaces"], [46, "namespaces"], [47, "namespaces"], [48, "namespaces"], [49, "namespaces"], [50, "namespaces"], [51, "namespaces"], [52, "namespaces"], [53, "namespaces"], [54, "namespaces"], [55, "namespaces"], [56, "namespaces"], [57, "namespaces"], [58, "namespaces"], [59, "namespaces"], [60, "namespaces"], [82, "namespaces"], [85, "namespaces"], [86, "namespaces"], [105, "namespaces"]], "Nested Relationships": [[113, "nested-relationships"], [114, "nested-relationships"]], "Nested Types": [[113, "nested-types"]], "Noisy Neighbour": [[339, null]], "Noisy Neighbour and multiprocessing": [[10, "noisy-neighbour-and-multiprocessing"]], "Note on clone method": [[194, null]], "Note on component states": [[317, null]], "Note\u2020": [[325, null]], "NpzFile": [[167, "npzfile"]], "NvDecDecoder": [[167, "nvdecdecoder"]], "Optimization Guide": [[338, null]], "Optional Dependencies": [[327, "optional-dependencies"]], "Overview": [[162, "module-spdl.dataloader"], [167, "module-spdl.io"], [245, "module-spdl.io.utils"], [258, "module-spdl.pipeline"], [272, "module-spdl.pipeline.config"], [284, "module-spdl.pipeline.defs"], [300, "module-spdl.source"], [306, "module-spdl.source.imagenet"], [310, "module-spdl.source.local_directory"], [312, "module-spdl.source.utils"], [343, null]], "Packets": [[167, "packets"]], "Paradigm Shift": [[330, null]], "Parallelism and Performance": [[10, null]], "Performance & Efficiency": [[343, "performance-efficiency"]], "Performance analysis": [[159, null]], "Performing multiple tasks concurrently": [[3, "performing-multiple-tasks-concurrently"]], "Pipe": [[284, "pipe"]], "PipeConfig": [[284, "pipeconfig"]], "Pipeline": [[258, "pipeline"]], "Pipeline Parallelism": [[324, null]], "Pipeline Speed": [[10, "pipeline-speed"]], "Pipeline Stages": [[325, null]], "Pipeline definitions": [[160, null]], "Pipeline profiling": [[161, null]], "PipelineBuilder": [[258, "pipelinebuilder"]], "PipelineConfig": [[284, "pipelineconfig"]], "PipelineFailure": [[258, "pipelinefailure"]], "Pipelining Attempt": [[319, "pipelining-attempt"]], "Practical Example": [[7, "practical-example"]], "Processing": [[325, "processing"]], "ProfileHook": [[258, "profilehook"]], "ProfileResult": [[258, "profileresult"]], "Profiling the function": [[340, "profiling-the-function"]], "Program Listing for File adaptor.h": [[89, null]], "Program Listing for File bsf.h": [[90, null]], "Program Listing for File buffer.h": [[91, null]], "Program Listing for File codec.h": [[92, null]], "Program Listing for File conversion.h": [[93, null]], "Program Listing for File decoder.h": [[94, null]], "Program Listing for File demuxing.h": [[95, null]], "Program Listing for File encoder.h": [[96, null]], "Program Listing for File filter_graph.h": [[97, null]], "Program Listing for File frames.h": [[98, null]], "Program Listing for File generator.h": [[99, null]], "Program Listing for File muxer.h": [[100, null]], "Program Listing for File packets.h": [[101, null]], "Program Listing for File storage.h": [[102, null]], "Program Listing for File types.h": [[103, null]], "Program Listing for File utils.h": [[104, null]], "Pros": [[332, "pros"]], "Publications": [[326, "publications"]], "PyTorchDataLoader": [[162, "pytorchdataloader"]], "Queue Get/Put Time": [[335, "queue-get-put-time"]], "Queue vs Async Queue as Buffer": [[334, "queue-vs-async-queue-as-buffer"]], "QueuePerfStats": [[258, "queueperfstats"], [335, "queueperfstats"]], "Requirements": [[327, "requirements"]], "Resolving the Bottleneck": [[340, null]], "Restructure the stages": [[340, "restructure-the-stages"]], "Running GPU Inference in Background Thread": [[9, "running-gpu-inference-in-background-thread"]], "Running Synchronous Functions": [[4, null]], "Running a Pipeline": [[322, "running-a-pipeline"]], "Running multiple pipelines": [[3, "running-multiple-pipelines"], [319, "running-multiple-pipelines"]], "SPDL (Scalable and Performant Data Loading)": [[326, null]], "Sampler": [[340, "sampler"]], "Sink": [[325, "sink"]], "SinkConfig": [[284, "sinkconfig"]], "SizedIterable": [[300, "sizediterable"]], "SizedIterableWithShuffle": [[300, "sizediterablewithshuffle"]], "Solution: Software Pipelining with SPDL": [[9, "solution-software-pipelining-with-spdl"]], "Source": [[14, "source"], [15, "source"], [16, "source"], [17, "source"], [18, "source"], [19, "source"], [158, "source"], [159, "source"], [160, "source"], [161, "source"], [316, "source"], [317, "source"], [318, "source"], [325, "source"]], "SourceConfig": [[284, "sourceconfig"]], "Specifying an executor": [[324, "specifying-an-executor"]], "Stage Concurrency": [[320, "stage-concurrency"]], "StatsQueue": [[258, "statsqueue"]], "Streaming nvdec decoding": [[316, null]], "Streaming video processing": [[317, null]], "Struct AVRational": [[106, null]], "Struct BytesAdaptor": [[107, null]], "Struct CPUBuffer": [[108, null]], "Struct DataInterface": [[109, null]], "Struct DecodeConfig": [[110, null]], "Struct DemuxConfig": [[111, null]], "Struct Documentation": [[106, "struct-documentation"], [107, "struct-documentation"], [108, "struct-documentation"], [109, "struct-documentation"], [110, "struct-documentation"], [111, "struct-documentation"], [112, "struct-documentation"], [113, "struct-documentation"], [114, "struct-documentation"], [115, "struct-documentation"], [116, "struct-documentation"], [117, "struct-documentation"], [118, "struct-documentation"]], "Struct Generator::promise_type": [[114, null]], "Struct RawPacketData": [[116, null]], "Struct SourceAdaptor": [[117, null]], "Struct Storage": [[118, null]], "Subdirectories": [[39, "subdirectories"], [40, "subdirectories"]], "Summary": [[3, "summary"], [331, "summary"], [335, "summary"]], "Switching to SPDL I/O": [[331, "switching-to-spdl-i-o"]], "TaskHook": [[258, "taskhook"]], "TaskPerfStats": [[258, "taskperfstats"], [335, "taskperfstats"]], "TaskStatsHook": [[258, "taskstatshook"]], "Template Class BSF": [[20, null]], "Template Class Codec": [[22, null]], "Template Class Decoder": [[23, null]], "Template Class DecoderImpl": [[33, null]], "Template Class Encoder": [[25, null]], "Template Class EncoderImpl": [[34, null]], "Template Class Frames": [[27, null]], "Template Function spdl::core::clone": [[69, null]], "Template Function spdl::core::convert_frames(const Frames<media> *, std::shared_ptr<CPUStorage>)": [[65, null]], "Template Function spdl::core::convert_frames(const std::vector<const Frames<media> *>&, std::shared_ptr<CPUStorage>)": [[63, null]], "Template Function spdl::core::get_timestamps": [[70, null]], "Template Function spdl::core::trace_counter": [[74, null]], "Template Struct EncodeConfigBase": [[112, null]], "Template Struct Generator": [[113, null]], "Template Struct Packets": [[115, null]], "The Event Loop": [[1, null]], "The Performance of numpy.load on NPZ data": [[7, "the-performance-of-numpy-load-on-npz-data"]], "The Straggler": [[342, null]], "The async and await keywords": [[5, null], [319, "the-async-and-await-keywords"]], "The difference of multi-threading and multi-processing": [[4, "the-difference-of-multi-threading-and-multi-processing"]], "The event loop": [[319, "the-event-loop"]], "The number of tasks executed": [[335, "the-number-of-tasks-executed"]], "Thread Pool Size": [[320, "thread-pool-size"]], "Thread, loop and task": [[334, "thread-loop-and-task"]], "Throughput": [[335, "throughput"]], "Tracer": [[340, "tracer"]], "Typedef AVRational": [[153, null]], "Typedef Documentation": [[119, "typedef-documentation"], [120, "typedef-documentation"], [121, "typedef-documentation"], [122, "typedef-documentation"], [123, "typedef-documentation"], [124, "typedef-documentation"], [125, "typedef-documentation"], [126, "typedef-documentation"], [127, "typedef-documentation"], [128, "typedef-documentation"], [129, "typedef-documentation"], [130, "typedef-documentation"], [131, "typedef-documentation"], [132, "typedef-documentation"], [133, "typedef-documentation"], [134, "typedef-documentation"], [135, "typedef-documentation"], [136, "typedef-documentation"], [137, "typedef-documentation"], [138, "typedef-documentation"], [139, "typedef-documentation"], [140, "typedef-documentation"], [141, "typedef-documentation"], [142, "typedef-documentation"], [143, "typedef-documentation"], [144, "typedef-documentation"], [145, "typedef-documentation"], [146, "typedef-documentation"], [147, "typedef-documentation"], [148, "typedef-documentation"], [149, "typedef-documentation"], [150, "typedef-documentation"], [151, "typedef-documentation"], [152, "typedef-documentation"], [153, "typedef-documentation"], [154, "typedef-documentation"], [155, "typedef-documentation"], [156, "typedef-documentation"]], "Typedef spdl::core::AnyFrames": [[138, null]], "Typedef spdl::core::AnyPackets": [[150, null]], "Typedef spdl::core::AudioCodec": [[123, null]], "Typedef spdl::core::AudioEncodeConfig": [[152, null]], "Typedef spdl::core::AudioEncoder": [[131, null]], "Typedef spdl::core::AudioEncoderPtr": [[128, null]], "Typedef spdl::core::AudioFrames": [[136, null]], "Typedef spdl::core::AudioFramesPtr": [[137, null]], "Typedef spdl::core::AudioPackets": [[146, null]], "Typedef spdl::core::AudioPacketsPtr": [[149, null]], "Typedef spdl::core::CPUBufferPtr": [[121, null]], "Typedef spdl::core::DataInterfacePtr": [[119, null]], "Typedef spdl::core::DecoderPtr": [[125, null]], "Typedef spdl::core::DemuxerPtr": [[127, null]], "Typedef spdl::core::EncoderPtr": [[132, null]], "Typedef spdl::core::FilterGraphPtr": [[133, null]], "Typedef spdl::core::FramesPtr": [[140, null]], "Typedef spdl::core::ImageCodec": [[122, null]], "Typedef spdl::core::ImageFrames": [[135, null]], "Typedef spdl::core::ImageFramesPtr": [[134, null]], "Typedef spdl::core::ImagePackets": [[151, null]], "Typedef spdl::core::ImagePacketsPtr": [[145, null]], "Typedef spdl::core::MuxerPtr": [[142, null]], "Typedef spdl::core::OptionDict": [[156, null]], "Typedef spdl::core::PacketSeriesPtr": [[143, null]], "Typedef spdl::core::PacketsPtr": [[148, null]], "Typedef spdl::core::Rational": [[155, null]], "Typedef spdl::core::SourceAdaptorPtr": [[120, null]], "Typedef spdl::core::StreamingDemuxerPtr": [[126, null]], "Typedef spdl::core::VideoCodec": [[124, null]], "Typedef spdl::core::VideoEncodeConfig": [[154, null]], "Typedef spdl::core::VideoEncoder": [[129, null]], "Typedef spdl::core::VideoEncoderPtr": [[130, null]], "Typedef spdl::core::VideoFrames": [[141, null]], "Typedef spdl::core::VideoFramesPtr": [[139, null]], "Typedef spdl::core::VideoPackets": [[144, null]], "Typedef spdl::core::VideoPacketsPtr": [[147, null]], "Typedefs": [[45, "typedefs"], [47, "typedefs"], [48, "typedefs"], [50, "typedefs"], [51, "typedefs"], [52, "typedefs"], [53, "typedefs"], [54, "typedefs"], [56, "typedefs"], [57, "typedefs"], [59, "typedefs"], [82, "typedefs"], [86, "typedefs"], [105, "typedefs"]], "Understanding the Performance Trend": [[331, "understanding-the-performance-trend"]], "Using GPU video decoder": [[318, "using-gpu-video-decoder"]], "Using PyTorch default CUDA stream": [[208, null]], "Using SharedMemory for faster inter-process-communication": [[4, "using-sharedmemory-for-faster-inter-process-communication"]], "Using run_in_executor to run synchronous function in Async I/O": [[4, "using-run-in-executor-to-run-synchronous-function-in-async-i-o"]], "Video dataloading": [[318, null]], "VideoCodec": [[167, "videocodec"]], "VideoDecoder": [[167, "videodecoder"]], "VideoEncodeConfig": [[167, "videoencodeconfig"]], "VideoEncoder": [[167, "videoencoder"]], "VideoFrames": [[167, "videoframes"]], "VideoPackets": [[167, "videopackets"]], "What SPDL is NOT": [[343, "what-spdl-is-not"]], "What if a function does not release GIL?": [[13, "what-if-a-function-does-not-release-gil"]], "What is SPDL?": [[343, "what-is-spdl"]], "Which functions hold the GIL?": [[13, "which-functions-hold-the-gil"]], "Why Async I/O?": [[13, "why-async-i-o"]], "Why migrate to SPDL?": [[332, null]], "apply_bsf": [[167, "apply-bsf"]], "audio_encode_config": [[167, "audio-encode-config"]], "build_pipeline": [[258, "build-pipeline"]], "built_with_cuda": [[245, "built-with-cuda"]], "built_with_nvcodec": [[245, "built-with-nvcodec"]], "built_with_nvjpeg": [[245, "built-with-nvjpeg"]], "cache_iterator": [[258, "cache-iterator"]], "convert_array": [[167, "convert-array"]], "convert_frames": [[167, "convert-frames"]], "cpu_storage": [[167, "cpu-storage"]], "create_reference_audio_frame": [[167, "create-reference-audio-frame"]], "create_reference_video_frame": [[167, "create-reference-video-frame"]], "create_task": [[258, "create-task"]], "cuda_config": [[167, "cuda-config"]], "decode_config": [[167, "decode-config"]], "decode_image_nvjpeg": [[167, "decode-image-nvjpeg"]], "decode_packets": [[167, "decode-packets"]], "decode_packets_nvdec": [[167, "decode-packets-nvdec"]], "demux_audio": [[167, "demux-audio"]], "demux_config": [[167, "demux-config"]], "demux_image": [[167, "demux-image"]], "demux_video": [[167, "demux-video"]], "diagnostic_mode_num_sources": [[272, "diagnostic-mode-num-sources"]], "embed_shuffle": [[312, "embed-shuffle"]], "encode_image": [[167, "encode-image"]], "get_abuffer_desc": [[167, "get-abuffer-desc"]], "get_audio_filter_desc": [[167, "get-audio-filter-desc"]], "get_buffer_desc": [[167, "get-buffer-desc"]], "get_default_hook_class": [[272, "get-default-hook-class"]], "get_default_profile_callback": [[272, "get-default-profile-callback"]], "get_default_profile_hook": [[272, "get-default-profile-hook"]], "get_default_queue_class": [[272, "get-default-queue-class"]], "get_ffmpeg_filters": [[245, "get-ffmpeg-filters"]], "get_ffmpeg_log_level": [[245, "get-ffmpeg-log-level"]], "get_ffmpeg_versions": [[245, "get-ffmpeg-versions"]], "get_filter_desc": [[167, "get-filter-desc"]], "get_mappings": [[306, "get-mappings"]], "get_pytorch_dataloader": [[162, "get-pytorch-dataloader"]], "get_video_filter_desc": [[167, "get-video-filter-desc"]], "imagenet": [[300, "imagenet"]], "is_diagnostic_mode_enabled": [[272, "is-diagnostic-mode-enabled"]], "is_eof": [[258, "is-eof"]], "iter_tarfile": [[167, "iter-tarfile"]], "iterate_in_subprocess": [[258, "iterate-in-subprocess"]], "load_audio": [[167, "load-audio"]], "load_image": [[167, "load-image"]], "load_image_batch": [[167, "load-image-batch"]], "load_image_batch_nvjpeg": [[167, "load-image-batch-nvjpeg"]], "load_npy": [[167, "load-npy"]], "load_npz": [[167, "load-npz"]], "load_video": [[167, "load-video"]], "load_wav": [[167, "load-wav"]], "local_directory": [[300, "local-directory"]], "nv12_to_bgr": [[167, "nv12-to-bgr"]], "nv12_to_rgb": [[167, "nv12-to-rgb"]], "nvdec_decoder": [[167, "nvdec-decoder"]], "parse_wnid": [[306, "parse-wnid"]], "profile_pipeline": [[258, "profile-pipeline"]], "repeat_source": [[312, "repeat-source"]], "run_pipeline_in_subprocess": [[258, "run-pipeline-in-subprocess"]], "sample_decode_video": [[167, "sample-decode-video"]], "save_image": [[167, "save-image"]], "set_default_hook_class": [[272, "set-default-hook-class"]], "set_default_profile_callback": [[272, "set-default-profile-callback"]], "set_default_profile_hook": [[272, "set-default-profile-hook"]], "set_default_queue_class": [[272, "set-default-queue-class"]], "set_ffmpeg_log_level": [[245, "set-ffmpeg-log-level"]], "spdl.dataloader": [[162, null]], "spdl.dataloader.CacheDataLoader": [[163, null]], "spdl.dataloader.DataLoader": [[164, null]], "spdl.dataloader.PyTorchDataLoader": [[165, null]], "spdl.dataloader.get_pytorch_dataloader": [[166, null]], "spdl.io": [[167, null]], "spdl.io.ArrayInterface": [[168, null]], "spdl.io.AudioCodec": [[169, null]], "spdl.io.AudioDecoder": [[170, null]], "spdl.io.AudioEncodeConfig": [[171, null]], "spdl.io.AudioEncoder": [[172, null]], "spdl.io.AudioFrames": [[173, null]], "spdl.io.AudioPackets": [[174, null]], "spdl.io.BSF": [[175, null]], "spdl.io.CPUBuffer": [[176, null]], "spdl.io.CPUStorage": [[177, null]], "spdl.io.CUDAArrayInterface": [[178, null]], "spdl.io.CUDABuffer": [[179, null]], "spdl.io.CUDAConfig": [[180, null]], "spdl.io.DecodeConfig": [[181, null]], "spdl.io.Decoder": [[182, null]], "spdl.io.DemuxConfig": [[183, null]], "spdl.io.Demuxer": [[184, null]], "spdl.io.FilterGraph": [[185, null]], "spdl.io.Frames": [[186, null]], "spdl.io.ImageCodec": [[187, null]], "spdl.io.ImageDecoder": [[188, null]], "spdl.io.ImageFrames": [[189, null]], "spdl.io.ImagePackets": [[190, null]], "spdl.io.Muxer": [[191, null]], "spdl.io.NpzFile": [[192, null]], "spdl.io.NvDecDecoder": [[193, null]], "spdl.io.Packets": [[194, null]], "spdl.io.VideoCodec": [[195, null]], "spdl.io.VideoDecoder": [[196, null]], "spdl.io.VideoEncodeConfig": [[197, null]], "spdl.io.VideoEncoder": [[198, null]], "spdl.io.VideoFrames": [[199, null]], "spdl.io.VideoPackets": [[200, null]], "spdl.io.apply_bsf": [[201, null]], "spdl.io.audio_encode_config": [[202, null]], "spdl.io.convert_array": [[203, null]], "spdl.io.convert_frames": [[204, null]], "spdl.io.cpu_storage": [[205, null]], "spdl.io.create_reference_audio_frame": [[206, null]], "spdl.io.create_reference_video_frame": [[207, null]], "spdl.io.cuda_config": [[208, null]], "spdl.io.decode_config": [[209, null]], "spdl.io.decode_image_nvjpeg": [[210, null]], "spdl.io.decode_packets": [[211, null]], "spdl.io.decode_packets_nvdec": [[212, null]], "spdl.io.demux_audio": [[213, null]], "spdl.io.demux_config": [[214, null]], "spdl.io.demux_image": [[215, null]], "spdl.io.demux_video": [[216, null]], "spdl.io.encode_image": [[217, null]], "spdl.io.get_abuffer_desc": [[218, null]], "spdl.io.get_audio_filter_desc": [[219, null]], "spdl.io.get_buffer_desc": [[220, null]], "spdl.io.get_filter_desc": [[221, null]], "spdl.io.get_video_filter_desc": [[222, null]], "spdl.io.iter_tarfile": [[223, null]], "spdl.io.load_audio": [[224, null]], "spdl.io.load_image": [[225, null]], "spdl.io.load_image_batch": [[226, null]], "spdl.io.load_image_batch_nvjpeg": [[227, null]], "spdl.io.load_npy": [[228, null]], "spdl.io.load_npz": [[229, null]], "spdl.io.load_video": [[230, null]], "spdl.io.load_wav": [[231, null]], "spdl.io.nv12_to_bgr": [[232, null]], "spdl.io.nv12_to_rgb": [[233, null]], "spdl.io.nvdec_decoder": [[234, null]], "spdl.io.sample_decode_video": [[235, null]], "spdl.io.save_image": [[236, null]], "spdl.io.streaming_load_video_nvdec": [[237, null]], "spdl.io.to_jax": [[238, null]], "spdl.io.to_numba": [[239, null]], "spdl.io.to_numpy": [[240, null]], "spdl.io.to_torch": [[241, null]], "spdl.io.transfer_buffer": [[242, null]], "spdl.io.transfer_buffer_cpu": [[243, null]], "spdl.io.transfer_tensor": [[244, null]], "spdl.io.utils": [[245, null]], "spdl.io.utils.built_with_cuda": [[246, null]], "spdl.io.utils.built_with_nvcodec": [[247, null]], "spdl.io.utils.built_with_nvjpeg": [[248, null]], "spdl.io.utils.get_ffmpeg_filters": [[249, null]], "spdl.io.utils.get_ffmpeg_log_level": [[250, null]], "spdl.io.utils.get_ffmpeg_versions": [[251, null]], "spdl.io.utils.set_ffmpeg_log_level": [[252, null]], "spdl.io.utils.trace_counter": [[253, null]], "spdl.io.utils.trace_event": [[254, null]], "spdl.io.utils.trace_gc": [[255, null]], "spdl.io.utils.tracing": [[256, null]], "spdl.io.video_encode_config": [[257, null]], "spdl.pipeline": [[258, null]], "spdl.pipeline.AsyncQueue": [[259, null]], "spdl.pipeline.Pipeline": [[260, null]], "spdl.pipeline.PipelineBuilder": [[261, null]], "spdl.pipeline.PipelineFailure": [[262, null]], "spdl.pipeline.ProfileHook": [[263, null]], "spdl.pipeline.ProfileResult": [[264, null]], "spdl.pipeline.QueuePerfStats": [[265, null]], "spdl.pipeline.StatsQueue": [[266, null]], "spdl.pipeline.TaskHook": [[267, null]], "spdl.pipeline.TaskPerfStats": [[268, null]], "spdl.pipeline.TaskStatsHook": [[269, null]], "spdl.pipeline.build_pipeline": [[270, null]], "spdl.pipeline.cache_iterator": [[271, null]], "spdl.pipeline.config": [[272, null]], "spdl.pipeline.config.diagnostic_mode_num_sources": [[273, null]], "spdl.pipeline.config.get_default_hook_class": [[274, null]], "spdl.pipeline.config.get_default_profile_callback": [[275, null]], "spdl.pipeline.config.get_default_profile_hook": [[276, null]], "spdl.pipeline.config.get_default_queue_class": [[277, null]], "spdl.pipeline.config.is_diagnostic_mode_enabled": [[278, null]], "spdl.pipeline.config.set_default_hook_class": [[279, null]], "spdl.pipeline.config.set_default_profile_callback": [[280, null]], "spdl.pipeline.config.set_default_profile_hook": [[281, null]], "spdl.pipeline.config.set_default_queue_class": [[282, null]], "spdl.pipeline.create_task": [[283, null]], "spdl.pipeline.defs": [[284, null]], "spdl.pipeline.defs.Aggregate": [[285, null]], "spdl.pipeline.defs.AggregateConfig": [[286, null]], "spdl.pipeline.defs.Disaggregate": [[287, null]], "spdl.pipeline.defs.DisaggregateConfig": [[288, null]], "spdl.pipeline.defs.Merge": [[289, null]], "spdl.pipeline.defs.MergeConfig": [[290, null]], "spdl.pipeline.defs.Pipe": [[291, null]], "spdl.pipeline.defs.PipeConfig": [[292, null]], "spdl.pipeline.defs.PipelineConfig": [[293, null]], "spdl.pipeline.defs.SinkConfig": [[294, null]], "spdl.pipeline.defs.SourceConfig": [[295, null]], "spdl.pipeline.is_eof": [[296, null]], "spdl.pipeline.iterate_in_subprocess": [[297, null]], "spdl.pipeline.profile_pipeline": [[298, null]], "spdl.pipeline.run_pipeline_in_subprocess": [[299, null]], "spdl.source": [[300, null]], "spdl.source.DistributedDeterministicSampler": [[301, null]], "spdl.source.DistributedRandomSampler": [[302, null]], "spdl.source.IterableWithShuffle": [[303, null]], "spdl.source.SizedIterable": [[304, null]], "spdl.source.SizedIterableWithShuffle": [[305, null]], "spdl.source.imagenet": [[306, null]], "spdl.source.imagenet.ImageNet": [[307, null]], "spdl.source.imagenet.get_mappings": [[308, null]], "spdl.source.imagenet.parse_wnid": [[309, null]], "spdl.source.local_directory": [[310, null]], "spdl.source.local_directory.LocalDirectory": [[311, null]], "spdl.source.utils": [[312, null]], "spdl.source.utils.MergeIterator": [[313, null]], "spdl.source.utils.embed_shuffle": [[314, null]], "spdl.source.utils.repeat_source": [[315, null]], "streaming_load_video_nvdec": [[167, "streaming-load-video-nvdec"]], "tl;dr": [[7, null], [9, null], [10, null]], "to_jax": [[167, "to-jax"]], "to_numba": [[167, "to-numba"]], "to_numpy": [[167, "to-numpy"]], "to_torch": [[167, "to-torch"]], "trace_counter": [[245, "trace-counter"]], "trace_event": [[245, "trace-event"]], "trace_gc": [[245, "trace-gc"]], "tracing": [[245, "tracing"]], "transfer_buffer": [[167, "transfer-buffer"]], "transfer_buffer_cpu": [[167, "transfer-buffer-cpu"]], "transfer_tensor": [[167, "transfer-tensor"]], "utils": [[300, "utils"]], "video_encode_config": [[167, "video-encode-config"]], "\u2020 Note on multi-threading": [[3, null]], "\u2020 The implementation of numpy.load function": [[7, null]], "\u2020 The maximum concurrency of the default executor.": [[4, null]], "\u2020 The underlying multiplexing mechanism.": [[1, null]], "\u2020\u2020 Note on executor": [[3, null]], "\u26a0 Caveats \u26a0": [[322, "caveats"]]}, "docnames": ["api", "async/event_loop", "async/index", "async/problem", "async/sync", "async/unit", "best_practice", "case_studies/data_format", "case_studies/index", "case_studies/inference", "case_studies/parallelism", "cpp", "examples", "faq", "generated/benchmark_tarfile", "generated/benchmark_wav", "generated/data_formats", "generated/hydra_integration", "generated/image_dataloading", "generated/imagenet_classification", "generated/libspdl/classspdl_1_1core_1_1BSF", "generated/libspdl/classspdl_1_1core_1_1CPUStorage", "generated/libspdl/classspdl_1_1core_1_1Codec", "generated/libspdl/classspdl_1_1core_1_1Decoder", "generated/libspdl/classspdl_1_1core_1_1Demuxer", "generated/libspdl/classspdl_1_1core_1_1Encoder", "generated/libspdl/classspdl_1_1core_1_1FilterGraph", "generated/libspdl/classspdl_1_1core_1_1Frames", "generated/libspdl/classspdl_1_1core_1_1InternalError", "generated/libspdl/classspdl_1_1core_1_1Muxer", "generated/libspdl/classspdl_1_1core_1_1PacketSeries", "generated/libspdl/classspdl_1_1core_1_1StreamingDemuxer", "generated/libspdl/classspdl_1_1core_1_1TracingSession", "generated/libspdl/classspdl_1_1core_1_1detail_1_1DecoderImpl", "generated/libspdl/classspdl_1_1core_1_1detail_1_1EncoderImpl", "generated/libspdl/define_frames_8h_1a9beaa64113e413112d43491ba5c13670", "generated/libspdl/define_frames_8h_1ac2ad95ac922a100ec27340436eb94940", "generated/libspdl/define_frames_8h_1ac99c83df576500933a3691deb137be6d", "generated/libspdl/define_types_8h_1a3a6c4d7f842d451acf8717ce734385f2", "generated/libspdl/dir__home_runner_work_spdl_spdl_src", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl_core", "generated/libspdl/enum_types_8h_1a5422694500d2203e301dc182e5f63d22", "generated/libspdl/enum_types_8h_1ac22438cfd069f0b1b6a736e73e8d244c", "generated/libspdl/enum_types_8h_1adb4e1adb2b3a59148c2797f903ead06f", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_types.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h", "generated/libspdl/function_buffer_8h_1abb668d9a68635211e5e07bd5038df4aa", "generated/libspdl/function_conversion_8h_1a295b42ad20d2569806d9a15009a44ca8", "generated/libspdl/function_conversion_8h_1a3f08ca7a5c09ab82603e239e50dff4d7", "generated/libspdl/function_conversion_8h_1a87d61e0429716c42f3a5f5e85aad5b61", "generated/libspdl/function_conversion_8h_1ae55bfac2f391205603d77241fc25ca1a", "generated/libspdl/function_demuxing_8h_1a590baa95f8eeb6bc0092c723ff060dd4", "generated/libspdl/function_demuxing_8h_1ad3fdb02bd04d231cd7238e034c27711f", "generated/libspdl/function_filter__graph_8h_1aaa3dba3ab905bd429d038f0bbaa6ce16", "generated/libspdl/function_frames_8h_1a30fbfab5f9ecfb208928ebdaca7f4349", "generated/libspdl/function_packets_8h_1a50ec9c8a7e6ab71e7827df2eb862dc40", "generated/libspdl/function_packets_8h_1ad3bdea22ad439f82174ce27c26bec857", "generated/libspdl/function_utils_8h_1a0aef7b410dcb4075e477b10ba3e71f80", "generated/libspdl/function_utils_8h_1a0ebae69b46f68552c3f64ddc2af67f53", "generated/libspdl/function_utils_8h_1a893d39670b4169063d8f6e3723f4bc11", "generated/libspdl/function_utils_8h_1a8f29c25b417b77e9dfb5a769b418c169", "generated/libspdl/function_utils_8h_1a9b6c16227a1a8445319b487cacb0cd1d", "generated/libspdl/function_utils_8h_1aa1e91130e5d71e8c2a104e4f72296ff3", "generated/libspdl/function_utils_8h_1abbebef003881d8734c12e03a47814732", "generated/libspdl/function_utils_8h_1ae1a3d30b33d837c39c40190e681d37c8", "generated/libspdl/function_utils_8h_1ae27a1cc3e5bfd9997090eb40711cc6c6", "generated/libspdl/function_utils_8h_1af82c781c7484afbad6cbac32ff925793", "generated/libspdl/libspdl_api", "generated/libspdl/libspdl_class", "generated/libspdl/libspdl_file", "generated/libspdl/namespace_spdl", "generated/libspdl/namespace_spdl__core", "generated/libspdl/namespace_spdl__core__detail", "generated/libspdl/namespace_std", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_types.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h", "generated/libspdl/root", "generated/libspdl/structAVRational", "generated/libspdl/structspdl_1_1core_1_1BytesAdaptor", "generated/libspdl/structspdl_1_1core_1_1CPUBuffer", "generated/libspdl/structspdl_1_1core_1_1DataInterface", "generated/libspdl/structspdl_1_1core_1_1DecodeConfig", "generated/libspdl/structspdl_1_1core_1_1DemuxConfig", "generated/libspdl/structspdl_1_1core_1_1EncodeConfigBase", "generated/libspdl/structspdl_1_1core_1_1Generator", "generated/libspdl/structspdl_1_1core_1_1Generator_1_1promise__type", "generated/libspdl/structspdl_1_1core_1_1Packets", "generated/libspdl/structspdl_1_1core_1_1RawPacketData", "generated/libspdl/structspdl_1_1core_1_1SourceAdaptor", "generated/libspdl/structspdl_1_1core_1_1Storage", "generated/libspdl/typedef_adaptor_8h_1adcb670a31326eb24268b384396736cd6", "generated/libspdl/typedef_adaptor_8h_1adfe58c3c3a3d3171c1d69c2e9924f2a7", "generated/libspdl/typedef_buffer_8h_1ab6e5b43497adbd35e9fbc35cf5be7101", "generated/libspdl/typedef_codec_8h_1a606d432c7b033a787f653c4992937e6f", "generated/libspdl/typedef_codec_8h_1a9098e05b01da4afd02090b0d6d7624ba", "generated/libspdl/typedef_codec_8h_1ac7441badce2b2aa467eac09b35d4f81e", "generated/libspdl/typedef_decoder_8h_1a4b0502ea20d1dda958a67deeb582a74b", "generated/libspdl/typedef_demuxing_8h_1a0a7f8c140cd7110dc5f3f6537fae67db", "generated/libspdl/typedef_demuxing_8h_1a4b53016f9b756cc2c2cfbd0e5ad9558b", "generated/libspdl/typedef_encoder_8h_1a0dfcc06d4bbea67c7f45399be8719fa6", "generated/libspdl/typedef_encoder_8h_1a383bf2b0ac1564702f10e3b5f3ef03f6", "generated/libspdl/typedef_encoder_8h_1a39ace4ea741767fa3d802040a9bc22e1", "generated/libspdl/typedef_encoder_8h_1a57216492ce017017647dba9d1f6f2a5d", "generated/libspdl/typedef_encoder_8h_1aacfba556b86e2d663a004b8677567339", "generated/libspdl/typedef_filter__graph_8h_1a29554b40f89e4b227521ff86ccf69b8b", "generated/libspdl/typedef_frames_8h_1a3760130bba382ba7f15df177ca3374c7", "generated/libspdl/typedef_frames_8h_1a53a3c93ef56a4400fabd3a553ab21c4a", "generated/libspdl/typedef_frames_8h_1a5be56dffe8f2b76de9540fb1ad8b83bf", "generated/libspdl/typedef_frames_8h_1a9db8234daca15eb073d00fa762641b62", "generated/libspdl/typedef_frames_8h_1aba3a9982b74abb6be181dc4d247d53fa", "generated/libspdl/typedef_frames_8h_1acb0efeb222082bf955c71c74964d301d", "generated/libspdl/typedef_frames_8h_1ad628496b3863230dd76eeccc4fa66437", "generated/libspdl/typedef_frames_8h_1af1892953097f3723455403752ef79fc5", "generated/libspdl/typedef_muxer_8h_1aaa76352d246819df02bc407729f69dda", "generated/libspdl/typedef_packets_8h_1a331b599d0eceb00ebef166d64623c71a", "generated/libspdl/typedef_packets_8h_1a7be7c9faccc623d12fb33ec966f84b4c", "generated/libspdl/typedef_packets_8h_1a8b9c8b08fcbf891fa939700ecd807ce1", "generated/libspdl/typedef_packets_8h_1a9644f8aa13f0e4db02d8ab60673563a3", "generated/libspdl/typedef_packets_8h_1aa21b44d594bfc132b4252fd2f544a691", "generated/libspdl/typedef_packets_8h_1aad5761fe07714efccc2be969a4397354", "generated/libspdl/typedef_packets_8h_1ab2cc72fb6b931466960bd4b9f812784c", "generated/libspdl/typedef_packets_8h_1ab96da01bb9cc9793e8ae2637e1dd610b", "generated/libspdl/typedef_packets_8h_1af018ade1cd38831c342686abbcb787a8", "generated/libspdl/typedef_types_8h_1a23b168da4cdf96923387b92a43f20038", "generated/libspdl/typedef_types_8h_1a6eff035c271caa5a533987a1e00ad43e", "generated/libspdl/typedef_types_8h_1a8b310bdb98714a971b07aa58f7403529", "generated/libspdl/typedef_types_8h_1a8bd80c8465b1f3e17b564c5ced977a2d", "generated/libspdl/typedef_types_8h_1aa5d8175da6bbcbe93e7191461f7baa20", "generated/libspdl/unabridged_orphan", "generated/multi_thread_preprocessing", "generated/performance_analysis", "generated/pipeline_definitions", "generated/pipeline_profiling", "generated/spdl.dataloader", "generated/spdl.dataloader.CacheDataLoader", "generated/spdl.dataloader.DataLoader", "generated/spdl.dataloader.PyTorchDataLoader", "generated/spdl.dataloader.get_pytorch_dataloader", "generated/spdl.io", "generated/spdl.io.ArrayInterface", "generated/spdl.io.AudioCodec", "generated/spdl.io.AudioDecoder", "generated/spdl.io.AudioEncodeConfig", "generated/spdl.io.AudioEncoder", "generated/spdl.io.AudioFrames", "generated/spdl.io.AudioPackets", "generated/spdl.io.BSF", "generated/spdl.io.CPUBuffer", "generated/spdl.io.CPUStorage", "generated/spdl.io.CUDAArrayInterface", "generated/spdl.io.CUDABuffer", "generated/spdl.io.CUDAConfig", "generated/spdl.io.DecodeConfig", "generated/spdl.io.Decoder", "generated/spdl.io.DemuxConfig", "generated/spdl.io.Demuxer", "generated/spdl.io.FilterGraph", "generated/spdl.io.Frames", "generated/spdl.io.ImageCodec", "generated/spdl.io.ImageDecoder", "generated/spdl.io.ImageFrames", "generated/spdl.io.ImagePackets", "generated/spdl.io.Muxer", "generated/spdl.io.NpzFile", "generated/spdl.io.NvDecDecoder", "generated/spdl.io.Packets", "generated/spdl.io.VideoCodec", "generated/spdl.io.VideoDecoder", "generated/spdl.io.VideoEncodeConfig", "generated/spdl.io.VideoEncoder", "generated/spdl.io.VideoFrames", "generated/spdl.io.VideoPackets", "generated/spdl.io.apply_bsf", "generated/spdl.io.audio_encode_config", "generated/spdl.io.convert_array", "generated/spdl.io.convert_frames", "generated/spdl.io.cpu_storage", "generated/spdl.io.create_reference_audio_frame", "generated/spdl.io.create_reference_video_frame", "generated/spdl.io.cuda_config", "generated/spdl.io.decode_config", "generated/spdl.io.decode_image_nvjpeg", "generated/spdl.io.decode_packets", "generated/spdl.io.decode_packets_nvdec", "generated/spdl.io.demux_audio", "generated/spdl.io.demux_config", "generated/spdl.io.demux_image", "generated/spdl.io.demux_video", "generated/spdl.io.encode_image", "generated/spdl.io.get_abuffer_desc", "generated/spdl.io.get_audio_filter_desc", "generated/spdl.io.get_buffer_desc", "generated/spdl.io.get_filter_desc", "generated/spdl.io.get_video_filter_desc", "generated/spdl.io.iter_tarfile", "generated/spdl.io.load_audio", "generated/spdl.io.load_image", "generated/spdl.io.load_image_batch", "generated/spdl.io.load_image_batch_nvjpeg", "generated/spdl.io.load_npy", "generated/spdl.io.load_npz", "generated/spdl.io.load_video", "generated/spdl.io.load_wav", "generated/spdl.io.nv12_to_bgr", "generated/spdl.io.nv12_to_rgb", "generated/spdl.io.nvdec_decoder", "generated/spdl.io.sample_decode_video", "generated/spdl.io.save_image", "generated/spdl.io.streaming_load_video_nvdec", "generated/spdl.io.to_jax", "generated/spdl.io.to_numba", "generated/spdl.io.to_numpy", "generated/spdl.io.to_torch", "generated/spdl.io.transfer_buffer", "generated/spdl.io.transfer_buffer_cpu", "generated/spdl.io.transfer_tensor", "generated/spdl.io.utils", "generated/spdl.io.utils.built_with_cuda", "generated/spdl.io.utils.built_with_nvcodec", "generated/spdl.io.utils.built_with_nvjpeg", "generated/spdl.io.utils.get_ffmpeg_filters", "generated/spdl.io.utils.get_ffmpeg_log_level", "generated/spdl.io.utils.get_ffmpeg_versions", "generated/spdl.io.utils.set_ffmpeg_log_level", "generated/spdl.io.utils.trace_counter", "generated/spdl.io.utils.trace_event", "generated/spdl.io.utils.trace_gc", "generated/spdl.io.utils.tracing", "generated/spdl.io.video_encode_config", "generated/spdl.pipeline", "generated/spdl.pipeline.AsyncQueue", "generated/spdl.pipeline.Pipeline", "generated/spdl.pipeline.PipelineBuilder", "generated/spdl.pipeline.PipelineFailure", "generated/spdl.pipeline.ProfileHook", "generated/spdl.pipeline.ProfileResult", "generated/spdl.pipeline.QueuePerfStats", "generated/spdl.pipeline.StatsQueue", "generated/spdl.pipeline.TaskHook", "generated/spdl.pipeline.TaskPerfStats", "generated/spdl.pipeline.TaskStatsHook", "generated/spdl.pipeline.build_pipeline", "generated/spdl.pipeline.cache_iterator", "generated/spdl.pipeline.config", "generated/spdl.pipeline.config.diagnostic_mode_num_sources", "generated/spdl.pipeline.config.get_default_hook_class", "generated/spdl.pipeline.config.get_default_profile_callback", "generated/spdl.pipeline.config.get_default_profile_hook", "generated/spdl.pipeline.config.get_default_queue_class", "generated/spdl.pipeline.config.is_diagnostic_mode_enabled", "generated/spdl.pipeline.config.set_default_hook_class", "generated/spdl.pipeline.config.set_default_profile_callback", "generated/spdl.pipeline.config.set_default_profile_hook", "generated/spdl.pipeline.config.set_default_queue_class", "generated/spdl.pipeline.create_task", "generated/spdl.pipeline.defs", "generated/spdl.pipeline.defs.Aggregate", "generated/spdl.pipeline.defs.AggregateConfig", "generated/spdl.pipeline.defs.Disaggregate", "generated/spdl.pipeline.defs.DisaggregateConfig", "generated/spdl.pipeline.defs.Merge", "generated/spdl.pipeline.defs.MergeConfig", "generated/spdl.pipeline.defs.Pipe", "generated/spdl.pipeline.defs.PipeConfig", "generated/spdl.pipeline.defs.PipelineConfig", "generated/spdl.pipeline.defs.SinkConfig", "generated/spdl.pipeline.defs.SourceConfig", "generated/spdl.pipeline.is_eof", "generated/spdl.pipeline.iterate_in_subprocess", "generated/spdl.pipeline.profile_pipeline", "generated/spdl.pipeline.run_pipeline_in_subprocess", "generated/spdl.source", "generated/spdl.source.DistributedDeterministicSampler", "generated/spdl.source.DistributedRandomSampler", "generated/spdl.source.IterableWithShuffle", "generated/spdl.source.SizedIterable", "generated/spdl.source.SizedIterableWithShuffle", "generated/spdl.source.imagenet", "generated/spdl.source.imagenet.ImageNet", "generated/spdl.source.imagenet.get_mappings", "generated/spdl.source.imagenet.parse_wnid", "generated/spdl.source.local_directory", "generated/spdl.source.local_directory.LocalDirectory", "generated/spdl.source.utils", "generated/spdl.source.utils.MergeIterator", "generated/spdl.source.utils.embed_shuffle", "generated/spdl.source.utils.repeat_source", "generated/streaming_nvdec_decoding", "generated/streaming_video_processing", "generated/video_dataloading", "getting_started/async", "getting_started/concurrency", "getting_started/index", "getting_started/intro", "getting_started/logging", "getting_started/parallelism", "getting_started/stages", "index", "installation", "io/index", "migration/index", "migration/paradigm_shift", "migration/pytorch", "migration/why", "notes/index", "notes/pipeline_impl", "optimization_guide/analysis", "optimization_guide/fleet_metrics", "optimization_guide/headspace_analysis", "optimization_guide/index", "optimization_guide/noisy_neighbour", "optimization_guide/resolution", "optimization_guide/setup", "optimization_guide/straggler", "overview"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "async/event_loop.rst", "async/index.rst", "async/problem.rst", "async/sync.rst", "async/unit.rst", "best_practice.rst", "case_studies/data_format.rst", "case_studies/index.rst", "case_studies/inference.rst", "case_studies/parallelism.rst", "cpp.rst", "examples.rst", "faq.rst", "generated/benchmark_tarfile.rst", "generated/benchmark_wav.rst", "generated/data_formats.rst", "generated/hydra_integration.rst", "generated/image_dataloading.rst", "generated/imagenet_classification.rst", "generated/libspdl/classspdl_1_1core_1_1BSF.rst", "generated/libspdl/classspdl_1_1core_1_1CPUStorage.rst", "generated/libspdl/classspdl_1_1core_1_1Codec.rst", "generated/libspdl/classspdl_1_1core_1_1Decoder.rst", "generated/libspdl/classspdl_1_1core_1_1Demuxer.rst", "generated/libspdl/classspdl_1_1core_1_1Encoder.rst", "generated/libspdl/classspdl_1_1core_1_1FilterGraph.rst", "generated/libspdl/classspdl_1_1core_1_1Frames.rst", "generated/libspdl/classspdl_1_1core_1_1InternalError.rst", "generated/libspdl/classspdl_1_1core_1_1Muxer.rst", "generated/libspdl/classspdl_1_1core_1_1PacketSeries.rst", "generated/libspdl/classspdl_1_1core_1_1StreamingDemuxer.rst", "generated/libspdl/classspdl_1_1core_1_1TracingSession.rst", "generated/libspdl/classspdl_1_1core_1_1detail_1_1DecoderImpl.rst", "generated/libspdl/classspdl_1_1core_1_1detail_1_1EncoderImpl.rst", "generated/libspdl/define_frames_8h_1a9beaa64113e413112d43491ba5c13670.rst", "generated/libspdl/define_frames_8h_1ac2ad95ac922a100ec27340436eb94940.rst", "generated/libspdl/define_frames_8h_1ac99c83df576500933a3691deb137be6d.rst", "generated/libspdl/define_types_8h_1a3a6c4d7f842d451acf8717ce734385f2.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl_core.rst", "generated/libspdl/enum_types_8h_1a5422694500d2203e301dc182e5f63d22.rst", "generated/libspdl/enum_types_8h_1ac22438cfd069f0b1b6a736e73e8d244c.rst", "generated/libspdl/enum_types_8h_1adb4e1adb2b3a59148c2797f903ead06f.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_types.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h.rst", "generated/libspdl/function_buffer_8h_1abb668d9a68635211e5e07bd5038df4aa.rst", "generated/libspdl/function_conversion_8h_1a295b42ad20d2569806d9a15009a44ca8.rst", "generated/libspdl/function_conversion_8h_1a3f08ca7a5c09ab82603e239e50dff4d7.rst", "generated/libspdl/function_conversion_8h_1a87d61e0429716c42f3a5f5e85aad5b61.rst", "generated/libspdl/function_conversion_8h_1ae55bfac2f391205603d77241fc25ca1a.rst", "generated/libspdl/function_demuxing_8h_1a590baa95f8eeb6bc0092c723ff060dd4.rst", "generated/libspdl/function_demuxing_8h_1ad3fdb02bd04d231cd7238e034c27711f.rst", "generated/libspdl/function_filter__graph_8h_1aaa3dba3ab905bd429d038f0bbaa6ce16.rst", "generated/libspdl/function_frames_8h_1a30fbfab5f9ecfb208928ebdaca7f4349.rst", "generated/libspdl/function_packets_8h_1a50ec9c8a7e6ab71e7827df2eb862dc40.rst", "generated/libspdl/function_packets_8h_1ad3bdea22ad439f82174ce27c26bec857.rst", "generated/libspdl/function_utils_8h_1a0aef7b410dcb4075e477b10ba3e71f80.rst", "generated/libspdl/function_utils_8h_1a0ebae69b46f68552c3f64ddc2af67f53.rst", "generated/libspdl/function_utils_8h_1a893d39670b4169063d8f6e3723f4bc11.rst", "generated/libspdl/function_utils_8h_1a8f29c25b417b77e9dfb5a769b418c169.rst", "generated/libspdl/function_utils_8h_1a9b6c16227a1a8445319b487cacb0cd1d.rst", "generated/libspdl/function_utils_8h_1aa1e91130e5d71e8c2a104e4f72296ff3.rst", "generated/libspdl/function_utils_8h_1abbebef003881d8734c12e03a47814732.rst", "generated/libspdl/function_utils_8h_1ae1a3d30b33d837c39c40190e681d37c8.rst", "generated/libspdl/function_utils_8h_1ae27a1cc3e5bfd9997090eb40711cc6c6.rst", "generated/libspdl/function_utils_8h_1af82c781c7484afbad6cbac32ff925793.rst", "generated/libspdl/libspdl_api.rst", "generated/libspdl/libspdl_class.rst", "generated/libspdl/libspdl_file.rst", "generated/libspdl/namespace_spdl.rst", "generated/libspdl/namespace_spdl__core.rst", "generated/libspdl/namespace_spdl__core__detail.rst", "generated/libspdl/namespace_std.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_types.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h.rst", "generated/libspdl/root.rst", "generated/libspdl/structAVRational.rst", "generated/libspdl/structspdl_1_1core_1_1BytesAdaptor.rst", "generated/libspdl/structspdl_1_1core_1_1CPUBuffer.rst", "generated/libspdl/structspdl_1_1core_1_1DataInterface.rst", "generated/libspdl/structspdl_1_1core_1_1DecodeConfig.rst", "generated/libspdl/structspdl_1_1core_1_1DemuxConfig.rst", "generated/libspdl/structspdl_1_1core_1_1EncodeConfigBase.rst", "generated/libspdl/structspdl_1_1core_1_1Generator.rst", "generated/libspdl/structspdl_1_1core_1_1Generator_1_1promise__type.rst", "generated/libspdl/structspdl_1_1core_1_1Packets.rst", "generated/libspdl/structspdl_1_1core_1_1RawPacketData.rst", "generated/libspdl/structspdl_1_1core_1_1SourceAdaptor.rst", "generated/libspdl/structspdl_1_1core_1_1Storage.rst", "generated/libspdl/typedef_adaptor_8h_1adcb670a31326eb24268b384396736cd6.rst", "generated/libspdl/typedef_adaptor_8h_1adfe58c3c3a3d3171c1d69c2e9924f2a7.rst", "generated/libspdl/typedef_buffer_8h_1ab6e5b43497adbd35e9fbc35cf5be7101.rst", "generated/libspdl/typedef_codec_8h_1a606d432c7b033a787f653c4992937e6f.rst", "generated/libspdl/typedef_codec_8h_1a9098e05b01da4afd02090b0d6d7624ba.rst", "generated/libspdl/typedef_codec_8h_1ac7441badce2b2aa467eac09b35d4f81e.rst", "generated/libspdl/typedef_decoder_8h_1a4b0502ea20d1dda958a67deeb582a74b.rst", "generated/libspdl/typedef_demuxing_8h_1a0a7f8c140cd7110dc5f3f6537fae67db.rst", "generated/libspdl/typedef_demuxing_8h_1a4b53016f9b756cc2c2cfbd0e5ad9558b.rst", "generated/libspdl/typedef_encoder_8h_1a0dfcc06d4bbea67c7f45399be8719fa6.rst", "generated/libspdl/typedef_encoder_8h_1a383bf2b0ac1564702f10e3b5f3ef03f6.rst", "generated/libspdl/typedef_encoder_8h_1a39ace4ea741767fa3d802040a9bc22e1.rst", "generated/libspdl/typedef_encoder_8h_1a57216492ce017017647dba9d1f6f2a5d.rst", "generated/libspdl/typedef_encoder_8h_1aacfba556b86e2d663a004b8677567339.rst", "generated/libspdl/typedef_filter__graph_8h_1a29554b40f89e4b227521ff86ccf69b8b.rst", "generated/libspdl/typedef_frames_8h_1a3760130bba382ba7f15df177ca3374c7.rst", "generated/libspdl/typedef_frames_8h_1a53a3c93ef56a4400fabd3a553ab21c4a.rst", "generated/libspdl/typedef_frames_8h_1a5be56dffe8f2b76de9540fb1ad8b83bf.rst", "generated/libspdl/typedef_frames_8h_1a9db8234daca15eb073d00fa762641b62.rst", "generated/libspdl/typedef_frames_8h_1aba3a9982b74abb6be181dc4d247d53fa.rst", "generated/libspdl/typedef_frames_8h_1acb0efeb222082bf955c71c74964d301d.rst", "generated/libspdl/typedef_frames_8h_1ad628496b3863230dd76eeccc4fa66437.rst", "generated/libspdl/typedef_frames_8h_1af1892953097f3723455403752ef79fc5.rst", "generated/libspdl/typedef_muxer_8h_1aaa76352d246819df02bc407729f69dda.rst", "generated/libspdl/typedef_packets_8h_1a331b599d0eceb00ebef166d64623c71a.rst", "generated/libspdl/typedef_packets_8h_1a7be7c9faccc623d12fb33ec966f84b4c.rst", "generated/libspdl/typedef_packets_8h_1a8b9c8b08fcbf891fa939700ecd807ce1.rst", "generated/libspdl/typedef_packets_8h_1a9644f8aa13f0e4db02d8ab60673563a3.rst", "generated/libspdl/typedef_packets_8h_1aa21b44d594bfc132b4252fd2f544a691.rst", "generated/libspdl/typedef_packets_8h_1aad5761fe07714efccc2be969a4397354.rst", "generated/libspdl/typedef_packets_8h_1ab2cc72fb6b931466960bd4b9f812784c.rst", "generated/libspdl/typedef_packets_8h_1ab96da01bb9cc9793e8ae2637e1dd610b.rst", "generated/libspdl/typedef_packets_8h_1af018ade1cd38831c342686abbcb787a8.rst", "generated/libspdl/typedef_types_8h_1a23b168da4cdf96923387b92a43f20038.rst", "generated/libspdl/typedef_types_8h_1a6eff035c271caa5a533987a1e00ad43e.rst", "generated/libspdl/typedef_types_8h_1a8b310bdb98714a971b07aa58f7403529.rst", "generated/libspdl/typedef_types_8h_1a8bd80c8465b1f3e17b564c5ced977a2d.rst", "generated/libspdl/typedef_types_8h_1aa5d8175da6bbcbe93e7191461f7baa20.rst", "generated/libspdl/unabridged_orphan.rst", "generated/multi_thread_preprocessing.rst", "generated/performance_analysis.rst", "generated/pipeline_definitions.rst", "generated/pipeline_profiling.rst", "generated/spdl.dataloader.rst", "generated/spdl.dataloader.CacheDataLoader.rst", "generated/spdl.dataloader.DataLoader.rst", "generated/spdl.dataloader.PyTorchDataLoader.rst", "generated/spdl.dataloader.get_pytorch_dataloader.rst", "generated/spdl.io.rst", "generated/spdl.io.ArrayInterface.rst", "generated/spdl.io.AudioCodec.rst", "generated/spdl.io.AudioDecoder.rst", "generated/spdl.io.AudioEncodeConfig.rst", "generated/spdl.io.AudioEncoder.rst", "generated/spdl.io.AudioFrames.rst", "generated/spdl.io.AudioPackets.rst", "generated/spdl.io.BSF.rst", "generated/spdl.io.CPUBuffer.rst", "generated/spdl.io.CPUStorage.rst", "generated/spdl.io.CUDAArrayInterface.rst", "generated/spdl.io.CUDABuffer.rst", "generated/spdl.io.CUDAConfig.rst", "generated/spdl.io.DecodeConfig.rst", "generated/spdl.io.Decoder.rst", "generated/spdl.io.DemuxConfig.rst", "generated/spdl.io.Demuxer.rst", "generated/spdl.io.FilterGraph.rst", "generated/spdl.io.Frames.rst", "generated/spdl.io.ImageCodec.rst", "generated/spdl.io.ImageDecoder.rst", "generated/spdl.io.ImageFrames.rst", "generated/spdl.io.ImagePackets.rst", "generated/spdl.io.Muxer.rst", "generated/spdl.io.NpzFile.rst", "generated/spdl.io.NvDecDecoder.rst", "generated/spdl.io.Packets.rst", "generated/spdl.io.VideoCodec.rst", "generated/spdl.io.VideoDecoder.rst", "generated/spdl.io.VideoEncodeConfig.rst", "generated/spdl.io.VideoEncoder.rst", "generated/spdl.io.VideoFrames.rst", "generated/spdl.io.VideoPackets.rst", "generated/spdl.io.apply_bsf.rst", "generated/spdl.io.audio_encode_config.rst", "generated/spdl.io.convert_array.rst", "generated/spdl.io.convert_frames.rst", "generated/spdl.io.cpu_storage.rst", "generated/spdl.io.create_reference_audio_frame.rst", "generated/spdl.io.create_reference_video_frame.rst", "generated/spdl.io.cuda_config.rst", "generated/spdl.io.decode_config.rst", "generated/spdl.io.decode_image_nvjpeg.rst", "generated/spdl.io.decode_packets.rst", "generated/spdl.io.decode_packets_nvdec.rst", "generated/spdl.io.demux_audio.rst", "generated/spdl.io.demux_config.rst", "generated/spdl.io.demux_image.rst", "generated/spdl.io.demux_video.rst", "generated/spdl.io.encode_image.rst", "generated/spdl.io.get_abuffer_desc.rst", "generated/spdl.io.get_audio_filter_desc.rst", "generated/spdl.io.get_buffer_desc.rst", "generated/spdl.io.get_filter_desc.rst", "generated/spdl.io.get_video_filter_desc.rst", "generated/spdl.io.iter_tarfile.rst", "generated/spdl.io.load_audio.rst", "generated/spdl.io.load_image.rst", "generated/spdl.io.load_image_batch.rst", "generated/spdl.io.load_image_batch_nvjpeg.rst", "generated/spdl.io.load_npy.rst", "generated/spdl.io.load_npz.rst", "generated/spdl.io.load_video.rst", "generated/spdl.io.load_wav.rst", "generated/spdl.io.nv12_to_bgr.rst", "generated/spdl.io.nv12_to_rgb.rst", "generated/spdl.io.nvdec_decoder.rst", "generated/spdl.io.sample_decode_video.rst", "generated/spdl.io.save_image.rst", "generated/spdl.io.streaming_load_video_nvdec.rst", "generated/spdl.io.to_jax.rst", "generated/spdl.io.to_numba.rst", "generated/spdl.io.to_numpy.rst", "generated/spdl.io.to_torch.rst", "generated/spdl.io.transfer_buffer.rst", "generated/spdl.io.transfer_buffer_cpu.rst", "generated/spdl.io.transfer_tensor.rst", "generated/spdl.io.utils.rst", "generated/spdl.io.utils.built_with_cuda.rst", "generated/spdl.io.utils.built_with_nvcodec.rst", "generated/spdl.io.utils.built_with_nvjpeg.rst", "generated/spdl.io.utils.get_ffmpeg_filters.rst", "generated/spdl.io.utils.get_ffmpeg_log_level.rst", "generated/spdl.io.utils.get_ffmpeg_versions.rst", "generated/spdl.io.utils.set_ffmpeg_log_level.rst", "generated/spdl.io.utils.trace_counter.rst", "generated/spdl.io.utils.trace_event.rst", "generated/spdl.io.utils.trace_gc.rst", "generated/spdl.io.utils.tracing.rst", "generated/spdl.io.video_encode_config.rst", "generated/spdl.pipeline.rst", "generated/spdl.pipeline.AsyncQueue.rst", "generated/spdl.pipeline.Pipeline.rst", "generated/spdl.pipeline.PipelineBuilder.rst", "generated/spdl.pipeline.PipelineFailure.rst", "generated/spdl.pipeline.ProfileHook.rst", "generated/spdl.pipeline.ProfileResult.rst", "generated/spdl.pipeline.QueuePerfStats.rst", "generated/spdl.pipeline.StatsQueue.rst", "generated/spdl.pipeline.TaskHook.rst", "generated/spdl.pipeline.TaskPerfStats.rst", "generated/spdl.pipeline.TaskStatsHook.rst", "generated/spdl.pipeline.build_pipeline.rst", "generated/spdl.pipeline.cache_iterator.rst", "generated/spdl.pipeline.config.rst", "generated/spdl.pipeline.config.diagnostic_mode_num_sources.rst", "generated/spdl.pipeline.config.get_default_hook_class.rst", "generated/spdl.pipeline.config.get_default_profile_callback.rst", "generated/spdl.pipeline.config.get_default_profile_hook.rst", "generated/spdl.pipeline.config.get_default_queue_class.rst", "generated/spdl.pipeline.config.is_diagnostic_mode_enabled.rst", "generated/spdl.pipeline.config.set_default_hook_class.rst", "generated/spdl.pipeline.config.set_default_profile_callback.rst", "generated/spdl.pipeline.config.set_default_profile_hook.rst", "generated/spdl.pipeline.config.set_default_queue_class.rst", "generated/spdl.pipeline.create_task.rst", "generated/spdl.pipeline.defs.rst", "generated/spdl.pipeline.defs.Aggregate.rst", "generated/spdl.pipeline.defs.AggregateConfig.rst", "generated/spdl.pipeline.defs.Disaggregate.rst", "generated/spdl.pipeline.defs.DisaggregateConfig.rst", "generated/spdl.pipeline.defs.Merge.rst", "generated/spdl.pipeline.defs.MergeConfig.rst", "generated/spdl.pipeline.defs.Pipe.rst", "generated/spdl.pipeline.defs.PipeConfig.rst", "generated/spdl.pipeline.defs.PipelineConfig.rst", "generated/spdl.pipeline.defs.SinkConfig.rst", "generated/spdl.pipeline.defs.SourceConfig.rst", "generated/spdl.pipeline.is_eof.rst", "generated/spdl.pipeline.iterate_in_subprocess.rst", "generated/spdl.pipeline.profile_pipeline.rst", "generated/spdl.pipeline.run_pipeline_in_subprocess.rst", "generated/spdl.source.rst", "generated/spdl.source.DistributedDeterministicSampler.rst", "generated/spdl.source.DistributedRandomSampler.rst", "generated/spdl.source.IterableWithShuffle.rst", "generated/spdl.source.SizedIterable.rst", "generated/spdl.source.SizedIterableWithShuffle.rst", "generated/spdl.source.imagenet.rst", "generated/spdl.source.imagenet.ImageNet.rst", "generated/spdl.source.imagenet.get_mappings.rst", "generated/spdl.source.imagenet.parse_wnid.rst", "generated/spdl.source.local_directory.rst", "generated/spdl.source.local_directory.LocalDirectory.rst", "generated/spdl.source.utils.rst", "generated/spdl.source.utils.MergeIterator.rst", "generated/spdl.source.utils.embed_shuffle.rst", "generated/spdl.source.utils.repeat_source.rst", "generated/streaming_nvdec_decoding.rst", "generated/streaming_video_processing.rst", "generated/video_dataloading.rst", "getting_started/async.rst", "getting_started/concurrency.rst", "getting_started/index.rst", "getting_started/intro.rst", "getting_started/logging.rst", "getting_started/parallelism.rst", "getting_started/stages.rst", "index.rst", "installation.rst", "io/index.rst", "migration/index.rst", "migration/paradigm_shift.rst", "migration/pytorch.rst", "migration/why.rst", "notes/index.rst", "notes/pipeline_impl.rst", "optimization_guide/analysis.rst", "optimization_guide/fleet_metrics.rst", "optimization_guide/headspace_analysis.rst", "optimization_guide/index.rst", "optimization_guide/noisy_neighbour.rst", "optimization_guide/resolution.rst", "optimization_guide/setup.rst", "optimization_guide/straggler.rst", "overview.rst"], "indexentries": {"__getitem__() (npzfile method)": [[192, "spdl.io.NpzFile.__getitem__", false]], "__getitem__() (videoframes method)": [[199, "spdl.io.VideoFrames.__getitem__", false]], "__iter__() (cachedataloader method)": [[163, "spdl.dataloader.CacheDataLoader.__iter__", false]], "__iter__() (dataloader method)": [[164, "spdl.dataloader.DataLoader.__iter__", false]], "__iter__() (datasource method)": [[16, "data_formats.DataSource.__iter__", false]], "__iter__() (distributeddeterministicsampler method)": [[301, "spdl.source.DistributedDeterministicSampler.__iter__", false]], "__iter__() (distributedrandomsampler method)": [[302, "spdl.source.DistributedRandomSampler.__iter__", false]], "__iter__() (imagenet method)": [[307, "spdl.source.imagenet.ImageNet.__iter__", false]], "__iter__() (localdirectory method)": [[311, "spdl.source.local_directory.LocalDirectory.__iter__", false]], "__iter__() (mergeiterator method)": [[313, "spdl.source.utils.MergeIterator.__iter__", false]], "__iter__() (npzfile method)": [[192, "spdl.io.NpzFile.__iter__", false]], "__iter__() (pipeline method)": [[260, "spdl.pipeline.Pipeline.__iter__", false]], "__iter__() (pytorchdataloader method)": [[165, "spdl.dataloader.PyTorchDataLoader.__iter__", false]], "__len__() (audioframes method)": [[173, "spdl.io.AudioFrames.__len__", false]], "__len__() (cachedataloader method)": [[163, "spdl.dataloader.CacheDataLoader.__len__", false]], "__len__() (distributeddeterministicsampler method)": [[301, "spdl.source.DistributedDeterministicSampler.__len__", false]], "__len__() (distributedrandomsampler method)": [[302, "spdl.source.DistributedRandomSampler.__len__", false]], "__len__() (npzfile method)": [[192, "spdl.io.NpzFile.__len__", false]], "__len__() (pytorchdataloader method)": [[165, "spdl.dataloader.PyTorchDataLoader.__len__", false]], "__len__() (videoframes method)": [[199, "spdl.io.VideoFrames.__len__", false]], "__len__() (videopackets method)": [[200, "spdl.io.VideoPackets.__len__", false]], "_is_audio (c macro)": [[36, "c._IS_AUDIO", false]], "_is_image (c macro)": [[37, "c._IS_IMAGE", false]], "_is_video (c macro)": [[35, "c._IS_VIDEO", false]], "add_100() (in module pipeline_definitions)": [[160, "pipeline_definitions.add_100", false]], "add_encode_stream() (muxer method)": [[191, "spdl.io.Muxer.add_encode_stream", false]], "add_frames() (filtergraph method)": [[185, "spdl.io.FilterGraph.add_frames", false]], "add_remux_stream() (muxer method)": [[191, "spdl.io.Muxer.add_remux_stream", false]], "add_sink() (pipelinebuilder method)": [[261, "spdl.pipeline.PipelineBuilder.add_sink", false]], "add_source() (pipelinebuilder method)": [[261, "spdl.pipeline.PipelineBuilder.add_source", false]], "aggregate() (in module spdl.pipeline.defs)": [[285, "spdl.pipeline.defs.Aggregate", false]], "aggregate() (pipelinebuilder method)": [[261, "spdl.pipeline.PipelineBuilder.aggregate", false]], "aggregateconfig (class in spdl.pipeline.defs)": [[286, "spdl.pipeline.defs.AggregateConfig", false]], "apply_bsf() (in module spdl.io)": [[201, "spdl.io.apply_bsf", false]], "arrayinterface (class in spdl.io)": [[168, "spdl.io.ArrayInterface", false]], "asyncqueue (class in spdl.pipeline)": [[259, "spdl.pipeline.AsyncQueue", false]], "audio_codec (demuxer property)": [[184, "spdl.io.Demuxer.audio_codec", false]], "audio_encode_config() (in module spdl.io)": [[202, "spdl.io.audio_encode_config", false]], "audio_stream_index (demuxer property)": [[184, "spdl.io.Demuxer.audio_stream_index", false]], "audiocodec (class in spdl.io)": [[169, "spdl.io.AudioCodec", false]], "audiodecoder (class in spdl.io)": [[170, "spdl.io.AudioDecoder", false]], "audioencodeconfig (class in spdl.io)": [[171, "spdl.io.AudioEncodeConfig", false]], "audioencoder (class in spdl.io)": [[172, "spdl.io.AudioEncoder", false]], "audioframes (class in spdl.io)": [[173, "spdl.io.AudioFrames", false]], "audiopackets (class in spdl.io)": [[174, "spdl.io.AudioPackets", false]], "auto_stop() (pipeline method)": [[260, "spdl.pipeline.Pipeline.auto_stop", false]], "ave_get_time (queueperfstats attribute)": [[265, "spdl.pipeline.QueuePerfStats.ave_get_time", false]], "ave_put_time (queueperfstats attribute)": [[265, "spdl.pipeline.QueuePerfStats.ave_put_time", false]], "ave_time (taskperfstats attribute)": [[268, "spdl.pipeline.TaskPerfStats.ave_time", false]], "avrational (c++ struct)": [[106, "_CPPv410AVRational", false]], "avrational (c++ type)": [[153, "_CPPv410AVRational", false]], "avrational::den (c++ member)": [[106, "_CPPv4N10AVRational3denE", false]], "avrational::num (c++ member)": [[106, "_CPPv4N10AVRational3numE", false]], "batch_decode() (in module image_dataloading)": [[18, "image_dataloading.batch_decode", false]], "benchmark() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.benchmark", false]], "benchmark() (in module benchmark_wav)": [[15, "benchmark_wav.benchmark", false]], "benchmark() (in module image_dataloading)": [[18, "image_dataloading.benchmark", false]], "benchmark() (in module imagenet_classification)": [[19, "imagenet_classification.benchmark", false]], "benchmark() (in module video_dataloading)": [[318, "video_dataloading.benchmark", false]], "benchmark_tarfile": [[14, "module-benchmark_tarfile", false]], "benchmark_wav": [[15, "module-benchmark_wav", false]], "benchmarkconfig (class in benchmark_wav)": [[15, "benchmark_wav.BenchmarkConfig", false]], "benchmarkresult (class in benchmark_tarfile)": [[14, "benchmark_tarfile.BenchmarkResult", false]], "benchmarkresult (class in benchmark_wav)": [[15, "benchmark_wav.BenchmarkResult", false]], "bits_per_sample (benchmarkconfig attribute)": [[15, "benchmark_wav.BenchmarkConfig.bits_per_sample", false], [15, "id0", false]], "bsf (class in spdl.io)": [[175, "spdl.io.BSF", false]], "buffer_size (sinkconfig attribute)": [[294, "spdl.pipeline.defs.SinkConfig.buffer_size", false]], "build() (pipelinebuilder method)": [[261, "spdl.pipeline.PipelineBuilder.build", false]], "build_components() (in module streaming_video_processing)": [[317, "streaming_video_processing.build_components", false]], "build_pipeline() (in module performance_analysis)": [[159, "performance_analysis.build_pipeline", false]], "build_pipeline() (in module spdl.pipeline)": [[270, "spdl.pipeline.build_pipeline", false]], "built_with_cuda() (in module spdl.io.utils)": [[246, "spdl.io.utils.built_with_cuda", false]], "built_with_nvcodec() (in module spdl.io.utils)": [[247, "spdl.io.utils.built_with_nvcodec", false]], "built_with_nvjpeg() (in module spdl.io.utils)": [[248, "spdl.io.utils.built_with_nvjpeg", false]], "cache_iterator() (in module spdl.pipeline)": [[271, "spdl.pipeline.cache_iterator", false]], "cachedataloader (class in spdl.dataloader)": [[163, "spdl.dataloader.CacheDataLoader", false]], "channel_layout (audiocodec property)": [[169, "spdl.io.AudioCodec.channel_layout", false]], "ci_lower (benchmarkresult attribute)": [[15, "benchmark_wav.BenchmarkResult.ci_lower", false]], "ci_upper (benchmarkresult attribute)": [[15, "benchmark_wav.BenchmarkResult.ci_upper", false]], "classification (class in imagenet_classification)": [[19, "imagenet_classification.Classification", false]], "clone() (audioframes method)": [[173, "spdl.io.AudioFrames.clone", false]], "clone() (audiopackets method)": [[174, "spdl.io.AudioPackets.clone", false]], "clone() (imageframes method)": [[189, "spdl.io.ImageFrames.clone", false]], "clone() (imagepackets method)": [[190, "spdl.io.ImagePackets.clone", false]], "clone() (videoframes method)": [[199, "spdl.io.VideoFrames.clone", false]], "clone() (videopackets method)": [[200, "spdl.io.VideoPackets.clone", false]], "close() (muxer method)": [[191, "spdl.io.Muxer.close", false]], "codec (audiopackets property)": [[174, "spdl.io.AudioPackets.codec", false]], "codec (imagepackets property)": [[190, "spdl.io.ImagePackets.codec", false]], "codec (videopackets property)": [[200, "spdl.io.VideoPackets.codec", false]], "convert_array() (in module spdl.io)": [[203, "spdl.io.convert_array", false]], "convert_frames() (in module spdl.io)": [[204, "spdl.io.convert_frames", false]], "cpu_storage() (in module spdl.io)": [[205, "spdl.io.cpu_storage", false]], "cpubuffer (class in spdl.io)": [[176, "spdl.io.CPUBuffer", false]], "cpustorage (class in spdl.io)": [[177, "spdl.io.CPUStorage", false]], "create_main_pipeline() (in module pipeline_definitions)": [[160, "pipeline_definitions.create_main_pipeline", false]], "create_pipeline() (in module pipeline_profiling)": [[161, "pipeline_profiling.create_pipeline", false]], "create_reference_audio_frame() (in module spdl.io)": [[206, "spdl.io.create_reference_audio_frame", false]], "create_reference_video_frame() (in module spdl.io)": [[207, "spdl.io.create_reference_video_frame", false]], "create_sub_pipeline_1() (in module pipeline_definitions)": [[160, "pipeline_definitions.create_sub_pipeline_1", false]], "create_sub_pipeline_2() (in module pipeline_definitions)": [[160, "pipeline_definitions.create_sub_pipeline_2", false]], "create_task() (in module spdl.pipeline)": [[283, "spdl.pipeline.create_task", false]], "create_test_tar() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.create_test_tar", false]], "create_wav_data() (in module benchmark_wav)": [[15, "benchmark_wav.create_wav_data", false]], "cuda_config() (in module spdl.io)": [[208, "spdl.io.cuda_config", false]], "cudaarrayinterface (class in spdl.io)": [[178, "spdl.io.CUDAArrayInterface", false]], "cudabuffer (class in spdl.io)": [[179, "spdl.io.CUDABuffer", false]], "cudaconfig (class in spdl.io)": [[180, "spdl.io.CUDAConfig", false]], "customqueue (class in performance_analysis)": [[159, "performance_analysis.CustomQueue", false]], "customtaskhook (class in performance_analysis)": [[159, "performance_analysis.CustomTaskHook", false]], "data_formats": [[16, "module-data_formats", false]], "dataloader (class in spdl.dataloader)": [[164, "spdl.dataloader.DataLoader", false]], "datasource (class in data_formats)": [[16, "data_formats.DataSource", false]], "decode() (audiodecoder method)": [[170, "spdl.io.AudioDecoder.decode", false]], "decode() (imagedecoder method)": [[188, "spdl.io.ImageDecoder.decode", false]], "decode() (in module performance_analysis)": [[159, "performance_analysis.decode", false]], "decode() (in module streaming_nvdec_decoding)": [[316, "streaming_nvdec_decoding.decode", false]], "decode() (nvdecdecoder method)": [[193, "spdl.io.NvDecDecoder.decode", false]], "decode() (videodecoder method)": [[196, "spdl.io.VideoDecoder.decode", false]], "decode_config() (in module spdl.io)": [[209, "spdl.io.decode_config", false]], "decode_image_nvjpeg() (in module spdl.io)": [[210, "spdl.io.decode_image_nvjpeg", false]], "decode_packets() (in module spdl.io)": [[211, "spdl.io.decode_packets", false]], "decode_packets_nvdec() (in module spdl.io)": [[212, "spdl.io.decode_packets_nvdec", false]], "decode_video() (in module video_dataloading)": [[318, "video_dataloading.decode_video", false]], "decode_video_nvdec() (in module video_dataloading)": [[318, "video_dataloading.decode_video_nvdec", false]], "decodeconfig (class in spdl.io)": [[181, "spdl.io.DecodeConfig", false]], "decoder() (in module spdl.io)": [[182, "spdl.io.Decoder", false]], "demux_audio() (demuxer method)": [[184, "spdl.io.Demuxer.demux_audio", false]], "demux_audio() (in module spdl.io)": [[213, "spdl.io.demux_audio", false]], "demux_config() (in module spdl.io)": [[214, "spdl.io.demux_config", false]], "demux_image() (demuxer method)": [[184, "spdl.io.Demuxer.demux_image", false]], "demux_image() (in module spdl.io)": [[215, "spdl.io.demux_image", false]], "demux_video() (demuxer method)": [[184, "spdl.io.Demuxer.demux_video", false]], "demux_video() (in module spdl.io)": [[216, "spdl.io.demux_video", false]], "demuxconfig (class in spdl.io)": [[183, "spdl.io.DemuxConfig", false]], "demuxer (class in spdl.io)": [[184, "spdl.io.Demuxer", false]], "device_index (cudabuffer property)": [[179, "spdl.io.CUDABuffer.device_index", false]], "diagnostic_mode_num_sources() (in module spdl.pipeline.config)": [[273, "spdl.pipeline.config.diagnostic_mode_num_sources", false]], "disaggregate() (in module spdl.pipeline.defs)": [[287, "spdl.pipeline.defs.Disaggregate", false]], "disaggregate() (pipelinebuilder method)": [[261, "spdl.pipeline.PipelineBuilder.disaggregate", false]], "disaggregateconfig (class in spdl.pipeline.defs)": [[288, "spdl.pipeline.defs.DisaggregateConfig", false]], "distributeddeterministicsampler (class in spdl.source)": [[301, "spdl.source.DistributedDeterministicSampler", false]], "distributedrandomsampler (class in spdl.source)": [[302, "spdl.source.DistributedRandomSampler", false]], "drop_last (aggregateconfig attribute)": [[286, "spdl.pipeline.defs.AggregateConfig.drop_last", false]], "duration (benchmarkresult attribute)": [[15, "benchmark_wav.BenchmarkResult.duration", false]], "duration_seconds (benchmarkconfig attribute)": [[15, "benchmark_wav.BenchmarkConfig.duration_seconds", false], [15, "id1", false]], "duration_seconds (benchmarkresult attribute)": [[15, "benchmark_wav.BenchmarkResult.duration_seconds", false]], "elapsed (perfresult attribute)": [[18, "image_dataloading.PerfResult.elapsed", false], [318, "video_dataloading.PerfResult.elapsed", false]], "elapsed (queueperfstats attribute)": [[265, "spdl.pipeline.QueuePerfStats.elapsed", false]], "embed_shuffle() (in module spdl.source.utils)": [[314, "spdl.source.utils.embed_shuffle", false]], "encode() (audioencoder method)": [[172, "spdl.io.AudioEncoder.encode", false]], "encode() (videoencoder method)": [[198, "spdl.io.VideoEncoder.encode", false]], "encode_image() (in module spdl.io)": [[217, "spdl.io.encode_image", false]], "entrypoint() (in module image_dataloading)": [[18, "image_dataloading.entrypoint", false]], "entrypoint() (in module imagenet_classification)": [[19, "imagenet_classification.entrypoint", false]], "entrypoint() (in module multi_thread_preprocessing)": [[158, "multi_thread_preprocessing.entrypoint", false]], "entrypoint() (in module video_dataloading)": [[318, "video_dataloading.entrypoint", false]], "exp_spdl() (in module multi_thread_preprocessing)": [[158, "multi_thread_preprocessing.exp_spdl", false]], "exp_torch() (in module multi_thread_preprocessing)": [[158, "multi_thread_preprocessing.exp_torch", false]], "file_size (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.file_size", false]], "filter() (bsf method)": [[175, "spdl.io.BSF.filter", false]], "filtergraph (class in spdl.io)": [[185, "spdl.io.FilterGraph", false]], "flush() (audiodecoder method)": [[170, "spdl.io.AudioDecoder.flush", false]], "flush() (audioencoder method)": [[172, "spdl.io.AudioEncoder.flush", false]], "flush() (bsf method)": [[175, "spdl.io.BSF.flush", false]], "flush() (filtergraph method)": [[185, "spdl.io.FilterGraph.flush", false]], "flush() (muxer method)": [[191, "spdl.io.Muxer.flush", false]], "flush() (nvdecdecoder method)": [[193, "spdl.io.NvDecDecoder.flush", false]], "flush() (videodecoder method)": [[196, "spdl.io.VideoDecoder.flush", false]], "flush() (videoencoder method)": [[198, "spdl.io.VideoEncoder.flush", false]], "forward() (classification method)": [[19, "imagenet_classification.Classification.forward", false]], "forward() (modelbundle method)": [[19, "imagenet_classification.ModelBundle.forward", false]], "forward() (preprocessing method)": [[19, "imagenet_classification.Preprocessing.forward", false]], "frame_rate (videocodec property)": [[195, "spdl.io.VideoCodec.frame_rate", false]], "frame_rate (videopackets property)": [[200, "spdl.io.VideoPackets.frame_rate", false]], "frame_size (audioencoder property)": [[172, "spdl.io.AudioEncoder.frame_size", false]], "frames (class in spdl.io)": [[186, "spdl.io.Frames", false]], "free_threaded (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.free_threaded", false], [15, "benchmark_wav.BenchmarkResult.free_threaded", false]], "function_name (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.function_name", false], [15, "benchmark_wav.BenchmarkResult.function_name", false]], "get() (statsqueue method)": [[266, "spdl.pipeline.StatsQueue.get", false]], "get_abuffer_desc() (in module spdl.io)": [[218, "spdl.io.get_abuffer_desc", false]], "get_audio_filter_desc() (in module spdl.io)": [[219, "spdl.io.get_audio_filter_desc", false]], "get_buffer_desc() (in module spdl.io)": [[220, "spdl.io.get_buffer_desc", false]], "get_dataloader() (in module imagenet_classification)": [[19, "imagenet_classification.get_dataloader", false]], "get_decode_func() (in module imagenet_classification)": [[19, "imagenet_classification.get_decode_func", false]], "get_default_hook_class() (in module spdl.pipeline.config)": [[274, "spdl.pipeline.config.get_default_hook_class", false]], "get_default_profile_callback() (in module spdl.pipeline.config)": [[275, "spdl.pipeline.config.get_default_profile_callback", false]], "get_default_profile_hook() (in module spdl.pipeline.config)": [[276, "spdl.pipeline.config.get_default_profile_hook", false]], "get_default_queue_class() (in module spdl.pipeline.config)": [[277, "spdl.pipeline.config.get_default_queue_class", false]], "get_ffmpeg_filters() (in module spdl.io.utils)": [[249, "spdl.io.utils.get_ffmpeg_filters", false]], "get_ffmpeg_log_level() (in module spdl.io.utils)": [[250, "spdl.io.utils.get_ffmpeg_log_level", false]], "get_ffmpeg_versions() (in module spdl.io.utils)": [[251, "spdl.io.utils.get_ffmpeg_versions", false]], "get_filter_desc() (in module spdl.io)": [[221, "spdl.io.get_filter_desc", false]], "get_filter_desc() (in module streaming_video_processing)": [[317, "streaming_video_processing.get_filter_desc", false]], "get_frames() (filtergraph method)": [[185, "spdl.io.FilterGraph.get_frames", false]], "get_item() (pipeline method)": [[260, "spdl.pipeline.Pipeline.get_item", false]], "get_iterator() (pipeline method)": [[260, "spdl.pipeline.Pipeline.get_iterator", false]], "get_mappings() (in module spdl.source.imagenet)": [[308, "spdl.source.imagenet.get_mappings", false]], "get_mock_data() (in module data_formats)": [[16, "data_formats.get_mock_data", false]], "get_model() (in module imagenet_classification)": [[19, "imagenet_classification.get_model", false]], "get_pipeline() (in module data_formats)": [[16, "data_formats.get_pipeline", false]], "get_pipeline() (in module image_dataloading)": [[18, "image_dataloading.get_pipeline", false]], "get_pipeline() (in module video_dataloading)": [[318, "video_dataloading.get_pipeline", false]], "get_pts() (videoframes method)": [[199, "spdl.io.VideoFrames.get_pts", false]], "get_pytorch_dataloader() (in module spdl.dataloader)": [[166, "spdl.dataloader.get_pytorch_dataloader", false]], "get_timestamps() (videoframes method)": [[199, "spdl.io.VideoFrames.get_timestamps", false]], "get_timestamps() (videopackets method)": [[200, "spdl.io.VideoPackets.get_timestamps", false]], "get_video_filter_desc() (in module spdl.io)": [[222, "spdl.io.get_video_filter_desc", false]], "has_audio() (demuxer method)": [[184, "spdl.io.Demuxer.has_audio", false]], "height (imagecodec property)": [[187, "spdl.io.ImageCodec.height", false]], "height (imageframes property)": [[189, "spdl.io.ImageFrames.height", false]], "height (imagepackets property)": [[190, "spdl.io.ImagePackets.height", false]], "height (videocodec property)": [[195, "spdl.io.VideoCodec.height", false]], "height (videoframes property)": [[199, "spdl.io.VideoFrames.height", false]], "height (videopackets property)": [[200, "spdl.io.VideoPackets.height", false]], "hydra_integration": [[17, "module-hydra_integration", false]], "image_codec (demuxer property)": [[184, "spdl.io.Demuxer.image_codec", false]], "image_dataloading": [[18, "module-image_dataloading", false]], "imagecodec (class in spdl.io)": [[187, "spdl.io.ImageCodec", false]], "imagedecoder (class in spdl.io)": [[188, "spdl.io.ImageDecoder", false]], "imageframes (class in spdl.io)": [[189, "spdl.io.ImageFrames", false]], "imagenet (class in spdl.source.imagenet)": [[307, "spdl.source.imagenet.ImageNet", false]], "imagenet_classification": [[19, "module-imagenet_classification", false]], "imagepackets (class in spdl.io)": [[190, "spdl.io.ImagePackets", false]], "init() (nvdecdecoder method)": [[193, "spdl.io.NvDecDecoder.init", false]], "interval_stats_callback() (customqueue method)": [[159, "performance_analysis.CustomQueue.interval_stats_callback", false]], "interval_stats_callback() (customtaskhook method)": [[159, "performance_analysis.CustomTaskHook.interval_stats_callback", false]], "interval_stats_callback() (statsqueue method)": [[266, "spdl.pipeline.StatsQueue.interval_stats_callback", false]], "interval_stats_callback() (taskstatshook method)": [[269, "spdl.pipeline.TaskStatsHook.interval_stats_callback", false]], "is_diagnostic_mode_enabled() (in module spdl.pipeline.config)": [[278, "spdl.pipeline.config.is_diagnostic_mode_enabled", false]], "is_eof() (in module spdl.pipeline)": [[296, "spdl.pipeline.is_eof", false]], "iter_tarfile() (in module spdl.io)": [[223, "spdl.io.iter_tarfile", false]], "iter_tarfile_builtin() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.iter_tarfile_builtin", false]], "iterablewithshuffle (class in spdl.source)": [[303, "spdl.source.IterableWithShuffle", false]], "iterate_in_subprocess() (in module spdl.pipeline)": [[297, "spdl.pipeline.iterate_in_subprocess", false]], "load_audio() (in module spdl.io)": [[224, "spdl.io.load_audio", false]], "load_image() (in module spdl.io)": [[225, "spdl.io.load_image", false]], "load_image_batch() (in module spdl.io)": [[226, "spdl.io.load_image_batch", false]], "load_image_batch_nvjpeg() (in module spdl.io)": [[227, "spdl.io.load_image_batch_nvjpeg", false]], "load_npy() (in module data_formats)": [[16, "data_formats.load_npy", false]], "load_npy() (in module spdl.io)": [[228, "spdl.io.load_npy", false]], "load_npy_spdl() (in module data_formats)": [[16, "data_formats.load_npy_spdl", false]], "load_npz() (in module spdl.io)": [[229, "spdl.io.load_npz", false]], "load_sf() (in module benchmark_wav)": [[15, "benchmark_wav.load_sf", false]], "load_spdl_audio() (in module benchmark_wav)": [[15, "benchmark_wav.load_spdl_audio", false]], "load_spdl_wav() (in module benchmark_wav)": [[15, "benchmark_wav.load_spdl_wav", false]], "load_torch() (in module data_formats)": [[16, "data_formats.load_torch", false]], "load_video() (in module spdl.io)": [[230, "spdl.io.load_video", false]], "load_wav() (in module spdl.io)": [[231, "spdl.io.load_wav", false]], "localdirectory (class in spdl.source.local_directory)": [[311, "spdl.source.local_directory.LocalDirectory", false]], "main() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.main", false]], "main() (in module benchmark_wav)": [[15, "benchmark_wav.main", false]], "main() (in module data_formats)": [[16, "data_formats.main", false]], "main() (in module hydra_integration)": [[17, "hydra_integration.main", false]], "main() (in module performance_analysis)": [[159, "performance_analysis.main", false]], "main() (in module pipeline_definitions)": [[160, "pipeline_definitions.main", false]], "main() (in module pipeline_profiling)": [[161, "pipeline_profiling.main", false]], "main() (in module streaming_nvdec_decoding)": [[316, "streaming_nvdec_decoding.main", false]], "main() (in module streaming_video_processing)": [[317, "streaming_video_processing.main", false]], "merge() (in module spdl.pipeline.defs)": [[289, "spdl.pipeline.defs.Merge", false]], "mergeconfig (class in spdl.pipeline.defs)": [[290, "spdl.pipeline.defs.MergeConfig", false]], "mergeiterator (class in spdl.source.utils)": [[313, "spdl.source.utils.MergeIterator", false]], "metadata (imageframes property)": [[189, "spdl.io.ImageFrames.metadata", false]], "modelbundle (class in imagenet_classification)": [[19, "imagenet_classification.ModelBundle", false]], "module": [[14, "module-benchmark_tarfile", false], [15, "module-benchmark_wav", false], [16, "module-data_formats", false], [17, "module-hydra_integration", false], [18, "module-image_dataloading", false], [19, "module-imagenet_classification", false], [158, "module-multi_thread_preprocessing", false], [159, "module-performance_analysis", false], [160, "module-pipeline_definitions", false], [161, "module-pipeline_profiling", false], [162, "module-spdl.dataloader", false], [167, "module-spdl.io", false], [245, "module-spdl.io.utils", false], [258, "module-spdl.pipeline", false], [272, "module-spdl.pipeline.config", false], [284, "module-spdl.pipeline.defs", false], [300, "module-spdl.source", false], [306, "module-spdl.source.imagenet", false], [310, "module-spdl.source.local_directory", false], [312, "module-spdl.source.utils", false], [316, "module-streaming_nvdec_decoding", false], [317, "module-streaming_video_processing", false], [318, "module-video_dataloading", false]], "multi_thread_preprocessing": [[158, "module-multi_thread_preprocessing", false]], "multiply_by_10() (in module pipeline_definitions)": [[160, "pipeline_definitions.multiply_by_10", false]], "muxer (class in spdl.io)": [[191, "spdl.io.Muxer", false]], "name (aggregateconfig attribute)": [[286, "spdl.pipeline.defs.AggregateConfig.name", false]], "name (audiocodec property)": [[169, "spdl.io.AudioCodec.name", false]], "name (disaggregateconfig attribute)": [[288, "spdl.pipeline.defs.DisaggregateConfig.name", false]], "name (imagecodec property)": [[187, "spdl.io.ImageCodec.name", false]], "name (pipeconfig attribute)": [[292, "spdl.pipeline.defs.PipeConfig.name", false]], "name (profileresult attribute)": [[264, "spdl.pipeline.ProfileResult.name", false]], "name (videocodec property)": [[195, "spdl.io.VideoCodec.name", false]], "normalize_to_lists() (in module pipeline_definitions)": [[160, "pipeline_definitions.normalize_to_lists", false]], "npzfile (class in spdl.io)": [[192, "spdl.io.NpzFile", false]], "num_batches (perfresult attribute)": [[18, "image_dataloading.PerfResult.num_batches", false], [318, "video_dataloading.PerfResult.num_batches", false]], "num_channels (audiocodec property)": [[169, "spdl.io.AudioCodec.num_channels", false]], "num_channels (audioframes property)": [[173, "spdl.io.AudioFrames.num_channels", false]], "num_channels (audiopackets property)": [[174, "spdl.io.AudioPackets.num_channels", false]], "num_channels (benchmarkconfig attribute)": [[15, "benchmark_wav.BenchmarkConfig.num_channels", false], [15, "id2", false]], "num_failures (taskperfstats attribute)": [[268, "spdl.pipeline.TaskPerfStats.num_failures", false]], "num_files (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.num_files", false]], "num_frames (audioframes property)": [[173, "spdl.io.AudioFrames.num_frames", false]], "num_frames (perfresult attribute)": [[18, "image_dataloading.PerfResult.num_frames", false], [318, "video_dataloading.PerfResult.num_frames", false]], "num_frames (videoframes property)": [[199, "spdl.io.VideoFrames.num_frames", false]], "num_items (aggregateconfig attribute)": [[286, "spdl.pipeline.defs.AggregateConfig.num_items", false]], "num_items (queueperfstats attribute)": [[265, "spdl.pipeline.QueuePerfStats.num_items", false]], "num_iterations (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.num_iterations", false]], "num_planes (imageframes property)": [[189, "spdl.io.ImageFrames.num_planes", false]], "num_planes (videoframes property)": [[199, "spdl.io.VideoFrames.num_planes", false]], "num_tasks (taskperfstats attribute)": [[268, "spdl.pipeline.TaskPerfStats.num_tasks", false]], "num_threads (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.num_threads", false], [15, "benchmark_wav.BenchmarkResult.num_threads", false]], "nv12_to_bgr() (in module spdl.io)": [[232, "spdl.io.nv12_to_bgr", false]], "nv12_to_rgb() (in module spdl.io)": [[233, "spdl.io.nv12_to_rgb", false]], "nvdec_decoder() (in module spdl.io)": [[234, "spdl.io.nvdec_decoder", false]], "nvdecdecoder (class in spdl.io)": [[193, "spdl.io.NvDecDecoder", false]], "occupancy_rate (queueperfstats attribute)": [[265, "spdl.pipeline.QueuePerfStats.occupancy_rate", false]], "op (mergeconfig attribute)": [[290, "spdl.pipeline.defs.MergeConfig.op", false]], "op_with_contention() (in module pipeline_profiling)": [[161, "pipeline_profiling.op_with_contention", false]], "open() (muxer method)": [[191, "spdl.io.Muxer.open", false]], "packets (class in spdl.io)": [[194, "spdl.io.Packets", false]], "parse_args() (in module performance_analysis)": [[159, "performance_analysis.parse_args", false]], "parse_args() (in module pipeline_profiling)": [[161, "pipeline_profiling.parse_args", false]], "parse_args() (in module streaming_nvdec_decoding)": [[316, "streaming_nvdec_decoding.parse_args", false]], "parse_args() (in module streaming_video_processing)": [[317, "streaming_video_processing.parse_args", false]], "parse_wnid() (in module spdl.source.imagenet)": [[309, "spdl.source.imagenet.parse_wnid", false]], "performance_analysis": [[159, "module-performance_analysis", false]], "perfresult (class in image_dataloading)": [[18, "image_dataloading.PerfResult", false]], "perfresult (class in video_dataloading)": [[318, "video_dataloading.PerfResult", false]], "pipe() (in module spdl.pipeline.defs)": [[291, "spdl.pipeline.defs.Pipe", false]], "pipe() (pipelinebuilder method)": [[261, "spdl.pipeline.PipelineBuilder.pipe", false]], "pipeconfig (class in spdl.pipeline.defs)": [[292, "spdl.pipeline.defs.PipeConfig", false]], "pipeline (class in spdl.pipeline)": [[260, "spdl.pipeline.Pipeline", false]], "pipeline_configs (mergeconfig attribute)": [[290, "spdl.pipeline.defs.MergeConfig.pipeline_configs", false]], "pipeline_definitions": [[160, "module-pipeline_definitions", false]], "pipeline_profile_hook() (profilehook method)": [[263, "spdl.pipeline.ProfileHook.pipeline_profile_hook", false]], "pipeline_profiling": [[161, "module-pipeline_profiling", false]], "pipelinebuilder (class in spdl.pipeline)": [[261, "spdl.pipeline.PipelineBuilder", false]], "pipelineconfig (class in spdl.pipeline.defs)": [[293, "spdl.pipeline.defs.PipelineConfig", false]], "pipelinefailure": [[262, "spdl.pipeline.PipelineFailure", false]], "pipes (pipelineconfig attribute)": [[293, "spdl.pipeline.defs.PipelineConfig.pipes", false]], "pix_fmt (imagecodec property)": [[187, "spdl.io.ImageCodec.pix_fmt", false]], "pix_fmt (imageframes property)": [[189, "spdl.io.ImageFrames.pix_fmt", false]], "pix_fmt (imagepackets property)": [[190, "spdl.io.ImagePackets.pix_fmt", false]], "pix_fmt (videocodec property)": [[195, "spdl.io.VideoCodec.pix_fmt", false]], "pix_fmt (videoframes property)": [[199, "spdl.io.VideoFrames.pix_fmt", false]], "pix_fmt (videopackets property)": [[200, "spdl.io.VideoPackets.pix_fmt", false]], "plot_profile_results() (in module pipeline_profiling)": [[161, "pipeline_profiling.plot_profile_results", false]], "preprocessing (class in imagenet_classification)": [[19, "imagenet_classification.Preprocessing", false]], "print_profile_result() (in module pipeline_profiling)": [[161, "pipeline_profiling.print_profile_result", false]], "process() (in module streaming_video_processing)": [[317, "streaming_video_processing.process", false]], "process_tar_builtin() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.process_tar_builtin", false]], "process_tar_spdl() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.process_tar_spdl", false]], "process_tar_spdl_filelike() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.process_tar_spdl_filelike", false]], "profile_pipeline() (in module spdl.pipeline)": [[298, "spdl.pipeline.profile_pipeline", false]], "profilehook (class in spdl.pipeline)": [[263, "spdl.pipeline.ProfileHook", false]], "profileresult (class in spdl.pipeline)": [[264, "spdl.pipeline.ProfileResult", false]], "pts (imageframes property)": [[189, "spdl.io.ImageFrames.pts", false]], "put() (statsqueue method)": [[266, "spdl.pipeline.StatsQueue.put", false]], "python_version (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.python_version", false], [15, "benchmark_wav.BenchmarkResult.python_version", false]], "pytorchdataloader (class in spdl.dataloader)": [[165, "spdl.dataloader.PyTorchDataLoader", false]], "qps (benchmarkresult attribute)": [[15, "benchmark_wav.BenchmarkResult.qps", false]], "qps (queueperfstats property)": [[265, "spdl.pipeline.QueuePerfStats.qps", false]], "qps_lower_ci (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.qps_lower_ci", false]], "qps_mean (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.qps_mean", false]], "qps_upper_ci (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.qps_upper_ci", false]], "queueperfstats (class in spdl.pipeline)": [[265, "spdl.pipeline.QueuePerfStats", false]], "repeat_source() (in module spdl.source.utils)": [[315, "spdl.source.utils.repeat_source", false]], "run() (in module streaming_nvdec_decoding)": [[316, "streaming_nvdec_decoding.run", false]], "run_benchmark() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.run_benchmark", false]], "run_benchmark_suite() (in module benchmark_wav)": [[15, "benchmark_wav.run_benchmark_suite", false]], "run_dataloader() (in module multi_thread_preprocessing)": [[158, "multi_thread_preprocessing.run_dataloader", false]], "run_pipeline() (in module data_formats)": [[16, "data_formats.run_pipeline", false]], "run_pipeline_example() (in module pipeline_definitions)": [[160, "pipeline_definitions.run_pipeline_example", false]], "run_pipeline_in_subprocess() (in module spdl.pipeline)": [[299, "spdl.pipeline.run_pipeline_in_subprocess", false]], "run_profiling_example() (in module pipeline_profiling)": [[161, "pipeline_profiling.run_profiling_example", false]], "sample_aspect_ratio (imagecodec property)": [[187, "spdl.io.ImageCodec.sample_aspect_ratio", false]], "sample_aspect_ratio (videocodec property)": [[195, "spdl.io.VideoCodec.sample_aspect_ratio", false]], "sample_decode_video() (in module spdl.io)": [[235, "spdl.io.sample_decode_video", false]], "sample_fmt (audiocodec property)": [[169, "spdl.io.AudioCodec.sample_fmt", false]], "sample_fmt (audioframes property)": [[173, "spdl.io.AudioFrames.sample_fmt", false]], "sample_rate (audiocodec property)": [[169, "spdl.io.AudioCodec.sample_rate", false]], "sample_rate (audioframes property)": [[173, "spdl.io.AudioFrames.sample_rate", false]], "sample_rate (audiopackets property)": [[174, "spdl.io.AudioPackets.sample_rate", false]], "sample_rate (benchmarkconfig attribute)": [[15, "benchmark_wav.BenchmarkConfig.sample_rate", false], [15, "id3", false]], "save_image() (in module spdl.io)": [[236, "spdl.io.save_image", false]], "save_results_to_csv() (in module benchmark_tarfile)": [[14, "benchmark_tarfile.save_results_to_csv", false]], "save_results_to_csv() (in module benchmark_wav)": [[15, "benchmark_wav.save_results_to_csv", false]], "scalable_op() (in module pipeline_profiling)": [[161, "pipeline_profiling.scalable_op", false]], "scalable_op2() (in module pipeline_profiling)": [[161, "pipeline_profiling.scalable_op2", false]], "set_default_hook_class() (in module spdl.pipeline.config)": [[279, "spdl.pipeline.config.set_default_hook_class", false]], "set_default_profile_callback() (in module spdl.pipeline.config)": [[280, "spdl.pipeline.config.set_default_profile_callback", false]], "set_default_profile_hook() (in module spdl.pipeline.config)": [[281, "spdl.pipeline.config.set_default_profile_hook", false]], "set_default_queue_class() (in module spdl.pipeline.config)": [[282, "spdl.pipeline.config.set_default_queue_class", false]], "set_ffmpeg_log_level() (in module spdl.io.utils)": [[252, "spdl.io.utils.set_ffmpeg_log_level", false]], "shuffle() (distributedrandomsampler method)": [[302, "spdl.source.DistributedRandomSampler.shuffle", false]], "shuffle() (imagenet method)": [[307, "spdl.source.imagenet.ImageNet.shuffle", false]], "shuffle() (iterablewithshuffle method)": [[303, "spdl.source.IterableWithShuffle.shuffle", false]], "shuffle() (localdirectory method)": [[311, "spdl.source.local_directory.LocalDirectory.shuffle", false]], "shuffle() (sizediterablewithshuffle method)": [[305, "spdl.source.SizedIterableWithShuffle.shuffle", false]], "sink (pipelineconfig attribute)": [[293, "spdl.pipeline.defs.PipelineConfig.sink", false]], "sinkconfig (class in spdl.pipeline.defs)": [[294, "spdl.pipeline.defs.SinkConfig", false]], "sizediterable (class in spdl.source)": [[304, "spdl.source.SizedIterable", false]], "sizediterablewithshuffle (class in spdl.source)": [[305, "spdl.source.SizedIterableWithShuffle", false]], "source (sourceconfig attribute)": [[295, "spdl.pipeline.defs.SourceConfig.source", false]], "source() (in module image_dataloading)": [[18, "image_dataloading.source", false]], "source() (in module video_dataloading)": [[318, "video_dataloading.source", false]], "sourceconfig (class in spdl.pipeline.defs)": [[295, "spdl.pipeline.defs.SourceConfig", false]], "spdl.dataloader": [[162, "module-spdl.dataloader", false]], "spdl.io": [[167, "module-spdl.io", false]], "spdl.io.utils": [[245, "module-spdl.io.utils", false]], "spdl.pipeline": [[258, "module-spdl.pipeline", false]], "spdl.pipeline.config": [[272, "module-spdl.pipeline.config", false]], "spdl.pipeline.defs": [[284, "module-spdl.pipeline.defs", false]], "spdl.source": [[300, "module-spdl.source", false]], "spdl.source.imagenet": [[306, "module-spdl.source.imagenet", false]], "spdl.source.local_directory": [[310, "module-spdl.source.local_directory", false]], "spdl.source.utils": [[312, "module-spdl.source.utils", false]], "spdl::core::anyframes (c++ type)": [[138, "_CPPv4N4spdl4core9AnyFramesE", false]], "spdl::core::anypackets (c++ type)": [[150, "_CPPv4N4spdl4core10AnyPacketsE", false]], "spdl::core::audiocodec (c++ type)": [[123, "_CPPv4N4spdl4core10AudioCodecE", false]], "spdl::core::audioencodeconfig (c++ type)": [[152, "_CPPv4N4spdl4core17AudioEncodeConfigE", false]], "spdl::core::audioencoder (c++ type)": [[131, "_CPPv4N4spdl4core12AudioEncoderE", false]], "spdl::core::audioencoderptr (c++ type)": [[128, "_CPPv4N4spdl4core15AudioEncoderPtrE", false]], "spdl::core::audioframes (c++ type)": [[136, "_CPPv4N4spdl4core11AudioFramesE", false]], "spdl::core::audioframesptr (c++ type)": [[137, "_CPPv4N4spdl4core14AudioFramesPtrE", false]], "spdl::core::audiopackets (c++ type)": [[146, "_CPPv4N4spdl4core12AudioPacketsE", false]], "spdl::core::audiopacketsptr (c++ type)": [[149, "_CPPv4N4spdl4core15AudioPacketsPtrE", false]], "spdl::core::bsf (c++ class)": [[20, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", false]], "spdl::core::bsf::bsf (c++ function)": [[20, "_CPPv4N4spdl4core3BSF3BSFERK3BSF", false], [20, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", false], [20, "_CPPv4N4spdl4core3BSF3BSFERR3BSF", false]], "spdl::core::bsf::filter (c++ function)": [[20, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", false]], "spdl::core::bsf::flush (c++ function)": [[20, "_CPPv4N4spdl4core3BSF5flushEv", false]], "spdl::core::bsf::get_codec (c++ function)": [[20, "_CPPv4NK4spdl4core3BSF9get_codecEv", false]], "spdl::core::bsf::operator= (c++ function)": [[20, "_CPPv4N4spdl4core3BSFaSERK3BSF", false], [20, "_CPPv4N4spdl4core3BSFaSERR3BSF", false]], "spdl::core::bsf::~bsf (c++ function)": [[20, "_CPPv4N4spdl4core3BSFD0Ev", false]], "spdl::core::bytesadaptor (c++ struct)": [[107, "_CPPv4N4spdl4core12BytesAdaptorE", false]], "spdl::core::bytesadaptor::get_interface (c++ function)": [[107, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", false]], "spdl::core::clone (c++ function)": [[69, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", false]], "spdl::core::codec (c++ class)": [[22, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", false]], "spdl::core::codec::codec (c++ function)": [[22, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", false], [22, "_CPPv4N4spdl4core5Codec5CodecERK5CodecI5mediaE", false], [22, "_CPPv4N4spdl4core5Codec5CodecERR5CodecI5mediaE", false], [22, "_CPPv4N4spdl4core5Codec5CodecEv", false]], "spdl::core::codec::get_bit_rate (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec12get_bit_rateEv", false]], "spdl::core::codec::get_bits_per_sample (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec19get_bits_per_sampleEv", false]], "spdl::core::codec::get_channel_layout (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec18get_channel_layoutEv", false]], "spdl::core::codec::get_codec_id (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec12get_codec_idEv", false]], "spdl::core::codec::get_frame_rate (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec14get_frame_rateEv", false]], "spdl::core::codec::get_height (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec10get_heightEv", false]], "spdl::core::codec::get_name (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec8get_nameEv", false]], "spdl::core::codec::get_num_channels (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec16get_num_channelsEv", false]], "spdl::core::codec::get_parameters (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec14get_parametersEv", false]], "spdl::core::codec::get_pix_fmt (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec11get_pix_fmtEv", false]], "spdl::core::codec::get_sample_aspect_ratio (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec23get_sample_aspect_ratioEv", false]], "spdl::core::codec::get_sample_fmt (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec14get_sample_fmtEv", false]], "spdl::core::codec::get_sample_rate (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec15get_sample_rateEv", false]], "spdl::core::codec::get_time_base (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec13get_time_baseEv", false]], "spdl::core::codec::get_width (c++ function)": [[22, "_CPPv4NK4spdl4core5Codec9get_widthEv", false]], "spdl::core::codec::operator= (c++ function)": [[22, "_CPPv4N4spdl4core5CodecaSERK5CodecI5mediaE", false], [22, "_CPPv4N4spdl4core5CodecaSERR5CodecI5mediaE", false]], "spdl::core::codec::~codec (c++ function)": [[22, "_CPPv4N4spdl4core5CodecD0Ev", false]], "spdl::core::codecid (c++ enum)": [[42, "_CPPv4N4spdl4core7CodecIDE", false]], "spdl::core::codecid::av1 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID3AV1E", false]], "spdl::core::codecid::h264 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID4H264E", false]], "spdl::core::codecid::hevc (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID4HEVCE", false]], "spdl::core::codecid::mjpeg (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID5MJPEGE", false]], "spdl::core::codecid::mpeg1video (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID10MPEG1VIDEOE", false]], "spdl::core::codecid::mpeg2video (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID10MPEG2VIDEOE", false]], "spdl::core::codecid::mpeg4 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID5MPEG4E", false]], "spdl::core::codecid::vc1 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID3VC1E", false]], "spdl::core::codecid::vp8 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID3VP8E", false]], "spdl::core::codecid::vp9 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID3VP9E", false]], "spdl::core::codecid::wmv3 (c++ enumerator)": [[42, "_CPPv4N4spdl4core7CodecID4WMV3E", false]], "spdl::core::convert_frames (c++ function)": [[63, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", false], [65, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", false]], "spdl::core::cpu_buffer (c++ function)": [[61, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", false]], "spdl::core::cpubuffer (c++ struct)": [[108, "_CPPv4N4spdl4core9CPUBufferE", false]], "spdl::core::cpubuffer::data (c++ function)": [[108, "_CPPv4N4spdl4core9CPUBuffer4dataEv", false]], "spdl::core::cpubuffer::depth (c++ member)": [[108, "_CPPv4N4spdl4core9CPUBuffer5depthE", false]], "spdl::core::cpubuffer::elem_class (c++ member)": [[108, "_CPPv4N4spdl4core9CPUBuffer10elem_classE", false]], "spdl::core::cpubuffer::shape (c++ member)": [[108, "_CPPv4N4spdl4core9CPUBuffer5shapeE", false]], "spdl::core::cpubuffer::storage (c++ member)": [[108, "_CPPv4N4spdl4core9CPUBuffer7storageE", false]], "spdl::core::cpubufferptr (c++ type)": [[121, "_CPPv4N4spdl4core12CPUBufferPtrE", false]], "spdl::core::cpustorage (c++ class)": [[21, "_CPPv4N4spdl4core10CPUStorageE", false]], "spdl::core::cpustorage::cpustorage (c++ function)": [[21, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", false], [21, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERK10CPUStorage", false], [21, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERR10CPUStorage", false], [21, "_CPPv4N4spdl4core10CPUStorage10CPUStorageEv", false]], "spdl::core::cpustorage::data (c++ function)": [[21, "_CPPv4NK4spdl4core10CPUStorage4dataEv", false]], "spdl::core::cpustorage::is_pinned (c++ function)": [[21, "_CPPv4NK4spdl4core10CPUStorage9is_pinnedEv", false]], "spdl::core::cpustorage::operator= (c++ function)": [[21, "_CPPv4N4spdl4core10CPUStorageaSERK10CPUStorage", false], [21, "_CPPv4N4spdl4core10CPUStorageaSERR10CPUStorage", false]], "spdl::core::cpustorage::size (c++ member)": [[21, "_CPPv4N4spdl4core10CPUStorage4sizeE", false]], "spdl::core::cpustorage::~cpustorage (c++ function)": [[21, "_CPPv4N4spdl4core10CPUStorageD0Ev", false]], "spdl::core::create_reference_audio_frame (c++ function)": [[62, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", false]], "spdl::core::create_reference_video_frame (c++ function)": [[64, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", false]], "spdl::core::datainterface (c++ struct)": [[109, "_CPPv4N4spdl4core13DataInterfaceE", false]], "spdl::core::datainterface::get_fmt_ctx (c++ function)": [[109, "_CPPv4N4spdl4core13DataInterface11get_fmt_ctxEv", false]], "spdl::core::datainterface::~datainterface (c++ function)": [[109, "_CPPv4N4spdl4core13DataInterfaceD0Ev", false]], "spdl::core::datainterfaceptr (c++ type)": [[119, "_CPPv4N4spdl4core16DataInterfacePtrE", false]], "spdl::core::decodeconfig (c++ struct)": [[110, "_CPPv4N4spdl4core12DecodeConfigE", false]], "spdl::core::decodeconfig::decoder (c++ member)": [[110, "_CPPv4N4spdl4core12DecodeConfig7decoderE", false]], "spdl::core::decodeconfig::decoder_options (c++ member)": [[110, "_CPPv4N4spdl4core12DecodeConfig15decoder_optionsE", false]], "spdl::core::decoder (c++ class)": [[23, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", false]], "spdl::core::decoder::decode (c++ function)": [[23, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", false]], "spdl::core::decoder::decode_and_flush (c++ function)": [[23, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", false]], "spdl::core::decoder::decoder (c++ function)": [[23, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", false], [23, "_CPPv4N4spdl4core7Decoder7DecoderERK7Decoder", false], [23, "_CPPv4N4spdl4core7Decoder7DecoderERR7Decoder", false]], "spdl::core::decoder::flush (c++ function)": [[23, "_CPPv4N4spdl4core7Decoder5flushEv", false]], "spdl::core::decoder::operator= (c++ function)": [[23, "_CPPv4N4spdl4core7DecoderaSERK7Decoder", false], [23, "_CPPv4N4spdl4core7DecoderaSERR7Decoder", false]], "spdl::core::decoder::~decoder (c++ function)": [[23, "_CPPv4N4spdl4core7DecoderD0Ev", false]], "spdl::core::decoderptr (c++ type)": [[125, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", false]], "spdl::core::demuxconfig (c++ struct)": [[111, "_CPPv4N4spdl4core11DemuxConfigE", false]], "spdl::core::demuxconfig::buffer_size (c++ member)": [[111, "_CPPv4N4spdl4core11DemuxConfig11buffer_sizeE", false]], "spdl::core::demuxconfig::format (c++ member)": [[111, "_CPPv4N4spdl4core11DemuxConfig6formatE", false]], "spdl::core::demuxconfig::format_options (c++ member)": [[111, "_CPPv4N4spdl4core11DemuxConfig14format_optionsE", false]], "spdl::core::demuxer (c++ class)": [[24, "_CPPv4N4spdl4core7DemuxerE", false]], "spdl::core::demuxer::demux_window (c++ function)": [[24, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", false]], "spdl::core::demuxer::demuxer (c++ function)": [[24, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", false]], "spdl::core::demuxer::get_default_codec (c++ function)": [[24, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", false]], "spdl::core::demuxer::get_default_stream_index (c++ function)": [[24, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", false]], "spdl::core::demuxer::has_audio (c++ function)": [[24, "_CPPv4NK4spdl4core7Demuxer9has_audioEv", false]], "spdl::core::demuxer::streaming_demux (c++ function)": [[24, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", false]], "spdl::core::demuxer::~demuxer (c++ function)": [[24, "_CPPv4N4spdl4core7DemuxerD0Ev", false]], "spdl::core::demuxerptr (c++ type)": [[127, "_CPPv4N4spdl4core10DemuxerPtrE", false]], "spdl::core::detail::decoderimpl (c++ class)": [[33, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", false]], "spdl::core::detail::encoderimpl (c++ class)": [[34, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", false]], "spdl::core::elemclass (c++ enum)": [[44, "_CPPv4N4spdl4core9ElemClassE", false]], "spdl::core::elemclass::float (c++ enumerator)": [[44, "_CPPv4N4spdl4core9ElemClass5FloatE", false]], "spdl::core::elemclass::int (c++ enumerator)": [[44, "_CPPv4N4spdl4core9ElemClass3IntE", false]], "spdl::core::elemclass::uint (c++ enumerator)": [[44, "_CPPv4N4spdl4core9ElemClass4UIntE", false]], "spdl::core::encodeconfigbase (c++ struct)": [[112, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", false]], "spdl::core::encoder (c++ class)": [[25, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", false]], "spdl::core::encoder::encode (c++ function)": [[25, "_CPPv4N4spdl4core7Encoder6encodeERRK9FramesPtrI5mediaE", false]], "spdl::core::encoder::encoder (c++ function)": [[25, "_CPPv4N4spdl4core7Encoder7EncoderEPN6detail11EncoderImplI5mediaEE", false], [25, "_CPPv4N4spdl4core7Encoder7EncoderERK7EncoderI5mediaE", false], [25, "_CPPv4N4spdl4core7Encoder7EncoderERR7EncoderI5mediaE", false]], "spdl::core::encoder::flush (c++ function)": [[25, "_CPPv4N4spdl4core7Encoder5flushEv", false]], "spdl::core::encoder::get_frame_size (c++ function)": [[25, "_CPPv4NK4spdl4core7Encoder14get_frame_sizeEv", false]], "spdl::core::encoder::operator= (c++ function)": [[25, "_CPPv4N4spdl4core7EncoderaSERK7EncoderI5mediaE", false], [25, "_CPPv4N4spdl4core7EncoderaSERR7EncoderI5mediaE", false]], "spdl::core::encoder::~encoder (c++ function)": [[25, "_CPPv4N4spdl4core7EncoderD0Ev", false]], "spdl::core::encoderptr (c++ type)": [[132, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", false]], "spdl::core::extract_packets_at_indices (c++ function)": [[71, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", false]], "spdl::core::filtergraph (c++ class)": [[26, "_CPPv4N4spdl4core11FilterGraphE", false]], "spdl::core::filtergraph::add_frames (c++ function)": [[26, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", false]], "spdl::core::filtergraph::dump (c++ function)": [[26, "_CPPv4NK4spdl4core11FilterGraph4dumpEv", false]], "spdl::core::filtergraph::filtergraph (c++ function)": [[26, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERK11FilterGraph", false], [26, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", false], [26, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERR11FilterGraph", false]], "spdl::core::filtergraph::flush (c++ function)": [[26, "_CPPv4N4spdl4core11FilterGraph5flushEv", false]], "spdl::core::filtergraph::get_frames (c++ function)": [[26, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", false]], "spdl::core::filtergraph::operator= (c++ function)": [[26, "_CPPv4N4spdl4core11FilterGraphaSERK11FilterGraph", false], [26, "_CPPv4N4spdl4core11FilterGraphaSERR11FilterGraph", false]], "spdl::core::filtergraph::~filtergraph (c++ function)": [[26, "_CPPv4N4spdl4core11FilterGraphD0Ev", false]], "spdl::core::filtergraphptr (c++ type)": [[133, "_CPPv4N4spdl4core14FilterGraphPtrE", false]], "spdl::core::frames (c++ class)": [[27, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", false]], "spdl::core::framesptr (c++ type)": [[140, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", false]], "spdl::core::generator (c++ struct)": [[113, "_CPPv4I0EN4spdl4core9GeneratorE", false]], "spdl::core::generator::generator (c++ function)": [[113, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", false], [113, "_CPPv4N4spdl4core9Generator9GeneratorERK9Generator", false], [113, "_CPPv4N4spdl4core9Generator9GeneratorERR9Generator", false]], "spdl::core::generator::h_ (c++ member)": [[113, "_CPPv4N4spdl4core9Generator2h_E", false]], "spdl::core::generator::handle_type (c++ type)": [[113, "_CPPv4N4spdl4core9Generator11handle_typeE", false]], "spdl::core::generator::operator bool (c++ function)": [[113, "_CPPv4N4spdl4core9GeneratorcvbEv", false]], "spdl::core::generator::operator() (c++ function)": [[113, "_CPPv4N4spdl4core9GeneratorclEv", false]], "spdl::core::generator::operator= (c++ function)": [[113, "_CPPv4N4spdl4core9GeneratoraSERK9Generator", false], [113, "_CPPv4N4spdl4core9GeneratoraSERR9Generator", false]], "spdl::core::generator::promise_type (c++ struct)": [[113, "_CPPv4N4spdl4core9Generator12promise_typeE", false], [114, "_CPPv4N4spdl4core9Generator12promise_typeE", false]], "spdl::core::generator::promise_type::exception (c++ member)": [[113, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", false], [114, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", false]], "spdl::core::generator::promise_type::final_suspend (c++ function)": [[113, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", false], [114, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", false]], "spdl::core::generator::promise_type::get_return_object (c++ function)": [[113, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", false], [114, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", false]], "spdl::core::generator::promise_type::initial_suspend (c++ function)": [[113, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", false], [114, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", false]], "spdl::core::generator::promise_type::return_void (c++ function)": [[113, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", false], [114, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", false]], "spdl::core::generator::promise_type::unhandled_exception (c++ function)": [[113, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", false], [114, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", false]], "spdl::core::generator::promise_type::value (c++ member)": [[113, "_CPPv4N4spdl4core9Generator12promise_type5valueE", false], [114, "_CPPv4N4spdl4core9Generator12promise_type5valueE", false]], "spdl::core::generator::promise_type::yield_value (c++ function)": [[113, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", false], [114, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", false]], "spdl::core::generator::~generator (c++ function)": [[113, "_CPPv4N4spdl4core9GeneratorD0Ev", false]], "spdl::core::get_ffmpeg_filters (c++ function)": [[72, "_CPPv4N4spdl4core18get_ffmpeg_filtersEv", false]], "spdl::core::get_ffmpeg_log_level (c++ function)": [[79, "_CPPv4N4spdl4core20get_ffmpeg_log_levelEv", false]], "spdl::core::get_ffmpeg_versions (c++ function)": [[73, "_CPPv4N4spdl4core19get_ffmpeg_versionsEv", false]], "spdl::core::get_timestamps (c++ function)": [[70, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", false]], "spdl::core::imagecodec (c++ type)": [[122, "_CPPv4N4spdl4core10ImageCodecE", false]], "spdl::core::imageframes (c++ type)": [[135, "_CPPv4N4spdl4core11ImageFramesE", false]], "spdl::core::imageframesptr (c++ type)": [[134, "_CPPv4N4spdl4core14ImageFramesPtrE", false]], "spdl::core::imagepackets (c++ type)": [[151, "_CPPv4N4spdl4core12ImagePacketsE", false]], "spdl::core::imagepacketsptr (c++ type)": [[145, "_CPPv4N4spdl4core15ImagePacketsPtrE", false]], "spdl::core::init_glog (c++ function)": [[81, "_CPPv4N4spdl4core9init_glogEPKc", false]], "spdl::core::init_tracing (c++ function)": [[78, "_CPPv4N4spdl4core12init_tracingEv", false]], "spdl::core::internalerror (c++ class)": [[28, "_CPPv4N4spdl4core13InternalErrorE", false]], "spdl::core::make_demuxer (c++ function)": [[66, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", false], [67, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", false]], "spdl::core::make_filter_graph (c++ function)": [[68, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", false]], "spdl::core::mediatype (c++ enum)": [[43, "_CPPv4N4spdl4core9MediaTypeE", false]], "spdl::core::mediatype::audio (c++ enumerator)": [[43, "_CPPv4N4spdl4core9MediaType5AudioE", false]], "spdl::core::mediatype::image (c++ enumerator)": [[43, "_CPPv4N4spdl4core9MediaType5ImageE", false]], "spdl::core::mediatype::video (c++ enumerator)": [[43, "_CPPv4N4spdl4core9MediaType5VideoE", false]], "spdl::core::muxer (c++ class)": [[29, "_CPPv4N4spdl4core5MuxerE", false]], "spdl::core::muxer::add_encode_stream (c++ function)": [[29, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", false]], "spdl::core::muxer::add_remux_stream (c++ function)": [[29, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", false]], "spdl::core::muxer::close (c++ function)": [[29, "_CPPv4N4spdl4core5Muxer5closeEv", false]], "spdl::core::muxer::flush (c++ function)": [[29, "_CPPv4N4spdl4core5Muxer5flushEv", false]], "spdl::core::muxer::muxer (c++ function)": [[29, "_CPPv4N4spdl4core5Muxer5MuxerERK5Muxer", false], [29, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", false], [29, "_CPPv4N4spdl4core5Muxer5MuxerERR5Muxer", false]], "spdl::core::muxer::open (c++ function)": [[29, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", false]], "spdl::core::muxer::operator= (c++ function)": [[29, "_CPPv4N4spdl4core5MuxeraSERK5Muxer", false], [29, "_CPPv4N4spdl4core5MuxeraSERR5Muxer", false]], "spdl::core::muxer::write (c++ function)": [[29, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", false]], "spdl::core::muxer::~muxer (c++ function)": [[29, "_CPPv4N4spdl4core5MuxerD0Ev", false]], "spdl::core::muxerptr (c++ type)": [[142, "_CPPv4N4spdl4core8MuxerPtrE", false]], "spdl::core::optiondict (c++ type)": [[156, "_CPPv4N4spdl4core10OptionDictE", false]], "spdl::core::packets (c++ struct)": [[115, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", false]], "spdl::core::packets::codec (c++ member)": [[115, "_CPPv4N4spdl4core7Packets5codecE", false]], "spdl::core::packets::id (c++ member)": [[115, "_CPPv4N4spdl4core7Packets2idE", false]], "spdl::core::packets::operator= (c++ function)": [[115, "_CPPv4N4spdl4core7PacketsaSERK7PacketsI5mediaE", false], [115, "_CPPv4N4spdl4core7PacketsaSERR7PacketsI5mediaE", false]], "spdl::core::packets::packets (c++ function)": [[115, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", false], [115, "_CPPv4N4spdl4core7Packets7PacketsERK7PacketsI5mediaE", false], [115, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", false], [115, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", false], [115, "_CPPv4N4spdl4core7Packets7PacketsERR7PacketsI5mediaE", false], [115, "_CPPv4N4spdl4core7Packets7PacketsEv", false]], "spdl::core::packets::pkts (c++ member)": [[115, "_CPPv4N4spdl4core7Packets4pktsE", false]], "spdl::core::packets::src (c++ member)": [[115, "_CPPv4N4spdl4core7Packets3srcE", false]], "spdl::core::packets::stream_index (c++ member)": [[115, "_CPPv4N4spdl4core7Packets12stream_indexE", false]], "spdl::core::packets::time_base (c++ member)": [[115, "_CPPv4N4spdl4core7Packets9time_baseE", false]], "spdl::core::packets::timestamp (c++ member)": [[115, "_CPPv4N4spdl4core7Packets9timestampE", false]], "spdl::core::packets::~packets (c++ function)": [[115, "_CPPv4N4spdl4core7PacketsD0Ev", false]], "spdl::core::packetseries (c++ class)": [[30, "_CPPv4N4spdl4core12PacketSeriesE", false]], "spdl::core::packetseries::get_packets (c++ function)": [[30, "_CPPv4NK4spdl4core12PacketSeries11get_packetsEv", false]], "spdl::core::packetseries::iter_data (c++ function)": [[30, "_CPPv4NK4spdl4core12PacketSeries9iter_dataEv", false]], "spdl::core::packetseries::operator= (c++ function)": [[30, "_CPPv4N4spdl4core12PacketSeriesaSERK12PacketSeries", false], [30, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", false]], "spdl::core::packetseries::packetseries (c++ function)": [[30, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERK12PacketSeries", false], [30, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", false], [30, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesEv", false]], "spdl::core::packetseries::push (c++ function)": [[30, "_CPPv4N4spdl4core12PacketSeries4pushEP8AVPacket", false]], "spdl::core::packetseries::~packetseries (c++ function)": [[30, "_CPPv4N4spdl4core12PacketSeriesD0Ev", false]], "spdl::core::packetseriesptr (c++ type)": [[143, "_CPPv4N4spdl4core15PacketSeriesPtrE", false]], "spdl::core::packetsptr (c++ type)": [[148, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", false]], "spdl::core::rational (c++ type)": [[155, "_CPPv4N4spdl4core8RationalE", false]], "spdl::core::rawpacketdata (c++ struct)": [[116, "_CPPv4N4spdl4core13RawPacketDataE", false]], "spdl::core::rawpacketdata::data (c++ member)": [[116, "_CPPv4N4spdl4core13RawPacketData4dataE", false]], "spdl::core::rawpacketdata::pts (c++ member)": [[116, "_CPPv4N4spdl4core13RawPacketData3ptsE", false]], "spdl::core::rawpacketdata::size (c++ member)": [[116, "_CPPv4N4spdl4core13RawPacketData4sizeE", false]], "spdl::core::register_avdevices (c++ function)": [[77, "_CPPv4N4spdl4core18register_avdevicesEv", false]], "spdl::core::set_ffmpeg_log_level (c++ function)": [[76, "_CPPv4N4spdl4core20set_ffmpeg_log_levelEi", false]], "spdl::core::sourceadaptor (c++ struct)": [[117, "_CPPv4N4spdl4core13SourceAdaptorE", false]], "spdl::core::sourceadaptor::get_interface (c++ function)": [[117, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", false]], "spdl::core::sourceadaptor::~sourceadaptor (c++ function)": [[117, "_CPPv4N4spdl4core13SourceAdaptorD0Ev", false]], "spdl::core::sourceadaptorptr (c++ type)": [[120, "_CPPv4N4spdl4core16SourceAdaptorPtrE", false]], "spdl::core::storage (c++ struct)": [[118, "_CPPv4N4spdl4core7StorageE", false]], "spdl::core::storage::data (c++ function)": [[118, "_CPPv4NK4spdl4core7Storage4dataEv", false]], "spdl::core::storage::~storage (c++ function)": [[118, "_CPPv4N4spdl4core7StorageD0Ev", false]], "spdl::core::streamingdemuxer (c++ class)": [[31, "_CPPv4N4spdl4core16StreamingDemuxerE", false]], "spdl::core::streamingdemuxer::done (c++ function)": [[31, "_CPPv4N4spdl4core16StreamingDemuxer4doneEv", false]], "spdl::core::streamingdemuxer::next (c++ function)": [[31, "_CPPv4N4spdl4core16StreamingDemuxer4nextEv", false]], "spdl::core::streamingdemuxer::streamingdemuxer (c++ function)": [[31, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", false]], "spdl::core::streamingdemuxerptr (c++ type)": [[126, "_CPPv4N4spdl4core19StreamingDemuxerPtrE", false]], "spdl::core::trace_counter (c++ function)": [[74, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", false]], "spdl::core::trace_event_begin (c++ function)": [[80, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", false]], "spdl::core::trace_event_end (c++ function)": [[75, "_CPPv4N4spdl4core15trace_event_endEv", false]], "spdl::core::tracingsession (c++ class)": [[32, "_CPPv4N4spdl4core14TracingSessionE", false]], "spdl::core::tracingsession::config (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", false]], "spdl::core::tracingsession::init (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSession4initEv", false]], "spdl::core::tracingsession::operator= (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSessionaSERK14TracingSession", false], [32, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", false]], "spdl::core::tracingsession::start (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSession5startEii", false]], "spdl::core::tracingsession::stop (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSession4stopEv", false]], "spdl::core::tracingsession::tracingsession (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", false], [32, "_CPPv4N4spdl4core14TracingSession14TracingSessionERK14TracingSession", false], [32, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", false]], "spdl::core::tracingsession::~tracingsession (c++ function)": [[32, "_CPPv4N4spdl4core14TracingSessionD0Ev", false]], "spdl::core::videocodec (c++ type)": [[124, "_CPPv4N4spdl4core10VideoCodecE", false]], "spdl::core::videoencodeconfig (c++ type)": [[154, "_CPPv4N4spdl4core17VideoEncodeConfigE", false]], "spdl::core::videoencoder (c++ type)": [[129, "_CPPv4N4spdl4core12VideoEncoderE", false]], "spdl::core::videoencoderptr (c++ type)": [[130, "_CPPv4N4spdl4core15VideoEncoderPtrE", false]], "spdl::core::videoframes (c++ type)": [[141, "_CPPv4N4spdl4core11VideoFramesE", false]], "spdl::core::videoframesptr (c++ type)": [[139, "_CPPv4N4spdl4core14VideoFramesPtrE", false]], "spdl::core::videopackets (c++ type)": [[144, "_CPPv4N4spdl4core12VideoPacketsE", false]], "spdl::core::videopacketsptr (c++ type)": [[147, "_CPPv4N4spdl4core15VideoPacketsPtrE", false]], "spdl_default_buffer_size (c macro)": [[38, "c.SPDL_DEFAULT_BUFFER_SIZE", false]], "square() (in module pipeline_definitions)": [[160, "pipeline_definitions.square", false]], "src (pipelineconfig attribute)": [[293, "spdl.pipeline.defs.PipelineConfig.src", false]], "stage_hook() (asyncqueue method)": [[259, "spdl.pipeline.AsyncQueue.stage_hook", false]], "stage_hook() (statsqueue method)": [[266, "spdl.pipeline.StatsQueue.stage_hook", false]], "stage_hook() (taskhook method)": [[267, "spdl.pipeline.TaskHook.stage_hook", false]], "stage_hook() (taskstatshook method)": [[269, "spdl.pipeline.TaskStatsHook.stage_hook", false]], "stage_profile_hook() (profilehook method)": [[263, "spdl.pipeline.ProfileHook.stage_profile_hook", false]], "start() (pipeline method)": [[260, "spdl.pipeline.Pipeline.start", false]], "stats (profileresult attribute)": [[264, "spdl.pipeline.ProfileResult.stats", false]], "statsqueue (class in spdl.pipeline)": [[266, "spdl.pipeline.StatsQueue", false]], "stop() (pipeline method)": [[260, "spdl.pipeline.Pipeline.stop", false]], "streaming_demux() (demuxer method)": [[184, "spdl.io.Demuxer.streaming_demux", false]], "streaming_load_video_nvdec() (in module spdl.io)": [[237, "spdl.io.streaming_load_video_nvdec", false]], "streaming_nvdec_decoding": [[316, "module-streaming_nvdec_decoding", false]], "streaming_video_processing": [[317, "module-streaming_video_processing", false]], "tar_size (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.tar_size", false]], "task_hook() (taskhook method)": [[267, "spdl.pipeline.TaskHook.task_hook", false]], "task_hook() (taskstatshook method)": [[269, "spdl.pipeline.TaskStatsHook.task_hook", false]], "taskhook (class in spdl.pipeline)": [[267, "spdl.pipeline.TaskHook", false]], "taskperfstats (class in spdl.pipeline)": [[268, "spdl.pipeline.TaskPerfStats", false]], "taskstatshook (class in spdl.pipeline)": [[269, "spdl.pipeline.TaskStatsHook", false]], "time_base (audiocodec property)": [[169, "spdl.io.AudioCodec.time_base", false]], "time_base (imagecodec property)": [[187, "spdl.io.ImageCodec.time_base", false]], "time_base (videocodec property)": [[195, "spdl.io.VideoCodec.time_base", false]], "time_base (videoframes property)": [[199, "spdl.io.VideoFrames.time_base", false]], "timestamp (audiopackets property)": [[174, "spdl.io.AudioPackets.timestamp", false]], "timestamp (videopackets property)": [[200, "spdl.io.VideoPackets.timestamp", false]], "to_jax() (in module spdl.io)": [[238, "spdl.io.to_jax", false]], "to_numba() (in module spdl.io)": [[239, "spdl.io.to_numba", false]], "to_numpy() (in module spdl.io)": [[240, "spdl.io.to_numpy", false]], "to_torch() (in module spdl.io)": [[241, "spdl.io.to_torch", false]], "torch_cuda_warmup() (in module streaming_nvdec_decoding)": [[316, "streaming_nvdec_decoding.torch_cuda_warmup", false]], "total_files_processed (benchmarkresult attribute)": [[14, "benchmark_tarfile.BenchmarkResult.total_files_processed", false]], "trace_counter() (in module spdl.io.utils)": [[253, "spdl.io.utils.trace_counter", false]], "trace_event() (in module spdl.io.utils)": [[254, "spdl.io.utils.trace_event", false]], "trace_gc() (in module spdl.io.utils)": [[255, "spdl.io.utils.trace_gc", false]], "tracing() (in module spdl.io.utils)": [[256, "spdl.io.utils.tracing", false]], "transfer_buffer() (in module spdl.io)": [[242, "spdl.io.transfer_buffer", false]], "transfer_buffer_cpu() (in module spdl.io)": [[243, "spdl.io.transfer_buffer_cpu", false]], "transfer_tensor() (in module spdl.io)": [[244, "spdl.io.transfer_tensor", false]], "video_codec (demuxer property)": [[184, "spdl.io.Demuxer.video_codec", false]], "video_dataloading": [[318, "module-video_dataloading", false]], "video_encode_config() (in module spdl.io)": [[257, "spdl.io.video_encode_config", false]], "video_stream_index (demuxer property)": [[184, "spdl.io.Demuxer.video_stream_index", false]], "videocodec (class in spdl.io)": [[195, "spdl.io.VideoCodec", false]], "videodecoder (class in spdl.io)": [[196, "spdl.io.VideoDecoder", false]], "videoencodeconfig (class in spdl.io)": [[197, "spdl.io.VideoEncodeConfig", false]], "videoencoder (class in spdl.io)": [[198, "spdl.io.VideoEncoder", false]], "videoframes (class in spdl.io)": [[199, "spdl.io.VideoFrames", false]], "videopackets (class in spdl.io)": [[200, "spdl.io.VideoPackets", false]], "width (imagecodec property)": [[187, "spdl.io.ImageCodec.width", false]], "width (imageframes property)": [[189, "spdl.io.ImageFrames.width", false]], "width (imagepackets property)": [[190, "spdl.io.ImagePackets.width", false]], "width (videocodec property)": [[195, "spdl.io.VideoCodec.width", false]], "width (videoframes property)": [[199, "spdl.io.VideoFrames.width", false]], "width (videopackets property)": [[200, "spdl.io.VideoPackets.width", false]], "worker_entrypoint() (in module image_dataloading)": [[18, "image_dataloading.worker_entrypoint", false]], "worker_entrypoint() (in module video_dataloading)": [[318, "video_dataloading.worker_entrypoint", false]], "write() (muxer method)": [[191, "spdl.io.Muxer.write", false]]}, "objects": {"": [[38, 0, 1, "c.SPDL_DEFAULT_BUFFER_SIZE", "SPDL_DEFAULT_BUFFER_SIZE"], [36, 0, 1, "c._IS_AUDIO", "_IS_AUDIO"], [37, 0, 1, "c._IS_IMAGE", "_IS_IMAGE"], [35, 0, 1, "c._IS_VIDEO", "_IS_VIDEO"], [106, 1, 1, "_CPPv410AVRational", "AVRational"], [153, 2, 1, "_CPPv410AVRational", "AVRational"], [106, 3, 1, "_CPPv4N10AVRational3denE", "AVRational::den"], [106, 3, 1, "_CPPv4N10AVRational3numE", "AVRational::num"], [138, 2, 1, "_CPPv4N4spdl4core9AnyFramesE", "spdl::core::AnyFrames"], [150, 2, 1, "_CPPv4N4spdl4core10AnyPacketsE", "spdl::core::AnyPackets"], [123, 2, 1, "_CPPv4N4spdl4core10AudioCodecE", "spdl::core::AudioCodec"], [152, 2, 1, "_CPPv4N4spdl4core17AudioEncodeConfigE", "spdl::core::AudioEncodeConfig"], [131, 2, 1, "_CPPv4N4spdl4core12AudioEncoderE", "spdl::core::AudioEncoder"], [128, 2, 1, "_CPPv4N4spdl4core15AudioEncoderPtrE", "spdl::core::AudioEncoderPtr"], [136, 2, 1, "_CPPv4N4spdl4core11AudioFramesE", "spdl::core::AudioFrames"], [137, 2, 1, "_CPPv4N4spdl4core14AudioFramesPtrE", "spdl::core::AudioFramesPtr"], [146, 2, 1, "_CPPv4N4spdl4core12AudioPacketsE", "spdl::core::AudioPackets"], [149, 2, 1, "_CPPv4N4spdl4core15AudioPacketsPtrE", "spdl::core::AudioPacketsPtr"], [20, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", "spdl::core::BSF"], [20, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERK3BSF", "spdl::core::BSF::BSF"], [20, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF"], [20, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERR3BSF", "spdl::core::BSF::BSF"], [20, 5, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF::bsf"], [20, 5, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF::codec"], [20, 4, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter"], [20, 5, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter::flush"], [20, 5, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter::packets"], [20, 4, 1, "_CPPv4N4spdl4core3BSF5flushEv", "spdl::core::BSF::flush"], [20, 4, 1, "_CPPv4NK4spdl4core3BSF9get_codecEv", "spdl::core::BSF::get_codec"], [20, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", "spdl::core::BSF::media"], [20, 4, 1, "_CPPv4N4spdl4core3BSFaSERK3BSF", "spdl::core::BSF::operator="], [20, 4, 1, "_CPPv4N4spdl4core3BSFaSERR3BSF", "spdl::core::BSF::operator="], [20, 4, 1, "_CPPv4N4spdl4core3BSFD0Ev", "spdl::core::BSF::~BSF"], [107, 1, 1, "_CPPv4N4spdl4core12BytesAdaptorE", "spdl::core::BytesAdaptor"], [107, 4, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface"], [107, 5, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface::data"], [107, 5, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface::dmx_cfg"], [108, 1, 1, "_CPPv4N4spdl4core9CPUBufferE", "spdl::core::CPUBuffer"], [108, 4, 1, "_CPPv4N4spdl4core9CPUBuffer4dataEv", "spdl::core::CPUBuffer::data"], [108, 3, 1, "_CPPv4N4spdl4core9CPUBuffer5depthE", "spdl::core::CPUBuffer::depth"], [108, 3, 1, "_CPPv4N4spdl4core9CPUBuffer10elem_classE", "spdl::core::CPUBuffer::elem_class"], [108, 3, 1, "_CPPv4N4spdl4core9CPUBuffer5shapeE", "spdl::core::CPUBuffer::shape"], [108, 3, 1, "_CPPv4N4spdl4core9CPUBuffer7storageE", "spdl::core::CPUBuffer::storage"], [121, 2, 1, "_CPPv4N4spdl4core12CPUBufferPtrE", "spdl::core::CPUBufferPtr"], [21, 1, 1, "_CPPv4N4spdl4core10CPUStorageE", "spdl::core::CPUStorage"], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage"], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERK10CPUStorage", "spdl::core::CPUStorage::CPUStorage"], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERR10CPUStorage", "spdl::core::CPUStorage::CPUStorage"], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageEv", "spdl::core::CPUStorage::CPUStorage"], [21, 5, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage::pin_memory"], [21, 5, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage::size"], [21, 4, 1, "_CPPv4NK4spdl4core10CPUStorage4dataEv", "spdl::core::CPUStorage::data"], [21, 4, 1, "_CPPv4NK4spdl4core10CPUStorage9is_pinnedEv", "spdl::core::CPUStorage::is_pinned"], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorageaSERK10CPUStorage", "spdl::core::CPUStorage::operator="], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorageaSERR10CPUStorage", "spdl::core::CPUStorage::operator="], [21, 3, 1, "_CPPv4N4spdl4core10CPUStorage4sizeE", "spdl::core::CPUStorage::size"], [21, 4, 1, "_CPPv4N4spdl4core10CPUStorageD0Ev", "spdl::core::CPUStorage::~CPUStorage"], [22, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", "spdl::core::Codec"], [22, 4, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec"], [22, 4, 1, "_CPPv4N4spdl4core5Codec5CodecERK5CodecI5mediaE", "spdl::core::Codec::Codec"], [22, 4, 1, "_CPPv4N4spdl4core5Codec5CodecERR5CodecI5mediaE", "spdl::core::Codec::Codec"], [22, 4, 1, "_CPPv4N4spdl4core5Codec5CodecEv", "spdl::core::Codec::Codec"], [22, 5, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec::frame_rate"], [22, 5, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec::time_base"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec12get_bit_rateEv", "spdl::core::Codec::get_bit_rate"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec19get_bits_per_sampleEv", "spdl::core::Codec::get_bits_per_sample"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec18get_channel_layoutEv", "spdl::core::Codec::get_channel_layout"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec12get_codec_idEv", "spdl::core::Codec::get_codec_id"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec14get_frame_rateEv", "spdl::core::Codec::get_frame_rate"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec10get_heightEv", "spdl::core::Codec::get_height"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec8get_nameEv", "spdl::core::Codec::get_name"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec16get_num_channelsEv", "spdl::core::Codec::get_num_channels"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec14get_parametersEv", "spdl::core::Codec::get_parameters"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec11get_pix_fmtEv", "spdl::core::Codec::get_pix_fmt"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec23get_sample_aspect_ratioEv", "spdl::core::Codec::get_sample_aspect_ratio"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec14get_sample_fmtEv", "spdl::core::Codec::get_sample_fmt"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec15get_sample_rateEv", "spdl::core::Codec::get_sample_rate"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec13get_time_baseEv", "spdl::core::Codec::get_time_base"], [22, 4, 1, "_CPPv4NK4spdl4core5Codec9get_widthEv", "spdl::core::Codec::get_width"], [22, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", "spdl::core::Codec::media"], [22, 4, 1, "_CPPv4N4spdl4core5CodecaSERK5CodecI5mediaE", "spdl::core::Codec::operator="], [22, 4, 1, "_CPPv4N4spdl4core5CodecaSERR5CodecI5mediaE", "spdl::core::Codec::operator="], [22, 4, 1, "_CPPv4N4spdl4core5CodecD0Ev", "spdl::core::Codec::~Codec"], [42, 7, 1, "_CPPv4N4spdl4core7CodecIDE", "spdl::core::CodecID"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID3AV1E", "spdl::core::CodecID::AV1"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID4H264E", "spdl::core::CodecID::H264"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID4HEVCE", "spdl::core::CodecID::HEVC"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID5MJPEGE", "spdl::core::CodecID::MJPEG"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID10MPEG1VIDEOE", "spdl::core::CodecID::MPEG1VIDEO"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID10MPEG2VIDEOE", "spdl::core::CodecID::MPEG2VIDEO"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID5MPEG4E", "spdl::core::CodecID::MPEG4"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID3VC1E", "spdl::core::CodecID::VC1"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID3VP8E", "spdl::core::CodecID::VP8"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID3VP9E", "spdl::core::CodecID::VP9"], [42, 8, 1, "_CPPv4N4spdl4core7CodecID4WMV3E", "spdl::core::CodecID::WMV3"], [109, 1, 1, "_CPPv4N4spdl4core13DataInterfaceE", "spdl::core::DataInterface"], [109, 4, 1, "_CPPv4N4spdl4core13DataInterface11get_fmt_ctxEv", "spdl::core::DataInterface::get_fmt_ctx"], [109, 4, 1, "_CPPv4N4spdl4core13DataInterfaceD0Ev", "spdl::core::DataInterface::~DataInterface"], [119, 2, 1, "_CPPv4N4spdl4core16DataInterfacePtrE", "spdl::core::DataInterfacePtr"], [110, 1, 1, "_CPPv4N4spdl4core12DecodeConfigE", "spdl::core::DecodeConfig"], [110, 3, 1, "_CPPv4N4spdl4core12DecodeConfig7decoderE", "spdl::core::DecodeConfig::decoder"], [110, 3, 1, "_CPPv4N4spdl4core12DecodeConfig15decoder_optionsE", "spdl::core::DecodeConfig::decoder_options"], [23, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", "spdl::core::Decoder"], [23, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder"], [23, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK7Decoder", "spdl::core::Decoder::Decoder"], [23, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERR7Decoder", "spdl::core::Decoder::Decoder"], [23, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::cfg"], [23, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::codec"], [23, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::filter_desc"], [23, 4, 1, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", "spdl::core::Decoder::decode"], [23, 5, 1, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", "spdl::core::Decoder::decode::packets"], [23, 4, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush"], [23, 5, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush::num_frames"], [23, 5, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush::packets"], [23, 4, 1, "_CPPv4N4spdl4core7Decoder5flushEv", "spdl::core::Decoder::flush"], [23, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", "spdl::core::Decoder::media"], [23, 4, 1, "_CPPv4N4spdl4core7DecoderaSERK7Decoder", "spdl::core::Decoder::operator="], [23, 4, 1, "_CPPv4N4spdl4core7DecoderaSERR7Decoder", "spdl::core::Decoder::operator="], [23, 4, 1, "_CPPv4N4spdl4core7DecoderD0Ev", "spdl::core::Decoder::~Decoder"], [125, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", "spdl::core::DecoderPtr"], [125, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", "spdl::core::DecoderPtr::media"], [111, 1, 1, "_CPPv4N4spdl4core11DemuxConfigE", "spdl::core::DemuxConfig"], [111, 3, 1, "_CPPv4N4spdl4core11DemuxConfig11buffer_sizeE", "spdl::core::DemuxConfig::buffer_size"], [111, 3, 1, "_CPPv4N4spdl4core11DemuxConfig6formatE", "spdl::core::DemuxConfig::format"], [111, 3, 1, "_CPPv4N4spdl4core11DemuxConfig14format_optionsE", "spdl::core::DemuxConfig::format_options"], [24, 1, 1, "_CPPv4N4spdl4core7DemuxerE", "spdl::core::Demuxer"], [24, 4, 1, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", "spdl::core::Demuxer::Demuxer"], [24, 5, 1, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", "spdl::core::Demuxer::Demuxer::di"], [24, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window"], [24, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::bsf"], [24, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::media"], [24, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::window"], [24, 4, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", "spdl::core::Demuxer::get_default_codec"], [24, 6, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", "spdl::core::Demuxer::get_default_codec::media"], [24, 4, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", "spdl::core::Demuxer::get_default_stream_index"], [24, 6, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", "spdl::core::Demuxer::get_default_stream_index::media"], [24, 4, 1, "_CPPv4NK4spdl4core7Demuxer9has_audioEv", "spdl::core::Demuxer::has_audio"], [24, 4, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux"], [24, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::duration"], [24, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::indices"], [24, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::num_packets"], [24, 4, 1, "_CPPv4N4spdl4core7DemuxerD0Ev", "spdl::core::Demuxer::~Demuxer"], [127, 2, 1, "_CPPv4N4spdl4core10DemuxerPtrE", "spdl::core::DemuxerPtr"], [44, 7, 1, "_CPPv4N4spdl4core9ElemClassE", "spdl::core::ElemClass"], [44, 8, 1, "_CPPv4N4spdl4core9ElemClass5FloatE", "spdl::core::ElemClass::Float"], [44, 8, 1, "_CPPv4N4spdl4core9ElemClass3IntE", "spdl::core::ElemClass::Int"], [44, 8, 1, "_CPPv4N4spdl4core9ElemClass4UIntE", "spdl::core::ElemClass::UInt"], [112, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", "spdl::core::EncodeConfigBase"], [112, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", "spdl::core::EncodeConfigBase::media"], [25, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", "spdl::core::Encoder"], [25, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderEPN6detail11EncoderImplI5mediaEE", "spdl::core::Encoder::Encoder"], [25, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderERK7EncoderI5mediaE", "spdl::core::Encoder::Encoder"], [25, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderERR7EncoderI5mediaE", "spdl::core::Encoder::Encoder"], [25, 4, 1, "_CPPv4N4spdl4core7Encoder6encodeERRK9FramesPtrI5mediaE", "spdl::core::Encoder::encode"], [25, 4, 1, "_CPPv4N4spdl4core7Encoder5flushEv", "spdl::core::Encoder::flush"], [25, 4, 1, "_CPPv4NK4spdl4core7Encoder14get_frame_sizeEv", "spdl::core::Encoder::get_frame_size"], [25, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", "spdl::core::Encoder::media"], [25, 4, 1, "_CPPv4N4spdl4core7EncoderaSERK7EncoderI5mediaE", "spdl::core::Encoder::operator="], [25, 4, 1, "_CPPv4N4spdl4core7EncoderaSERR7EncoderI5mediaE", "spdl::core::Encoder::operator="], [25, 4, 1, "_CPPv4N4spdl4core7EncoderD0Ev", "spdl::core::Encoder::~Encoder"], [132, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", "spdl::core::EncoderPtr"], [132, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", "spdl::core::EncoderPtr::media"], [26, 1, 1, "_CPPv4N4spdl4core11FilterGraphE", "spdl::core::FilterGraph"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERK11FilterGraph", "spdl::core::FilterGraph::FilterGraph"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", "spdl::core::FilterGraph::FilterGraph"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERR11FilterGraph", "spdl::core::FilterGraph::FilterGraph"], [26, 5, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", "spdl::core::FilterGraph::FilterGraph::filter_desc"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames"], [26, 5, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames::frames"], [26, 5, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames::name"], [26, 4, 1, "_CPPv4NK4spdl4core11FilterGraph4dumpEv", "spdl::core::FilterGraph::dump"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraph5flushEv", "spdl::core::FilterGraph::flush"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::get_frames"], [26, 5, 1, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::get_frames::name"], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraphaSERK11FilterGraph", "spdl::core::FilterGraph::operator="], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraphaSERR11FilterGraph", "spdl::core::FilterGraph::operator="], [26, 4, 1, "_CPPv4N4spdl4core11FilterGraphD0Ev", "spdl::core::FilterGraph::~FilterGraph"], [133, 2, 1, "_CPPv4N4spdl4core14FilterGraphPtrE", "spdl::core::FilterGraphPtr"], [27, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", "spdl::core::Frames"], [27, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", "spdl::core::Frames::media"], [140, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", "spdl::core::FramesPtr"], [140, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", "spdl::core::FramesPtr::media"], [113, 1, 1, "_CPPv4I0EN4spdl4core9GeneratorE", "spdl::core::Generator"], [113, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", "spdl::core::Generator::Generator"], [113, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorERK9Generator", "spdl::core::Generator::Generator"], [113, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorERR9Generator", "spdl::core::Generator::Generator"], [113, 5, 1, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", "spdl::core::Generator::Generator::h"], [113, 6, 1, "_CPPv4I0EN4spdl4core9GeneratorE", "spdl::core::Generator::T"], [113, 3, 1, "_CPPv4N4spdl4core9Generator2h_E", "spdl::core::Generator::h_"], [113, 2, 1, "_CPPv4N4spdl4core9Generator11handle_typeE", "spdl::core::Generator::handle_type"], [113, 4, 1, "_CPPv4N4spdl4core9GeneratorcvbEv", "spdl::core::Generator::operator bool"], [113, 4, 1, "_CPPv4N4spdl4core9GeneratorclEv", "spdl::core::Generator::operator()"], [113, 4, 1, "_CPPv4N4spdl4core9GeneratoraSERK9Generator", "spdl::core::Generator::operator="], [113, 4, 1, "_CPPv4N4spdl4core9GeneratoraSERR9Generator", "spdl::core::Generator::operator="], [113, 1, 1, "_CPPv4N4spdl4core9Generator12promise_typeE", "spdl::core::Generator::promise_type"], [114, 1, 1, "_CPPv4N4spdl4core9Generator12promise_typeE", "spdl::core::Generator::promise_type"], [113, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", "spdl::core::Generator::promise_type::exception"], [114, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", "spdl::core::Generator::promise_type::exception"], [113, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", "spdl::core::Generator::promise_type::final_suspend"], [114, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", "spdl::core::Generator::promise_type::final_suspend"], [113, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", "spdl::core::Generator::promise_type::get_return_object"], [114, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", "spdl::core::Generator::promise_type::get_return_object"], [113, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", "spdl::core::Generator::promise_type::initial_suspend"], [114, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", "spdl::core::Generator::promise_type::initial_suspend"], [113, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", "spdl::core::Generator::promise_type::return_void"], [114, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", "spdl::core::Generator::promise_type::return_void"], [113, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", "spdl::core::Generator::promise_type::unhandled_exception"], [114, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", "spdl::core::Generator::promise_type::unhandled_exception"], [113, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type5valueE", "spdl::core::Generator::promise_type::value"], [114, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type5valueE", "spdl::core::Generator::promise_type::value"], [113, 4, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value"], [114, 4, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value"], [113, 6, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::From"], [114, 6, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::From"], [113, 5, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::from"], [114, 5, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::from"], [113, 4, 1, "_CPPv4N4spdl4core9GeneratorD0Ev", "spdl::core::Generator::~Generator"], [122, 2, 1, "_CPPv4N4spdl4core10ImageCodecE", "spdl::core::ImageCodec"], [135, 2, 1, "_CPPv4N4spdl4core11ImageFramesE", "spdl::core::ImageFrames"], [134, 2, 1, "_CPPv4N4spdl4core14ImageFramesPtrE", "spdl::core::ImageFramesPtr"], [151, 2, 1, "_CPPv4N4spdl4core12ImagePacketsE", "spdl::core::ImagePackets"], [145, 2, 1, "_CPPv4N4spdl4core15ImagePacketsPtrE", "spdl::core::ImagePacketsPtr"], [28, 1, 1, "_CPPv4N4spdl4core13InternalErrorE", "spdl::core::InternalError"], [43, 7, 1, "_CPPv4N4spdl4core9MediaTypeE", "spdl::core::MediaType"], [43, 8, 1, "_CPPv4N4spdl4core9MediaType5AudioE", "spdl::core::MediaType::Audio"], [43, 8, 1, "_CPPv4N4spdl4core9MediaType5ImageE", "spdl::core::MediaType::Image"], [43, 8, 1, "_CPPv4N4spdl4core9MediaType5VideoE", "spdl::core::MediaType::Video"], [29, 1, 1, "_CPPv4N4spdl4core5MuxerE", "spdl::core::Muxer"], [29, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERK5Muxer", "spdl::core::Muxer::Muxer"], [29, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer"], [29, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERR5Muxer", "spdl::core::Muxer::Muxer"], [29, 5, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer::muxer"], [29, 5, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer::uri"], [29, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream"], [29, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::codec_config"], [29, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::encoder"], [29, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::encoder_config"], [29, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::media"], [29, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream"], [29, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream::codec"], [29, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream::media"], [29, 4, 1, "_CPPv4N4spdl4core5Muxer5closeEv", "spdl::core::Muxer::close"], [29, 4, 1, "_CPPv4N4spdl4core5Muxer5flushEv", "spdl::core::Muxer::flush"], [29, 4, 1, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::open"], [29, 5, 1, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::open::muxer_config"], [29, 4, 1, "_CPPv4N4spdl4core5MuxeraSERK5Muxer", "spdl::core::Muxer::operator="], [29, 4, 1, "_CPPv4N4spdl4core5MuxeraSERR5Muxer", "spdl::core::Muxer::operator="], [29, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write"], [29, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::i"], [29, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::media"], [29, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::packets"], [29, 4, 1, "_CPPv4N4spdl4core5MuxerD0Ev", "spdl::core::Muxer::~Muxer"], [142, 2, 1, "_CPPv4N4spdl4core8MuxerPtrE", "spdl::core::MuxerPtr"], [156, 2, 1, "_CPPv4N4spdl4core10OptionDictE", "spdl::core::OptionDict"], [30, 1, 1, "_CPPv4N4spdl4core12PacketSeriesE", "spdl::core::PacketSeries"], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERK12PacketSeries", "spdl::core::PacketSeries::PacketSeries"], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", "spdl::core::PacketSeries::PacketSeries"], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesEv", "spdl::core::PacketSeries::PacketSeries"], [30, 5, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", "spdl::core::PacketSeries::PacketSeries::other"], [30, 4, 1, "_CPPv4NK4spdl4core12PacketSeries11get_packetsEv", "spdl::core::PacketSeries::get_packets"], [30, 4, 1, "_CPPv4NK4spdl4core12PacketSeries9iter_dataEv", "spdl::core::PacketSeries::iter_data"], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeriesaSERK12PacketSeries", "spdl::core::PacketSeries::operator="], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", "spdl::core::PacketSeries::operator="], [30, 5, 1, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", "spdl::core::PacketSeries::operator=::other"], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeries4pushEP8AVPacket", "spdl::core::PacketSeries::push"], [30, 4, 1, "_CPPv4N4spdl4core12PacketSeriesD0Ev", "spdl::core::PacketSeries::~PacketSeries"], [143, 2, 1, "_CPPv4N4spdl4core15PacketSeriesPtrE", "spdl::core::PacketSeriesPtr"], [115, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", "spdl::core::Packets"], [115, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets"], [115, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERK7PacketsI5mediaE", "spdl::core::Packets::Packets"], [115, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets"], [115, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets"], [115, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERR7PacketsI5mediaE", "spdl::core::Packets::Packets"], [115, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsEv", "spdl::core::Packets::Packets"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::codec"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::id"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::index"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::index"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::src"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::src"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::stream_index"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::time_base"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::time_base"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::timestamp"], [115, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::timestamp"], [115, 3, 1, "_CPPv4N4spdl4core7Packets5codecE", "spdl::core::Packets::codec"], [115, 3, 1, "_CPPv4N4spdl4core7Packets2idE", "spdl::core::Packets::id"], [115, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", "spdl::core::Packets::media"], [115, 4, 1, "_CPPv4N4spdl4core7PacketsaSERK7PacketsI5mediaE", "spdl::core::Packets::operator="], [115, 4, 1, "_CPPv4N4spdl4core7PacketsaSERR7PacketsI5mediaE", "spdl::core::Packets::operator="], [115, 3, 1, "_CPPv4N4spdl4core7Packets4pktsE", "spdl::core::Packets::pkts"], [115, 3, 1, "_CPPv4N4spdl4core7Packets3srcE", "spdl::core::Packets::src"], [115, 3, 1, "_CPPv4N4spdl4core7Packets12stream_indexE", "spdl::core::Packets::stream_index"], [115, 3, 1, "_CPPv4N4spdl4core7Packets9time_baseE", "spdl::core::Packets::time_base"], [115, 3, 1, "_CPPv4N4spdl4core7Packets9timestampE", "spdl::core::Packets::timestamp"], [115, 4, 1, "_CPPv4N4spdl4core7PacketsD0Ev", "spdl::core::Packets::~Packets"], [148, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", "spdl::core::PacketsPtr"], [148, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", "spdl::core::PacketsPtr::media"], [155, 2, 1, "_CPPv4N4spdl4core8RationalE", "spdl::core::Rational"], [116, 1, 1, "_CPPv4N4spdl4core13RawPacketDataE", "spdl::core::RawPacketData"], [116, 3, 1, "_CPPv4N4spdl4core13RawPacketData4dataE", "spdl::core::RawPacketData::data"], [116, 3, 1, "_CPPv4N4spdl4core13RawPacketData3ptsE", "spdl::core::RawPacketData::pts"], [116, 3, 1, "_CPPv4N4spdl4core13RawPacketData4sizeE", "spdl::core::RawPacketData::size"], [117, 1, 1, "_CPPv4N4spdl4core13SourceAdaptorE", "spdl::core::SourceAdaptor"], [117, 4, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface"], [117, 5, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface::dmx_cfg"], [117, 5, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface::url"], [117, 4, 1, "_CPPv4N4spdl4core13SourceAdaptorD0Ev", "spdl::core::SourceAdaptor::~SourceAdaptor"], [120, 2, 1, "_CPPv4N4spdl4core16SourceAdaptorPtrE", "spdl::core::SourceAdaptorPtr"], [118, 1, 1, "_CPPv4N4spdl4core7StorageE", "spdl::core::Storage"], [118, 4, 1, "_CPPv4NK4spdl4core7Storage4dataEv", "spdl::core::Storage::data"], [118, 4, 1, "_CPPv4N4spdl4core7StorageD0Ev", "spdl::core::Storage::~Storage"], [31, 1, 1, "_CPPv4N4spdl4core16StreamingDemuxerE", "spdl::core::StreamingDemuxer"], [31, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer"], [31, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::duration"], [31, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::num_packets"], [31, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::p"], [31, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::stream_index"], [31, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer4doneEv", "spdl::core::StreamingDemuxer::done"], [31, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer4nextEv", "spdl::core::StreamingDemuxer::next"], [126, 2, 1, "_CPPv4N4spdl4core19StreamingDemuxerPtrE", "spdl::core::StreamingDemuxerPtr"], [32, 1, 1, "_CPPv4N4spdl4core14TracingSessionE", "spdl::core::TracingSession"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", "spdl::core::TracingSession::TracingSession"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERK14TracingSession", "spdl::core::TracingSession::TracingSession"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", "spdl::core::TracingSession::TracingSession"], [32, 5, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", "spdl::core::TracingSession::TracingSession::other"], [32, 5, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", "spdl::core::TracingSession::TracingSession::sess"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", "spdl::core::TracingSession::config"], [32, 5, 1, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", "spdl::core::TracingSession::config::process_name"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession4initEv", "spdl::core::TracingSession::init"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSessionaSERK14TracingSession", "spdl::core::TracingSession::operator="], [32, 4, 1, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", "spdl::core::TracingSession::operator="], [32, 5, 1, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", "spdl::core::TracingSession::operator=::other"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start"], [32, 5, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start::buffer_size_in_kb"], [32, 5, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start::fd"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSession4stopEv", "spdl::core::TracingSession::stop"], [32, 4, 1, "_CPPv4N4spdl4core14TracingSessionD0Ev", "spdl::core::TracingSession::~TracingSession"], [124, 2, 1, "_CPPv4N4spdl4core10VideoCodecE", "spdl::core::VideoCodec"], [154, 2, 1, "_CPPv4N4spdl4core17VideoEncodeConfigE", "spdl::core::VideoEncodeConfig"], [129, 2, 1, "_CPPv4N4spdl4core12VideoEncoderE", "spdl::core::VideoEncoder"], [130, 2, 1, "_CPPv4N4spdl4core15VideoEncoderPtrE", "spdl::core::VideoEncoderPtr"], [141, 2, 1, "_CPPv4N4spdl4core11VideoFramesE", "spdl::core::VideoFrames"], [139, 2, 1, "_CPPv4N4spdl4core14VideoFramesPtrE", "spdl::core::VideoFramesPtr"], [144, 2, 1, "_CPPv4N4spdl4core12VideoPacketsE", "spdl::core::VideoPackets"], [147, 2, 1, "_CPPv4N4spdl4core15VideoPacketsPtrE", "spdl::core::VideoPacketsPtr"], [69, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone"], [69, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone::media"], [69, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone::src"], [63, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames"], [65, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames"], [63, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::batch"], [65, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::frames"], [63, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::media"], [65, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::media"], [63, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::storage"], [65, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::storage"], [61, 4, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer"], [61, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::depth"], [61, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::elem_class"], [61, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::shape"], [61, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::storage"], [62, 4, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::bits"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::data"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::pts"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::sample_fmt"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::sample_rate"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::shape"], [62, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::stride"], [64, 4, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::bits"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::data"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::frame_rate"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::pts"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::sample_fmt"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::shape"], [64, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::stride"], [33, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", "spdl::core::detail::DecoderImpl"], [33, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", "spdl::core::detail::DecoderImpl::media"], [34, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", "spdl::core::detail::EncoderImpl"], [34, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", "spdl::core::detail::EncoderImpl::media"], [71, 4, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices"], [71, 5, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices::indices"], [71, 5, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices::src"], [72, 4, 1, "_CPPv4N4spdl4core18get_ffmpeg_filtersEv", "spdl::core::get_ffmpeg_filters"], [79, 4, 1, "_CPPv4N4spdl4core20get_ffmpeg_log_levelEv", "spdl::core::get_ffmpeg_log_level"], [73, 4, 1, "_CPPv4N4spdl4core19get_ffmpeg_versionsEv", "spdl::core::get_ffmpeg_versions"], [70, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", "spdl::core::get_timestamps"], [70, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", "spdl::core::get_timestamps::media"], [70, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14get_timestampsENSt6vectorIdEERK7PacketsI5mediaEb", "spdl::core::get_timestamps::raw"], [81, 4, 1, "_CPPv4N4spdl4core9init_glogEPKc", "spdl::core::init_glog"], [81, 5, 1, "_CPPv4N4spdl4core9init_glogEPKc", "spdl::core::init_glog::name"], [78, 4, 1, "_CPPv4N4spdl4core12init_tracingEv", "spdl::core::init_tracing"], [66, 4, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer"], [67, 4, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer"], [67, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::adaptor"], [66, 5, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::data"], [66, 5, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::dmx_cfg"], [67, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::dmx_cfg"], [67, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::src"], [68, 4, 1, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", "spdl::core::make_filter_graph"], [68, 5, 1, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", "spdl::core::make_filter_graph::filter_desc"], [77, 4, 1, "_CPPv4N4spdl4core18register_avdevicesEv", "spdl::core::register_avdevices"], [76, 4, 1, "_CPPv4N4spdl4core20set_ffmpeg_log_levelEi", "spdl::core::set_ffmpeg_log_level"], [74, 4, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter"], [74, 6, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::Number"], [74, 5, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::counter"], [74, 5, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::i"], [80, 4, 1, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", "spdl::core::trace_event_begin"], [80, 5, 1, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", "spdl::core::trace_event_begin::name"], [75, 4, 1, "_CPPv4N4spdl4core15trace_event_endEv", "spdl::core::trace_event_end"], [14, 9, 0, "-", "benchmark_tarfile"], [15, 9, 0, "-", "benchmark_wav"], [16, 9, 0, "-", "data_formats"], [17, 9, 0, "-", "hydra_integration"], [18, 9, 0, "-", "image_dataloading"], [19, 9, 0, "-", "imagenet_classification"], [158, 9, 0, "-", "multi_thread_preprocessing"], [159, 9, 0, "-", "performance_analysis"], [160, 9, 0, "-", "pipeline_definitions"], [161, 9, 0, "-", "pipeline_profiling"], [316, 9, 0, "-", "streaming_nvdec_decoding"], [317, 9, 0, "-", "streaming_video_processing"], [318, 9, 0, "-", "video_dataloading"]], "benchmark_tarfile": [[14, 10, 1, "", "BenchmarkResult"], [14, 12, 1, "", "benchmark"], [14, 12, 1, "", "create_test_tar"], [14, 12, 1, "", "iter_tarfile_builtin"], [14, 12, 1, "", "main"], [14, 12, 1, "", "process_tar_builtin"], [14, 12, 1, "", "process_tar_spdl"], [14, 12, 1, "", "process_tar_spdl_filelike"], [14, 12, 1, "", "run_benchmark"], [14, 12, 1, "", "save_results_to_csv"]], "benchmark_tarfile.BenchmarkResult": [[14, 11, 1, "", "file_size"], [14, 11, 1, "", "free_threaded"], [14, 11, 1, "", "function_name"], [14, 11, 1, "", "num_files"], [14, 11, 1, "", "num_iterations"], [14, 11, 1, "", "num_threads"], [14, 11, 1, "", "python_version"], [14, 11, 1, "", "qps_lower_ci"], [14, 11, 1, "", "qps_mean"], [14, 11, 1, "", "qps_upper_ci"], [14, 11, 1, "", "tar_size"], [14, 11, 1, "", "total_files_processed"]], "benchmark_wav": [[15, 10, 1, "", "BenchmarkConfig"], [15, 10, 1, "", "BenchmarkResult"], [15, 12, 1, "", "benchmark"], [15, 12, 1, "", "create_wav_data"], [15, 12, 1, "", "load_sf"], [15, 12, 1, "", "load_spdl_audio"], [15, 12, 1, "", "load_spdl_wav"], [15, 12, 1, "", "main"], [15, 12, 1, "", "run_benchmark_suite"], [15, 12, 1, "", "save_results_to_csv"]], "benchmark_wav.BenchmarkConfig": [[15, 11, 1, "id0", "bits_per_sample"], [15, 11, 1, "id1", "duration_seconds"], [15, 11, 1, "id2", "num_channels"], [15, 11, 1, "id3", "sample_rate"]], "benchmark_wav.BenchmarkResult": [[15, 11, 1, "", "ci_lower"], [15, 11, 1, "", "ci_upper"], [15, 11, 1, "", "duration"], [15, 11, 1, "", "duration_seconds"], [15, 11, 1, "", "free_threaded"], [15, 11, 1, "", "function_name"], [15, 11, 1, "", "num_threads"], [15, 11, 1, "", "python_version"], [15, 11, 1, "", "qps"]], "data_formats": [[16, 10, 1, "", "DataSource"], [16, 12, 1, "", "get_mock_data"], [16, 12, 1, "", "get_pipeline"], [16, 12, 1, "", "load_npy"], [16, 12, 1, "", "load_npy_spdl"], [16, 12, 1, "", "load_torch"], [16, 12, 1, "", "main"], [16, 12, 1, "", "run_pipeline"]], "data_formats.DataSource": [[16, 13, 1, "", "__iter__"]], "hydra_integration": [[17, 12, 1, "", "main"]], "image_dataloading": [[18, 10, 1, "", "PerfResult"], [18, 12, 1, "", "batch_decode"], [18, 12, 1, "", "benchmark"], [18, 12, 1, "", "entrypoint"], [18, 12, 1, "", "get_pipeline"], [18, 12, 1, "", "source"], [18, 12, 1, "", "worker_entrypoint"]], "image_dataloading.PerfResult": [[18, 11, 1, "", "elapsed"], [18, 11, 1, "", "num_batches"], [18, 11, 1, "", "num_frames"]], "imagenet_classification": [[19, 10, 1, "", "Classification"], [19, 10, 1, "", "ModelBundle"], [19, 10, 1, "", "Preprocessing"], [19, 12, 1, "", "benchmark"], [19, 12, 1, "", "entrypoint"], [19, 12, 1, "", "get_dataloader"], [19, 12, 1, "", "get_decode_func"], [19, 12, 1, "", "get_model"]], "imagenet_classification.Classification": [[19, 13, 1, "", "forward"]], "imagenet_classification.ModelBundle": [[19, 13, 1, "", "forward"]], "imagenet_classification.Preprocessing": [[19, 13, 1, "", "forward"]], "multi_thread_preprocessing": [[158, 12, 1, "", "entrypoint"], [158, 12, 1, "", "exp_spdl"], [158, 12, 1, "", "exp_torch"], [158, 12, 1, "", "run_dataloader"]], "performance_analysis": [[159, 10, 1, "", "CustomQueue"], [159, 10, 1, "", "CustomTaskHook"], [159, 12, 1, "", "build_pipeline"], [159, 12, 1, "", "decode"], [159, 12, 1, "", "main"], [159, 12, 1, "", "parse_args"]], "performance_analysis.CustomQueue": [[159, 13, 1, "", "interval_stats_callback"]], "performance_analysis.CustomTaskHook": [[159, 13, 1, "", "interval_stats_callback"]], "pipeline_definitions": [[160, 12, 1, "", "add_100"], [160, 12, 1, "", "create_main_pipeline"], [160, 12, 1, "", "create_sub_pipeline_1"], [160, 12, 1, "", "create_sub_pipeline_2"], [160, 12, 1, "", "main"], [160, 12, 1, "", "multiply_by_10"], [160, 12, 1, "", "normalize_to_lists"], [160, 12, 1, "", "run_pipeline_example"], [160, 12, 1, "", "square"]], "pipeline_profiling": [[161, 12, 1, "", "create_pipeline"], [161, 12, 1, "", "main"], [161, 12, 1, "", "op_with_contention"], [161, 12, 1, "", "parse_args"], [161, 12, 1, "", "plot_profile_results"], [161, 12, 1, "", "print_profile_result"], [161, 12, 1, "", "run_profiling_example"], [161, 12, 1, "", "scalable_op"], [161, 12, 1, "", "scalable_op2"]], "spdl": [[162, 9, 0, "-", "dataloader"], [167, 9, 0, "-", "io"], [258, 9, 0, "-", "pipeline"], [300, 9, 0, "-", "source"]], "spdl.dataloader": [[163, 10, 1, "", "CacheDataLoader"], [164, 10, 1, "", "DataLoader"], [165, 10, 1, "", "PyTorchDataLoader"], [166, 12, 1, "", "get_pytorch_dataloader"]], "spdl.dataloader.CacheDataLoader": [[163, 13, 1, "", "__iter__"], [163, 13, 1, "", "__len__"]], "spdl.dataloader.DataLoader": [[164, 13, 1, "", "__iter__"]], "spdl.dataloader.PyTorchDataLoader": [[165, 13, 1, "", "__iter__"], [165, 13, 1, "", "__len__"]], "spdl.io": [[168, 10, 1, "", "ArrayInterface"], [169, 10, 1, "", "AudioCodec"], [170, 10, 1, "", "AudioDecoder"], [171, 10, 1, "", "AudioEncodeConfig"], [172, 10, 1, "", "AudioEncoder"], [173, 10, 1, "", "AudioFrames"], [174, 10, 1, "", "AudioPackets"], [175, 10, 1, "", "BSF"], [176, 10, 1, "", "CPUBuffer"], [177, 10, 1, "", "CPUStorage"], [178, 10, 1, "", "CUDAArrayInterface"], [179, 10, 1, "", "CUDABuffer"], [180, 10, 1, "", "CUDAConfig"], [181, 10, 1, "", "DecodeConfig"], [182, 12, 1, "", "Decoder"], [183, 10, 1, "", "DemuxConfig"], [184, 10, 1, "", "Demuxer"], [185, 10, 1, "", "FilterGraph"], [186, 10, 1, "", "Frames"], [187, 10, 1, "", "ImageCodec"], [188, 10, 1, "", "ImageDecoder"], [189, 10, 1, "", "ImageFrames"], [190, 10, 1, "", "ImagePackets"], [191, 10, 1, "", "Muxer"], [192, 10, 1, "", "NpzFile"], [193, 10, 1, "", "NvDecDecoder"], [194, 10, 1, "", "Packets"], [195, 10, 1, "", "VideoCodec"], [196, 10, 1, "", "VideoDecoder"], [197, 10, 1, "", "VideoEncodeConfig"], [198, 10, 1, "", "VideoEncoder"], [199, 10, 1, "", "VideoFrames"], [200, 10, 1, "", "VideoPackets"], [201, 12, 1, "", "apply_bsf"], [202, 12, 1, "", "audio_encode_config"], [203, 12, 1, "", "convert_array"], [204, 12, 1, "", "convert_frames"], [205, 12, 1, "", "cpu_storage"], [206, 12, 1, "", "create_reference_audio_frame"], [207, 12, 1, "", "create_reference_video_frame"], [208, 12, 1, "", "cuda_config"], [209, 12, 1, "", "decode_config"], [210, 12, 1, "", "decode_image_nvjpeg"], [211, 12, 1, "", "decode_packets"], [212, 12, 1, "", "decode_packets_nvdec"], [213, 12, 1, "", "demux_audio"], [214, 12, 1, "", "demux_config"], [215, 12, 1, "", "demux_image"], [216, 12, 1, "", "demux_video"], [217, 12, 1, "", "encode_image"], [218, 12, 1, "", "get_abuffer_desc"], [219, 12, 1, "", "get_audio_filter_desc"], [220, 12, 1, "", "get_buffer_desc"], [221, 12, 1, "", "get_filter_desc"], [222, 12, 1, "", "get_video_filter_desc"], [223, 12, 1, "", "iter_tarfile"], [224, 12, 1, "", "load_audio"], [225, 12, 1, "", "load_image"], [226, 12, 1, "", "load_image_batch"], [227, 12, 1, "", "load_image_batch_nvjpeg"], [228, 12, 1, "", "load_npy"], [229, 12, 1, "", "load_npz"], [230, 12, 1, "", "load_video"], [231, 12, 1, "", "load_wav"], [232, 12, 1, "", "nv12_to_bgr"], [233, 12, 1, "", "nv12_to_rgb"], [234, 12, 1, "", "nvdec_decoder"], [235, 12, 1, "", "sample_decode_video"], [236, 12, 1, "", "save_image"], [237, 12, 1, "", "streaming_load_video_nvdec"], [238, 12, 1, "", "to_jax"], [239, 12, 1, "", "to_numba"], [240, 12, 1, "", "to_numpy"], [241, 12, 1, "", "to_torch"], [242, 12, 1, "", "transfer_buffer"], [243, 12, 1, "", "transfer_buffer_cpu"], [244, 12, 1, "", "transfer_tensor"], [245, 9, 0, "-", "utils"], [257, 12, 1, "", "video_encode_config"]], "spdl.io.AudioCodec": [[169, 14, 1, "", "channel_layout"], [169, 14, 1, "", "name"], [169, 14, 1, "", "num_channels"], [169, 14, 1, "", "sample_fmt"], [169, 14, 1, "", "sample_rate"], [169, 14, 1, "", "time_base"]], "spdl.io.AudioDecoder": [[170, 13, 1, "", "decode"], [170, 13, 1, "", "flush"]], "spdl.io.AudioEncoder": [[172, 13, 1, "", "encode"], [172, 13, 1, "", "flush"], [172, 14, 1, "", "frame_size"]], "spdl.io.AudioFrames": [[173, 13, 1, "", "__len__"], [173, 13, 1, "", "clone"], [173, 14, 1, "", "num_channels"], [173, 14, 1, "", "num_frames"], [173, 14, 1, "", "sample_fmt"], [173, 14, 1, "", "sample_rate"]], "spdl.io.AudioPackets": [[174, 13, 1, "", "clone"], [174, 14, 1, "", "codec"], [174, 14, 1, "", "num_channels"], [174, 14, 1, "", "sample_rate"], [174, 14, 1, "", "timestamp"]], "spdl.io.BSF": [[175, 13, 1, "", "filter"], [175, 13, 1, "", "flush"]], "spdl.io.CUDABuffer": [[179, 14, 1, "", "device_index"]], "spdl.io.Demuxer": [[184, 14, 1, "", "audio_codec"], [184, 14, 1, "", "audio_stream_index"], [184, 13, 1, "", "demux_audio"], [184, 13, 1, "", "demux_image"], [184, 13, 1, "", "demux_video"], [184, 13, 1, "", "has_audio"], [184, 14, 1, "", "image_codec"], [184, 13, 1, "", "streaming_demux"], [184, 14, 1, "", "video_codec"], [184, 14, 1, "", "video_stream_index"]], "spdl.io.FilterGraph": [[185, 13, 1, "", "add_frames"], [185, 13, 1, "", "flush"], [185, 13, 1, "", "get_frames"]], "spdl.io.ImageCodec": [[187, 14, 1, "", "height"], [187, 14, 1, "", "name"], [187, 14, 1, "", "pix_fmt"], [187, 14, 1, "", "sample_aspect_ratio"], [187, 14, 1, "", "time_base"], [187, 14, 1, "", "width"]], "spdl.io.ImageDecoder": [[188, 13, 1, "", "decode"]], "spdl.io.ImageFrames": [[189, 13, 1, "", "clone"], [189, 14, 1, "", "height"], [189, 14, 1, "", "metadata"], [189, 14, 1, "", "num_planes"], [189, 14, 1, "", "pix_fmt"], [189, 14, 1, "", "pts"], [189, 14, 1, "", "width"]], "spdl.io.ImagePackets": [[190, 13, 1, "", "clone"], [190, 14, 1, "", "codec"], [190, 14, 1, "", "height"], [190, 14, 1, "", "pix_fmt"], [190, 14, 1, "", "width"]], "spdl.io.Muxer": [[191, 13, 1, "", "add_encode_stream"], [191, 13, 1, "", "add_remux_stream"], [191, 13, 1, "", "close"], [191, 13, 1, "", "flush"], [191, 13, 1, "", "open"], [191, 13, 1, "", "write"]], "spdl.io.NpzFile": [[192, 13, 1, "", "__getitem__"], [192, 13, 1, "", "__iter__"], [192, 13, 1, "", "__len__"]], "spdl.io.NvDecDecoder": [[193, 13, 1, "", "decode"], [193, 13, 1, "", "flush"], [193, 13, 1, "", "init"]], "spdl.io.VideoCodec": [[195, 14, 1, "", "frame_rate"], [195, 14, 1, "", "height"], [195, 14, 1, "", "name"], [195, 14, 1, "", "pix_fmt"], [195, 14, 1, "", "sample_aspect_ratio"], [195, 14, 1, "", "time_base"], [195, 14, 1, "", "width"]], "spdl.io.VideoDecoder": [[196, 13, 1, "", "decode"], [196, 13, 1, "", "flush"]], "spdl.io.VideoEncoder": [[198, 13, 1, "", "encode"], [198, 13, 1, "", "flush"]], "spdl.io.VideoFrames": [[199, 13, 1, "", "__getitem__"], [199, 13, 1, "", "__len__"], [199, 13, 1, "", "clone"], [199, 13, 1, "", "get_pts"], [199, 13, 1, "", "get_timestamps"], [199, 14, 1, "", "height"], [199, 14, 1, "", "num_frames"], [199, 14, 1, "", "num_planes"], [199, 14, 1, "", "pix_fmt"], [199, 14, 1, "", "time_base"], [199, 14, 1, "", "width"]], "spdl.io.VideoPackets": [[200, 13, 1, "", "__len__"], [200, 13, 1, "", "clone"], [200, 14, 1, "", "codec"], [200, 14, 1, "", "frame_rate"], [200, 13, 1, "", "get_timestamps"], [200, 14, 1, "", "height"], [200, 14, 1, "", "pix_fmt"], [200, 14, 1, "", "timestamp"], [200, 14, 1, "", "width"]], "spdl.io.utils": [[246, 12, 1, "", "built_with_cuda"], [247, 12, 1, "", "built_with_nvcodec"], [248, 12, 1, "", "built_with_nvjpeg"], [249, 12, 1, "", "get_ffmpeg_filters"], [250, 12, 1, "", "get_ffmpeg_log_level"], [251, 12, 1, "", "get_ffmpeg_versions"], [252, 12, 1, "", "set_ffmpeg_log_level"], [253, 12, 1, "", "trace_counter"], [254, 12, 1, "", "trace_event"], [255, 12, 1, "", "trace_gc"], [256, 12, 1, "", "tracing"]], "spdl.pipeline": [[259, 10, 1, "", "AsyncQueue"], [260, 10, 1, "", "Pipeline"], [261, 10, 1, "", "PipelineBuilder"], [262, 15, 1, "", "PipelineFailure"], [263, 10, 1, "", "ProfileHook"], [264, 10, 1, "", "ProfileResult"], [265, 10, 1, "", "QueuePerfStats"], [266, 10, 1, "", "StatsQueue"], [267, 10, 1, "", "TaskHook"], [268, 10, 1, "", "TaskPerfStats"], [269, 10, 1, "", "TaskStatsHook"], [270, 12, 1, "", "build_pipeline"], [271, 12, 1, "", "cache_iterator"], [272, 9, 0, "-", "config"], [283, 12, 1, "", "create_task"], [284, 9, 0, "-", "defs"], [296, 12, 1, "", "is_eof"], [297, 12, 1, "", "iterate_in_subprocess"], [298, 12, 1, "", "profile_pipeline"], [299, 12, 1, "", "run_pipeline_in_subprocess"]], "spdl.pipeline.AsyncQueue": [[259, 13, 1, "", "stage_hook"]], "spdl.pipeline.Pipeline": [[260, 13, 1, "", "__iter__"], [260, 13, 1, "", "auto_stop"], [260, 13, 1, "", "get_item"], [260, 13, 1, "", "get_iterator"], [260, 13, 1, "", "start"], [260, 13, 1, "", "stop"]], "spdl.pipeline.PipelineBuilder": [[261, 13, 1, "", "add_sink"], [261, 13, 1, "", "add_source"], [261, 13, 1, "", "aggregate"], [261, 13, 1, "", "build"], [261, 13, 1, "", "disaggregate"], [261, 13, 1, "", "pipe"]], "spdl.pipeline.ProfileHook": [[263, 13, 1, "", "pipeline_profile_hook"], [263, 13, 1, "", "stage_profile_hook"]], "spdl.pipeline.ProfileResult": [[264, 11, 1, "", "name"], [264, 11, 1, "", "stats"]], "spdl.pipeline.QueuePerfStats": [[265, 11, 1, "", "ave_get_time"], [265, 11, 1, "", "ave_put_time"], [265, 11, 1, "", "elapsed"], [265, 11, 1, "", "num_items"], [265, 11, 1, "", "occupancy_rate"], [265, 14, 1, "", "qps"]], "spdl.pipeline.StatsQueue": [[266, 13, 1, "", "get"], [266, 13, 1, "", "interval_stats_callback"], [266, 13, 1, "", "put"], [266, 13, 1, "", "stage_hook"]], "spdl.pipeline.TaskHook": [[267, 13, 1, "", "stage_hook"], [267, 13, 1, "", "task_hook"]], "spdl.pipeline.TaskPerfStats": [[268, 11, 1, "", "ave_time"], [268, 11, 1, "", "num_failures"], [268, 11, 1, "", "num_tasks"]], "spdl.pipeline.TaskStatsHook": [[269, 13, 1, "", "interval_stats_callback"], [269, 13, 1, "", "stage_hook"], [269, 13, 1, "", "task_hook"]], "spdl.pipeline.config": [[273, 12, 1, "", "diagnostic_mode_num_sources"], [274, 12, 1, "", "get_default_hook_class"], [275, 12, 1, "", "get_default_profile_callback"], [276, 12, 1, "", "get_default_profile_hook"], [277, 12, 1, "", "get_default_queue_class"], [278, 12, 1, "", "is_diagnostic_mode_enabled"], [279, 12, 1, "", "set_default_hook_class"], [280, 12, 1, "", "set_default_profile_callback"], [281, 12, 1, "", "set_default_profile_hook"], [282, 12, 1, "", "set_default_queue_class"]], "spdl.pipeline.defs": [[285, 12, 1, "", "Aggregate"], [286, 10, 1, "", "AggregateConfig"], [287, 12, 1, "", "Disaggregate"], [288, 10, 1, "", "DisaggregateConfig"], [289, 12, 1, "", "Merge"], [290, 10, 1, "", "MergeConfig"], [291, 12, 1, "", "Pipe"], [292, 10, 1, "", "PipeConfig"], [293, 10, 1, "", "PipelineConfig"], [294, 10, 1, "", "SinkConfig"], [295, 10, 1, "", "SourceConfig"]], "spdl.pipeline.defs.AggregateConfig": [[286, 11, 1, "", "drop_last"], [286, 11, 1, "", "name"], [286, 11, 1, "", "num_items"]], "spdl.pipeline.defs.DisaggregateConfig": [[288, 11, 1, "", "name"]], "spdl.pipeline.defs.MergeConfig": [[290, 11, 1, "", "op"], [290, 11, 1, "", "pipeline_configs"]], "spdl.pipeline.defs.PipeConfig": [[292, 11, 1, "", "name"]], "spdl.pipeline.defs.PipelineConfig": [[293, 11, 1, "", "pipes"], [293, 11, 1, "", "sink"], [293, 11, 1, "", "src"]], "spdl.pipeline.defs.SinkConfig": [[294, 11, 1, "", "buffer_size"]], "spdl.pipeline.defs.SourceConfig": [[295, 11, 1, "", "source"]], "spdl.source": [[301, 10, 1, "", "DistributedDeterministicSampler"], [302, 10, 1, "", "DistributedRandomSampler"], [303, 10, 1, "", "IterableWithShuffle"], [304, 10, 1, "", "SizedIterable"], [305, 10, 1, "", "SizedIterableWithShuffle"], [306, 9, 0, "-", "imagenet"], [310, 9, 0, "-", "local_directory"], [312, 9, 0, "-", "utils"]], "spdl.source.DistributedDeterministicSampler": [[301, 13, 1, "", "__iter__"], [301, 13, 1, "", "__len__"]], "spdl.source.DistributedRandomSampler": [[302, 13, 1, "", "__iter__"], [302, 13, 1, "", "__len__"], [302, 13, 1, "", "shuffle"]], "spdl.source.IterableWithShuffle": [[303, 13, 1, "", "shuffle"]], "spdl.source.SizedIterableWithShuffle": [[305, 13, 1, "", "shuffle"]], "spdl.source.imagenet": [[307, 10, 1, "", "ImageNet"], [308, 12, 1, "", "get_mappings"], [309, 12, 1, "", "parse_wnid"]], "spdl.source.imagenet.ImageNet": [[307, 13, 1, "", "__iter__"], [307, 13, 1, "", "shuffle"]], "spdl.source.local_directory": [[311, 10, 1, "", "LocalDirectory"]], "spdl.source.local_directory.LocalDirectory": [[311, 13, 1, "", "__iter__"], [311, 13, 1, "", "shuffle"]], "spdl.source.utils": [[313, 10, 1, "", "MergeIterator"], [314, 12, 1, "", "embed_shuffle"], [315, 12, 1, "", "repeat_source"]], "spdl.source.utils.MergeIterator": [[313, 13, 1, "", "__iter__"]], "streaming_nvdec_decoding": [[316, 12, 1, "", "decode"], [316, 12, 1, "", "main"], [316, 12, 1, "", "parse_args"], [316, 12, 1, "", "run"], [316, 12, 1, "", "torch_cuda_warmup"]], "streaming_video_processing": [[317, 12, 1, "", "build_components"], [317, 12, 1, "", "get_filter_desc"], [317, 12, 1, "", "main"], [317, 12, 1, "", "parse_args"], [317, 12, 1, "", "process"]], "video_dataloading": [[318, 10, 1, "", "PerfResult"], [318, 12, 1, "", "benchmark"], [318, 12, 1, "", "decode_video"], [318, 12, 1, "", "decode_video_nvdec"], [318, 12, 1, "", "entrypoint"], [318, 12, 1, "", "get_pipeline"], [318, 12, 1, "", "source"], [318, 12, 1, "", "worker_entrypoint"]], "video_dataloading.PerfResult": [[318, 11, 1, "", "elapsed"], [318, 11, 1, "", "num_batches"], [318, 11, 1, "", "num_frames"]]}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "type", "C++ type"], "3": ["cpp", "member", "C++ member"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "templateParam", "C++ template parameter"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "enumerator", "C++ enumerator"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "attribute", "Python attribute"], "12": ["py", "function", "Python function"], "13": ["py", "method", "Python method"], "14": ["py", "property", "Python property"], "15": ["py", "exception", "Python exception"]}, "objtypes": {"0": "c:macro", "1": "cpp:class", "2": "cpp:type", "3": "cpp:member", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:templateParam", "7": "cpp:enum", "8": "cpp:enumerator", "9": "py:module", "10": "py:class", "11": "py:attribute", "12": "py:function", "13": "py:method", "14": "py:property", "15": "py:exception"}, "terms": {"": [1, 2, 3, 4, 5, 6, 7, 9, 10, 14, 15, 18, 19, 92, 101, 102, 103, 159, 160, 161, 164, 165, 173, 186, 194, 208, 223, 233, 252, 261, 291, 297, 309, 317, 318, 319, 320, 322, 323, 324, 331, 332, 334, 336, 337, 340, 341, 343], "0": [3, 14, 15, 16, 18, 19, 89, 98, 102, 103, 109, 118, 158, 159, 160, 161, 164, 191, 193, 194, 205, 209, 212, 222, 228, 229, 231, 252, 253, 261, 264, 265, 270, 298, 302, 313, 314, 315, 316, 317, 318, 319, 324, 325, 327, 331, 335, 336, 340, 342], "003": 161, "01": 161, "04": [326, 331], "05d": 316, "06": 326, "06d": 14, "1": [3, 4, 10, 13, 14, 15, 16, 17, 18, 19, 23, 89, 92, 94, 103, 158, 159, 160, 161, 166, 184, 185, 191, 193, 194, 202, 218, 219, 220, 222, 232, 233, 251, 257, 259, 261, 264, 265, 266, 269, 270, 289, 291, 298, 299, 302, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 331, 335, 336, 337, 342], "10": [14, 15, 160, 161, 193, 212, 229, 233, 260, 289, 298, 302, 313, 327, 337], "100": [1, 7, 14, 15, 158, 160, 161, 251, 283, 335, 337, 339], "1000": [16, 161, 273, 298, 308], "1024": 14, "1050": 298, "1080": 316, "11": [160, 313, 322, 326, 327], "110": [15, 160], "1100": 160, "111": 160, "1110": 160, "112": 160, "1120": 160, "113": 160, "1130": 160, "114": 160, "1140": 160, "1180": 298, "12": [14, 160, 161, 298, 313, 322, 331, 335], "120": 159, "1200": 298, "1234": 191, "1250": 298, "128": [159, 233], "12800": 185, "13": [4, 14, 15, 160, 194, 322, 327, 337, 340], "14": [3, 160, 161], "15": [18, 160, 194, 318, 322, 327, 336], "150": 161, "16": [14, 15, 16, 18, 19, 158, 160, 173, 202, 206, 207, 217, 231, 233, 236, 252, 298, 318, 331, 336], "160": 160, "16000": 15, "17": 322, "1750": 298, "19": [322, 336], "1920": 316, "198": 217, "1980": 298, "1c": 185, "1f": [16, 161, 316], "2": [3, 10, 14, 15, 16, 19, 62, 89, 92, 93, 103, 158, 159, 160, 161, 166, 233, 237, 251, 253, 289, 298, 302, 313, 316, 317, 318, 319, 320, 322, 327, 331, 336, 340], "20": [10, 14, 17, 19, 160, 161, 228, 313, 327, 336], "200": 337, "20067": [326, 343], "2024": 326, "2025": 326, "20mb": 331, "21": [298, 313, 322], "2100": 298, "2147483647": 15, "22": [298, 313, 326], "222": 318, "224": [18, 19, 158, 164, 325, 331], "2240": 19, "224x224": 331, "224x224x3": 331, "225": 158, "2250": 19, "229": 158, "2290": 19, "23": [322, 326, 336], "24": [15, 252, 331], "240": [194, 316], "25": [298, 326], "2504": [326, 343], "255": [19, 158, 217], "256": [16, 19, 331], "26": 10, "2d": [14, 161, 206], "2f": [14, 15, 18, 19, 158, 161, 298, 318], "2x": 158, "2x4": 331, "3": [3, 4, 6, 13, 14, 15, 16, 17, 19, 103, 158, 159, 160, 161, 164, 184, 194, 205, 207, 210, 214, 217, 233, 236, 251, 253, 260, 261, 289, 297, 302, 316, 317, 318, 319, 320, 322, 327, 331, 336], "30": [15, 223, 260, 298, 336], "300m": 193, "30m": 337, "32": [4, 6, 14, 15, 16, 18, 19, 158, 164, 173, 202, 206, 217, 219, 231, 252, 298, 316, 325, 331], "320": [194, 298, 316, 318], "320x240": 185, "320x480": 185, "32767": 15, "32bit": 202, "32x0": 331, "33": 298, "340": 1, "3670924": 13, "3d": 207, "3x3": 233, "4": [4, 6, 7, 10, 13, 14, 15, 16, 103, 158, 160, 161, 233, 289, 298, 302, 317, 320, 325, 327, 331, 335, 340, 341, 342], "40": [18, 160, 252, 339, 341], "406": 158, "4060": 19, "4096": 256, "41": 160, "4147200": 331, "44": 298, "440": 15, "44100": [15, 185], "44100hz": 185, "45": 298, "450": 298, "456": 158, "4560": 19, "48": 252, "480": 16, "48000": 15, "485": 158, "4850": 19, "4d": 207, "5": [14, 15, 19, 103, 158, 160, 161, 191, 194, 233, 253, 283, 289, 302, 313, 317, 322, 327, 340, 341, 343], "50": 1, "500": [161, 298, 316], "52": 331, "55": 298, "56": 252, "58": 251, "6": [14, 16, 19, 103, 159, 160, 161, 233, 289, 302, 317, 327, 343], "60": [10, 15, 19, 161, 251], "600x240": 185, "61": 15, "63": 202, "636": 308, "64": [173, 206, 231], "640": 16, "65": 298, "67": 298, "68783184": 13, "7": [19, 103, 194, 233, 253, 302, 317, 322, 327, 336, 337, 340], "703": [14, 15], "720x480": 331, "720x480x12": 331, "75": 298, "776": 14, "78": 298, "7x": 158, "8": [6, 14, 15, 16, 18, 158, 159, 161, 164, 173, 202, 206, 231, 233, 236, 252, 298, 302, 317, 318, 331, 335, 336, 340, 342], "8000": 15, "8096": [103, 111], "849": 340, "85": [298, 335], "850": 298, "88": 298, "8bit": 207, "9": [160, 194, 233, 251, 302, 313, 317, 322], "90": 160, "92": 298, "95": [14, 15], "96": [9, 217], "99": 335, "A": [1, 3, 4, 5, 6, 18, 19, 159, 164, 165, 173, 174, 184, 185, 189, 190, 192, 199, 200, 201, 203, 204, 208, 210, 212, 223, 226, 227, 231, 233, 238, 239, 240, 241, 244, 261, 263, 264, 267, 270, 289, 291, 292, 293, 294, 295, 303, 304, 305, 318, 319, 320, 325, 336, 340, 342], "And": [15, 331], "As": [1, 3, 7, 14, 331, 332, 334, 335, 337, 340, 341, 342, 343], "At": [14, 259, 339, 340], "But": [318, 334, 335, 340], "By": [9, 157, 194, 200, 208, 209, 233, 271, 297, 302, 313, 316, 327, 331, 336, 337, 340], "For": [2, 3, 6, 7, 14, 98, 159, 185, 187, 191, 199, 202, 208, 252, 317, 318, 319, 320, 323, 324, 325, 331, 334, 335, 340, 341, 342], "If": [1, 3, 4, 5, 6, 7, 10, 13, 16, 102, 161, 164, 173, 175, 184, 193, 199, 200, 205, 211, 218, 220, 222, 223, 226, 227, 231, 233, 234, 235, 236, 244, 257, 260, 261, 267, 270, 271, 279, 280, 281, 283, 289, 290, 291, 297, 298, 302, 309, 313, 314, 316, 319, 323, 324, 325, 331, 334, 335, 336, 337, 340, 343], "In": [1, 3, 4, 5, 7, 8, 9, 13, 158, 159, 172, 173, 270, 297, 298, 302, 317, 319, 322, 323, 324, 330, 331, 334, 335, 338, 339, 342], "It": [1, 3, 4, 5, 7, 9, 10, 15, 18, 89, 101, 103, 163, 164, 192, 208, 228, 229, 260, 261, 265, 267, 291, 298, 317, 318, 319, 322, 323, 325, 330, 331, 335, 337, 339, 340, 342, 343], "Its": [7, 14, 343], "NOT": [322, 326], "No": [101, 164], "On": [1, 3, 158, 335], "One": [3, 5, 9, 16, 192, 214, 259, 297, 319, 324, 327, 331, 334, 338, 340], "Or": 320, "Such": [6, 89, 342], "TO": 322, "That": [6, 322, 331], "The": [2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 89, 93, 158, 159, 160, 161, 163, 164, 165, 169, 172, 173, 174, 175, 179, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 212, 217, 218, 219, 220, 221, 222, 226, 227, 228, 229, 231, 233, 235, 236, 237, 244, 252, 253, 254, 256, 257, 259, 260, 261, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 294, 297, 298, 299, 301, 302, 305, 307, 308, 313, 314, 315, 316, 317, 318, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 343], "Then": [7, 317, 324, 331], "There": [3, 4, 7, 228, 297, 319, 320, 322, 323, 324, 325, 331, 334, 336, 337, 340, 342], "These": [4, 7, 89, 104, 327, 336, 341, 343], "To": [3, 4, 7, 10, 13, 14, 15, 18, 19, 159, 164, 175, 176, 179, 193, 194, 211, 261, 267, 270, 317, 319, 322, 324, 327, 331, 334, 335, 339], "With": [7, 9, 10, 302, 340], "_": [3, 14, 15, 16, 19, 158, 159, 193, 316], "__all__": [14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 316, 317, 318], "__array_interface__": [168, 238, 239, 240, 241], "__await__": [5, 319], "__cuda_array_interface__": 178, "__doc__": [18, 19, 159, 161, 316, 317, 318], "__getitem__": [6, 158, 192, 199, 261, 291, 331], "__getstate__": 324, "__has_includ": 103, "__init__": [6, 16, 19, 159], "__iter__": [16, 163, 164, 165, 192, 260, 297, 301, 302, 307, 311, 313, 314, 322, 341], "__len__": [163, 165, 173, 192, 199, 200, 301, 302], "__main__": [14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 316, 317, 318], "__name__": [14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 316, 317, 318], "__placeholder__": 235, "__repr__": 194, "__setstate__": 324, "_aggregateconfig": 285, "_arg": 158, "_args_": 17, "_cmd": 297, "_compon": [279, 282], "_convert_": 17, "_decode_func": 318, "_disaggregateconfig": 287, "_dump_np": 16, "_dump_torch": 16, "_enter_iteration_mod": 297, "_execute_iter": 297, "_expand": 19, "_filter_desc_default": [182, 211, 224, 225, 226, 230], "_frame": [18, 318], "_get_dataload": 19, "_get_decode_fn": 318, "_get_experimental_nvjpeg_decode_funct": 19, "_get_load_fn": 16, "_get_pipelin": [18, 318], "_get_python_info": [14, 15], "_get_threadlocal_stream": 324, "_hook": 279, "_init": [18, 318], "_init_log": [18, 19, 318], "_is_audio": [11, 54, 82, 98, 105], "_is_gil_en": [14, 15], "_is_imag": [11, 54, 82, 98, 105], "_is_video": [11, 54, 82, 98, 105], "_iterate_result": 297, "_lg": [14, 18, 19, 160, 161, 318], "_log": 159, "_mp4toannexb": 193, "_parse_arg": [14, 15, 18, 19, 158, 318], "_parse_process_arg": [18, 318], "_partial_": 17, "_pipetyp": [286, 288], "_print": 158, "_profilestat": 264, "_queue": 282, "_read_arrai": 228, "_read_array_head": 228, "_scalart": [15, 16, 192, 228], "_signum": [18, 318], "_size_str": 14, "_spdl_ffmpeg6": 194, "_src": 6, "_static": [14, 15, 159, 161], "_statu": 297, "_step": 159, "_subprocessiter": 297, "_target_": 17, "_type": [286, 288], "_writer": 159, "aac": 191, "ab": [326, 343], "abc": [14, 15, 16, 18, 19, 158, 159, 161, 192, 289, 318], "abhinandan": 326, "abi": [14, 15], "abl": [3, 5, 335, 337], "abort": [267, 297], "about": [1, 3, 5, 10, 92, 193, 194, 319, 323, 331, 335, 337, 343], "abov": [1, 5, 6, 10, 217, 334, 335, 336, 340], "absorb": [261, 267, 291], "absort": 267, "abstract": [1, 3, 89, 92, 102, 164, 263, 267, 331, 332, 334, 341, 343], "abuff": [185, 218, 220], "abuffersink": [185, 218], "acc1": 19, "acc5": 19, "acceler": 193, "access": [7, 159, 191, 192, 194, 205, 323, 331, 334], "accessor": 334, "accommod": [318, 320], "accomplish": [3, 319], "accordingli": 172, "accumul": 325, "accuraci": [19, 337], "achiev": [3, 4, 7, 13, 163, 271, 319, 324, 330, 331, 332, 337, 338, 339, 343], "acknowledg": 297, "acquir": [15, 340], "acquisit": 331, "across": [14, 15, 161, 298, 301, 324, 326, 335, 338], "act": [191, 320], "action": [18, 19, 267, 318, 336], "activ": [1, 3, 244, 340], "active_queu": 289, "actual": [5, 89, 93, 187, 297, 327, 334, 337], "ad": [3, 102, 104, 158, 160, 161], "adaptor": [41, 51, 59, 67, 84, 95, 105, 107, 109, 117, 119, 120, 157], "add": [1, 3, 101, 102, 159, 160, 185, 191, 267, 283, 317, 319, 327, 331, 339], "add_100": 160, "add_argu": [14, 15, 18, 19, 158, 159, 161, 316, 317, 318], "add_done_callback": 3, "add_encode_stream": [11, 29, 82, 100, 105, 172, 191, 198, 317], "add_fram": [11, 26, 82, 97, 105, 185, 218, 220, 317], "add_pip": 160, "add_pointer_t": 102, "add_remux_stream": [11, 29, 82, 100, 105, 191, 317], "add_scalar": 159, "add_sink": [6, 9, 13, 16, 18, 158, 159, 260, 261, 318, 320, 322, 324, 325, 331, 335, 341], "add_sourc": [6, 9, 13, 16, 18, 158, 159, 260, 261, 318, 320, 322, 324, 325, 331, 335, 341], "addfil": 14, "addit": [6, 7, 89, 158, 325, 331, 334, 340, 341, 342, 343], "address": [3, 14, 208], "adjust": [3, 222, 318, 331, 332, 338], "admonit": 317, "adopt": [330, 331, 332, 343], "advanc": 9, "advancc": [2, 319], "advantag": [13, 319, 324], "advis": [3, 6, 13, 319], "affect": [7, 14, 16, 252, 320, 335, 336], "affili": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318], "after": [9, 10, 159, 161, 163, 193, 194, 211, 212, 222, 233, 260, 263, 267, 271, 278, 280, 283, 298, 313, 322, 331, 334, 335, 336, 339], "afterward": 341, "again": 1, "against": [14, 158, 327, 330], "agg1": 160, "aggerg": 164, "aggreg": [6, 17, 18, 19, 158, 160, 164, 261, 286, 292, 318, 322, 324, 325, 331, 332, 335, 341], "aggregate_pip": 160, "aggregateconfig": [285, 293], "agnost": [1, 319], "ahead": 342, "ai": [4, 317, 326, 338, 343], "aim": [319, 343], "alex": 326, "algorithm": 222, "align": [5, 89], "aliv": [206, 207, 334], "all": [2, 3, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 185, 191, 199, 200, 223, 244, 252, 289, 290, 301, 302, 313, 316, 317, 318, 319, 320, 322, 324, 331, 336, 340], "all_concurr": 161, "all_reduc": [336, 342], "alloc": [18, 19, 164, 177, 193, 205, 208, 316, 318, 331, 337, 340], "allocator_typ": [21, 102], "allow": [1, 4, 5, 6, 9, 101, 161, 168, 178, 185, 191, 260, 261, 291, 297, 298, 323, 324, 332, 335, 336, 337, 338, 340, 343], "allow_pickl": [7, 16], "almost": [14, 15, 158, 165, 229, 336], "alon": 328, "along": [13, 332], "alongsid": [5, 297], "alpha": [161, 212], "alreadi": [3, 261, 291, 319], "also": [3, 4, 5, 6, 7, 10, 13, 14, 160, 192, 194, 200, 319, 324, 325, 331, 334, 335, 339, 340, 342, 343], "alt": 159, "altern": [3, 7, 194, 317, 320], "although": [332, 340], "alwai": [4, 199, 265, 322, 324, 335, 336], "am": 336, "among": [13, 270], "amount": [4, 5, 14, 297, 342], "an": [1, 2, 3, 4, 5, 6, 7, 9, 13, 16, 19, 95, 159, 161, 164, 185, 188, 190, 191, 194, 199, 206, 207, 208, 218, 220, 226, 227, 234, 235, 244, 252, 254, 257, 260, 261, 262, 266, 267, 270, 289, 290, 291, 292, 297, 299, 307, 309, 315, 317, 320, 321, 322, 323, 325, 331, 334, 335, 336, 337, 339, 340, 342, 343], "analogi": 336, "analys": 338, "analysi": [7, 10, 15, 323, 326, 331, 332, 335, 338], "analyz": [7, 161, 265, 266, 268, 269, 323, 326, 338, 340], "andrei": 326, "ani": [4, 5, 10, 15, 16, 160, 175, 192, 226, 227, 228, 235, 260, 283, 285, 287, 289, 290, 293, 296, 297, 299, 319, 320, 324, 332, 337, 342], "annex": [175, 193, 201], "annor": 1, "annot": [1, 340], "anoth": [1, 5, 317, 320, 324, 334, 336, 337, 339, 340], "answer": [7, 331, 337], "anti": [260, 261, 322, 339, 340], "anul": [185, 218], "anyfram": [11, 26, 54, 82, 86, 97, 98, 105], "anypacket": [11, 31, 57, 82, 86, 95, 101, 105], "anyth": 267, "anytim": [3, 319], "anywher": 323, "aoption": 343, "apach": 327, "api": [4, 187, 208, 210, 212, 334, 340], "app": 191, "appar": 334, "appear": 10, "append": [14, 15, 158, 160], "appli": [3, 10, 158, 159, 164, 175, 193, 200, 201, 211, 236, 261, 291, 292, 302, 303, 305, 307, 311, 317, 323, 325, 331, 336, 337, 341], "applic": [4, 9, 158, 319, 322, 324, 327, 337, 343], "apply_bsf": [175, 193], "apprach": 319, "approach": [3, 9, 15, 194, 319, 324, 330, 337, 338, 340], "approxim": 10, "ar": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 19, 89, 101, 102, 104, 158, 159, 161, 164, 165, 172, 173, 184, 186, 191, 193, 194, 199, 200, 208, 210, 217, 219, 222, 227, 233, 236, 244, 246, 247, 248, 252, 259, 260, 261, 265, 266, 270, 271, 285, 286, 291, 297, 298, 302, 307, 308, 313, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 331, 332, 334, 335, 336, 337, 339, 340, 341, 342, 343], "arang": [15, 228, 229], "architectur": [9, 10, 165, 335], "archiv": [14, 192, 229], "archiveprefix": 326, "arg": [13, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 221, 316, 317, 318], "argpars": [14, 15, 18, 19, 158, 159, 161, 316, 317, 318], "args_": [18, 19, 318], "args_set": [18, 318], "argset": 158, "argument": [13, 14, 15, 159, 161, 191, 194, 208, 218, 220, 222, 224, 225, 226, 230, 233, 236, 260, 261, 270, 291, 297, 316, 317, 320, 324, 325], "argumentpars": [14, 15, 18, 19, 158, 159, 161, 316, 317, 318], "argv": 316, "aris": [332, 342], "around": [4, 5, 10, 92, 158, 163, 192, 261, 263, 291, 322, 324, 326, 336, 340, 341], "arr": 16, "arrai": [4, 7, 14, 15, 16, 49, 62, 93, 103, 108, 164, 168, 172, 176, 178, 179, 184, 191, 192, 198, 199, 203, 206, 207, 217, 228, 231, 238, 239, 240, 241, 257, 317, 324, 331, 340], "array_equ": [228, 229], "arrayinterfac": [231, 238, 239, 240, 241], "arxiv": [326, 343], "as_complet": [14, 15], "asarrai": 231, "asctim": [14, 18, 19, 160, 161, 318], "asfract": 207, "ask": [101, 326, 332, 337], "aspect": [187, 195, 222, 319], "assert": [228, 229, 316, 317], "assert_array_equ": 15, "assess": 337, "assign": [3, 259, 266, 267, 301, 302, 319, 322], "assum": [3, 319], "astyp": 15, "async": [1, 3, 19, 159, 164, 260, 261, 266, 267, 269, 289, 290, 291, 320, 322, 324, 325, 326, 333, 340, 343], "async_decode_packet": 209, "async_demux_audio": 214, "async_demux_media": [209, 214], "async_demux_video": 209, "async_load_image_batch": 19, "async_load_image_batch_nvjpeg": 19, "async_preprocess": 320, "async_wrapp": 4, "asynccontextmanag": 267, "asynchron": [1, 2, 3, 4, 5, 9, 244, 261, 291, 319, 320, 324, 325, 340], "asynchronous_my_func": 324, "asyncio": [1, 2, 3, 4, 5, 9, 159, 214, 259, 260, 261, 283, 289, 291, 319, 324, 334, 340], "asynciter": [164, 259, 261, 266, 267, 269, 284, 291, 295, 325], "asyncqueu": [261, 266, 270, 277, 282, 299], "attach": [3, 4, 159, 189, 218, 220, 255, 261, 283, 319, 325, 335], "attempt": [1, 3, 10, 194, 265, 332, 334, 335, 340], "attend": [1, 3, 319], "attribut": [15, 168, 169, 172, 173, 174, 178, 179, 184, 187, 189, 190, 195, 199, 200, 259, 264, 265, 266, 268, 286, 288, 290, 292, 293, 294, 295, 322], "attributeerror": [14, 15], "audio": [11, 15, 43, 82, 92, 96, 98, 101, 103, 105, 123, 128, 131, 136, 137, 146, 149, 152, 169, 170, 171, 172, 173, 174, 191, 194, 198, 201, 204, 206, 213, 218, 219, 224, 231, 260, 317, 332, 335, 343], "audio_codec": [184, 191, 218, 317], "audio_decod": 184, "audio_encode_config": [171, 191], "audio_fil": 15, "audio_fram": 185, "audio_index": 317, "audio_packet": 317, "audio_stream_index": [184, 317], "audiocodec": [11, 48, 82, 86, 92, 105, 174, 182, 184, 191, 218], "audiodecod": 182, "audioencod": [11, 52, 82, 86, 96, 105, 191], "audioencodeconfig": [11, 59, 82, 86, 103, 105, 191, 202], "audioencoderptr": [11, 52, 82, 86, 96, 105], "audiofram": [11, 54, 82, 86, 98, 105, 170, 172, 185, 204, 206, 211], "audioframesptr": [11, 54, 62, 82, 86, 93, 98, 105, 138], "audiopacket": [11, 57, 82, 86, 101, 105, 170, 172, 184, 191, 201, 211, 213, 219, 221, 317], "audiopacketsptr": [11, 57, 82, 86, 101, 105, 150], "author": [326, 343], "auto": 93, "auto_stop": [16, 17, 18, 158, 159, 160, 260, 318, 322, 331, 341], "autograd": 316, "automag": 343, "automat": [6, 191, 260, 278, 302, 322, 327], "autotun": 19, "av": 191, "av1": [11, 42, 82, 103, 105], "avail": [6, 14, 15, 101, 160, 164, 175, 191, 201, 222, 249, 260, 265, 289, 290, 308, 313, 316, 318, 320, 324, 327, 331, 332, 335, 336, 339, 341], "avcodecid": 103, "avcodecparamet": [22, 92], "ave_get_tim": [159, 265], "ave_put_tim": [159, 265], "ave_tim": [18, 159, 268, 318, 335], "averag": [10, 265, 268, 338], "avformatcontext": [89, 109], "avfram": [98, 101, 186], "aviocontext": 89, "avmediatyp": 103, "avoid": [7, 13, 326, 331, 341], "avpacket": [30, 101, 194], "avrat": [11, 59, 82, 83, 103, 105, 155], "awai": [89, 92, 334], "await": [2, 3, 4, 19, 159, 164, 209, 260, 261, 289, 290, 291, 324, 326, 334], "awar": [3, 13, 101, 178, 327, 331, 340], "awkward": 319, "aync": 5, "b": [14, 175, 193, 201, 204, 233, 257], "back": [1, 3, 5, 9, 297, 317, 319, 324, 331, 335], "backbon": 19, "backend": 15, "background": [7, 8, 164, 194, 244, 260, 322, 324, 325, 327, 331, 334], "backward": [9, 10, 337], "bandwidth": [3, 319, 332, 340], "bare": 3, "base": [7, 9, 10, 11, 15, 27, 82, 101, 105, 162, 191, 199, 210, 212, 267, 301, 302, 303, 304, 305, 307, 311, 313, 320, 326, 330, 331, 332, 343], "basecontext": 166, "baselin": [7, 9, 10, 158], "baseselector": 5, "bash": 18, "basic": [3, 8, 229, 260, 261, 319, 331], "basicconfig": [14, 18, 19, 159, 160, 161, 316, 318], "batch": [6, 9, 10, 18, 19, 63, 93, 158, 160, 164, 165, 193, 204, 226, 227, 233, 244, 271, 318, 324, 325, 329, 335, 336, 337, 339, 341], "batch_decod": 18, "batch_sampl": 166, "batch_siz": [18, 19, 158, 160, 164, 166, 324, 331, 341], "batchifi": [6, 164], "bbox_inch": 161, "becam": 1, "becaus": [2, 5, 7, 14, 15, 331, 334, 335, 336, 342, 343], "becom": [3, 7, 10, 14, 164, 260, 265, 289, 290, 331, 332, 334, 335, 336, 337, 339, 342], "bed": 343, "been": [7, 297], "befor": [3, 4, 7, 19, 158, 161, 164, 193, 257, 261, 263, 265, 267, 270, 271, 283, 286, 297, 298, 313, 314, 317, 319, 324, 331, 334, 335, 336, 337, 339, 341], "begin": [3, 93, 263, 318, 319], "behavior": [1, 10, 13, 98, 164, 192, 202, 209, 214, 222, 257, 266, 269, 313, 320], "being": [1, 3, 5, 9, 14, 15, 260, 267, 319, 322, 325, 340], "believ": [3, 332], "bellow": [7, 158, 193], "below": [160, 336], "benchmark": [7, 16, 18, 19, 158, 161, 223, 231, 264, 270, 298, 316, 318, 326, 331, 343], "benchmark_config": 15, "benchmark_result": 15, "benchmark_tarfil": 14, "benchmark_tarfile_result": 14, "benchmark_wav": 15, "benchmarkconfig": 15, "benchmarkresult": [14, 15], "benefit": 332, "berfor": [261, 291], "best": [3, 161, 326, 332], "best_stat": 161, "better": [102, 330], "between": [3, 4, 9, 89, 266, 324, 325, 331, 334, 335, 342], "beyond": [331, 340], "bf": [175, 201], "bf16": 19, "bfloat16": 19, "bgr": [207, 210, 212, 232], "bgr24": [207, 236], "bgra": 212, "bibtex": 326, "bicub": 222, "bigger": 320, "bin": [14, 16, 18, 158, 159, 160, 161, 317], "binari": [16, 231, 327], "bind": [324, 327], "bit": [7, 15, 62, 64, 93, 173, 193, 201, 202, 206, 207, 219, 231, 236, 257, 331, 334], "bit_rat": [103, 194, 202, 257], "bits_per_sampl": [15, 194, 231], "bitstream": [101, 175, 201], "blob": 103, "block": [3, 5, 14, 15, 17, 18, 19, 160, 177, 205, 261, 265, 266, 284, 318, 319, 322, 325, 334, 335, 336, 342], "blog": 326, "blue": 1, "bold": 161, "bool": [11, 14, 15, 16, 18, 19, 20, 21, 24, 31, 70, 82, 90, 95, 99, 101, 102, 105, 113, 158, 164, 166, 175, 184, 200, 226, 228, 232, 233, 234, 246, 247, 248, 256, 261, 271, 278, 283, 285, 286, 296, 297, 314, 318], "boost": [7, 331], "both": [5, 14, 15, 158, 297, 298, 324, 331, 335], "bottleneck": [7, 9, 13, 161, 163, 259, 271, 323, 326, 332, 335, 336, 337, 338, 342, 343], "bottom": 237, "bound": [3, 6, 14, 231, 319, 339, 340], "boundari": 7, "box": [3, 319, 343], "bp": [18, 318], "branch": [1, 7, 228, 319], "break": [6, 18, 19, 158, 316, 318], "breakdown": 10, "breviti": [3, 319], "bsd": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318, 327], "bsf": [11, 24, 41, 48, 57, 82, 84, 86, 95, 105, 157, 193, 201], "bsfimpl": 90, "bsftemplat": [83, 105], "bt2020": 233, "bt2020c": 233, "bt470": 233, "bt601": 233, "bt709": [233, 257, 317], "bucket": 325, "buf": [4, 16], "buffer": [3, 6, 18, 19, 41, 49, 54, 58, 59, 61, 84, 93, 98, 103, 105, 108, 121, 157, 158, 159, 160, 164, 170, 172, 173, 175, 176, 184, 185, 189, 193, 196, 198, 199, 203, 204, 205, 210, 212, 214, 217, 220, 224, 225, 226, 227, 228, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 256, 259, 260, 261, 266, 285, 286, 294, 297, 316, 317, 318, 322, 325, 331, 333, 335, 336], "buffer_arg": 317, "buffer_s": [11, 16, 17, 18, 19, 82, 103, 105, 111, 159, 160, 161, 164, 214, 256, 259, 261, 266, 294, 297, 298, 318], "buffer_size_in_kb": [32, 104], "buffersink": [185, 220, 317], "bug": 3, "build": [1, 2, 3, 6, 8, 13, 16, 17, 18, 19, 103, 158, 159, 191, 218, 220, 260, 261, 270, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 298, 299, 317, 318, 319, 320, 321, 323, 324, 325, 326, 331, 335, 341, 343], "build_compon": 317, "build_pipelin": [17, 159, 160, 278, 284, 289, 293, 298], "builder": [158, 299, 324], "built": [14, 160, 223, 318, 327, 335], "builtin": 17, "bulk": [7, 101], "bundl": [7, 16, 19], "busi": 8, "byte": [6, 7, 14, 15, 16, 89, 184, 205, 210, 213, 215, 216, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 256, 318, 324, 325, 331, 341], "bytearrai": 228, "bytesadaptor": [11, 45, 82, 86, 89, 105, 117], "bytesadaptorstruct": [83, 105], "bytesio": [7, 14, 15, 16, 228], "c": [7, 13, 14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 193, 204, 207, 210, 214, 229, 316, 317, 318, 320, 326, 327], "cabl": 340, "cach": [163, 234, 271, 324, 327, 338, 339], "cache_iter": [163, 337], "cachedataload": [7, 10, 337], "caching_allocator_alloc": [18, 19, 208, 316, 318], "caching_allocator_delet": [18, 19, 208, 316, 318], "calcul": [14, 15, 331], "call": [1, 3, 5, 7, 9, 15, 161, 191, 193, 194, 228, 244, 259, 260, 261, 266, 267, 269, 270, 271, 280, 291, 298, 314, 317, 334, 340, 341, 342], "callabl": [3, 14, 15, 16, 19, 164, 166, 208, 261, 270, 275, 280, 289, 290, 291, 297, 298, 299, 318, 324, 325], "callback": [1, 3, 5, 159, 161, 266, 269, 275, 280, 283, 298, 319, 325], "callback_chain": 3, "can": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 18, 89, 103, 158, 159, 161, 163, 165, 172, 173, 174, 182, 184, 185, 189, 190, 191, 193, 199, 200, 205, 208, 214, 218, 219, 220, 222, 228, 231, 233, 253, 260, 261, 263, 266, 267, 269, 270, 271, 284, 291, 293, 297, 298, 301, 302, 319, 320, 322, 323, 324, 325, 327, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "cancel": [260, 283, 325, 334], "cannot": [3, 5, 7, 10, 13, 252, 319, 322, 331, 334, 335], "capac": [320, 332], "captur": 259, "care": [319, 340], "carefulli": 334, "carri": [9, 92, 101, 323], "case": [1, 3, 5, 10, 13, 16, 92, 101, 172, 191, 193, 229, 297, 302, 318, 320, 324, 326, 331, 334, 335, 336, 337, 338, 340, 342], "case_studi": 16, "cast": [164, 176, 179], "catch": 342, "caught": 267, "caus": [3, 103, 194, 260, 261, 322, 336, 340, 342], "caveat": [189, 260, 261, 321], "cb": 3, "cd": [15, 18, 318], "center": 222, "certain": [7, 194, 324, 337], "cfg": [15, 17, 23, 94, 209, 214, 298], "chain": [2, 261, 319, 336], "challeng": [3, 8], "chanc": [331, 332], "chang": [4, 8, 10, 103, 158, 210, 212, 219, 222, 227, 233, 236, 298, 319, 320, 327, 330, 331, 332, 335, 337, 340, 342], "channel": [15, 169, 172, 173, 174, 199, 202, 204, 206, 207, 212, 217, 219, 232, 236, 318], "channel_layout": [169, 185], "char": [81, 98, 104], "characterist": 257, "chart": 319, "check": [1, 3, 14, 15, 160, 246, 247, 248, 278, 289, 319, 323, 327, 331, 336, 340], "chip": 193, "choic": [7, 14, 19, 194, 307, 334], "choos": [267, 313, 327, 334, 343], "chose": 209, "christian": 326, "chunk": [7, 14, 237, 317], "ci": [14, 15], "ci_low": 15, "ci_upp": 15, "circl": 1, "cite": 326, "cl": [6, 158], "clang": 327, "class": [3, 4, 7, 11, 13, 17, 42, 43, 44, 90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 118, 157, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 274, 277, 279, 282, 284, 286, 288, 290, 292, 293, 294, 295, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 317, 322, 323, 324, 326, 330, 331, 335, 341], "class_map": 308, "classif": [6, 326, 331, 339], "classifi": 19, "cleanli": 334, "clear": 3, "clearli": 336, "cli": [16, 18, 19, 103, 158, 316, 318], "click": [14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 316, 317, 318], "client": 325, "clone": [11, 19, 54, 82, 86, 98, 105, 173, 174, 189, 190, 199, 200], "close": [1, 11, 29, 82, 100, 105, 159, 191, 265, 334, 335], "closer": 319, "closur": 13, "cloud": 341, "clss": 331, "cmake": 327, "cnocurr": 3, "code": [1, 3, 5, 7, 14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 194, 263, 298, 314, 315, 316, 317, 318, 319, 320, 322, 324, 327, 331, 332, 334, 335], "codec": [11, 20, 23, 24, 29, 41, 46, 50, 51, 57, 59, 82, 84, 86, 90, 94, 95, 100, 101, 105, 115, 122, 123, 124, 157, 169, 174, 175, 182, 184, 187, 190, 191, 193, 194, 195, 200, 218, 220, 327], "codec_config": [29, 100], "codecclass": [83, 105], "codecid": [11, 22, 59, 82, 86, 92, 103, 105], "codecidenum": [83, 105], "codecpar": 92, "coeff": [232, 233], "coeffici": 233, "collat": [158, 165, 324, 331, 335, 341], "collate_fn": [158, 166], "collect": [7, 14, 15, 16, 18, 19, 158, 159, 161, 192, 194, 255, 265, 266, 268, 269, 289, 318, 321, 322, 326, 335, 340], "collector": 322, "color": [199, 204, 211, 222, 232, 233, 257], "color_primari": [103, 257, 317], "color_primmari": 257, "color_trc": [103, 257, 317], "colorspac": [103, 257, 317], "com": [13, 103, 318], "combin": [6, 7, 160, 224, 225, 226, 230, 252, 260, 261, 321], "come": [4, 319, 331, 332], "comlet": 319, "command": [14, 15, 159, 161, 191, 297, 316, 317, 327], "common": [3, 10, 92, 98, 199, 211, 252, 319, 330, 336, 340, 342], "commonli": [270, 331], "commun": [2, 7, 165, 301, 302, 331, 336], "compar": [4, 14, 15, 158, 163, 223, 231, 271, 330, 335], "comparison": 158, "compat": [6, 7, 187], "compet": [3, 340], "compil": [19, 246, 247, 248, 253, 327, 337], "complement": 4, "complet": [1, 3, 5, 14, 15, 160, 161, 164, 233, 244, 261, 267, 271, 278, 291, 297, 319, 320, 323, 331, 334, 335, 337, 339, 342], "complex": [1, 3, 5, 13, 160, 261, 270, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 319], "complic": [3, 319], "compon": [6, 160, 199, 327, 331, 334, 343], "comport": 324, "compos": [3, 158, 164, 261, 325, 326, 331, 334, 336, 340], "composit": [6, 244, 326, 331, 332, 338], "comprehens": [15, 160], "compress": [7, 16, 200, 202, 257, 340], "compression_level": [103, 202, 257], "compris": 199, "comput": [3, 4, 9, 10, 15, 19, 205, 244, 319, 332, 336, 337, 339, 340, 342, 343], "computation": 341, "con": [4, 329], "conccur": [3, 319], "conceptu": 331, "concern": [3, 5, 319], "concret": [1, 244], "concurr": [1, 2, 5, 6, 7, 13, 14, 15, 16, 18, 19, 158, 159, 160, 161, 164, 260, 261, 263, 264, 265, 270, 291, 298, 318, 321, 324, 326, 329, 331, 332, 335, 338, 341, 343], "condit": [228, 324, 327], "conduct": [339, 343], "confid": [14, 15], "confidence_interv": 15, "confidence_level": 15, "config": [11, 14, 16, 32, 82, 104, 105, 160, 184, 191, 209, 211, 214, 235, 237, 270, 284, 285, 287, 289, 290, 291, 292, 301, 302, 317, 326], "config_nam": 17, "config_path": 17, "configur": [14, 15, 17, 18, 158, 160, 161, 171, 181, 183, 191, 193, 197, 226, 242, 260, 272, 274, 275, 276, 277, 286, 288, 290, 292, 293, 294, 295, 298, 316, 317, 320, 331, 332], "confus": 10, "connect": [9, 261, 270, 282, 325], "consequ": [334, 335], "consid": [261, 291, 332, 334], "consider": 334, "consist": [6, 9, 10, 14, 223, 260, 267, 293, 318, 324, 331, 335, 336, 342], "consol": [266, 269], "const": [11, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 49, 51, 61, 62, 64, 68, 69, 70, 71, 80, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 113, 115, 117, 118], "constrain": [13, 161, 320], "constraint": [3, 4, 5, 319, 324, 334, 341, 343], "construct": [13, 101, 103, 185, 218, 219, 220, 222, 236, 318, 322, 324, 340, 341, 343], "constructor": 13, "consum": [3, 5, 10, 89, 161, 206, 207, 231, 265, 322, 331, 335, 336, 339, 340, 341], "consumpt": [165, 335], "contain": [14, 15, 18, 101, 174, 184, 190, 200, 214, 223, 228, 237, 244, 261, 264, 291, 298, 307, 309, 318, 322, 327, 331, 335], "content": [14, 222, 223, 340], "contents_view": 223, "context": [3, 4, 92, 191, 259, 260, 263, 266, 267, 297, 299, 316, 319, 320, 322, 324, 334, 335, 343], "contextlib": [19, 159, 267, 316], "contextmanag": 267, "contigu": [14, 108, 186, 331], "continu": [9, 313, 317, 318, 323], "contract": 5, "control": [297, 334, 340], "convent": [6, 322, 324], "convers": [7, 19, 41, 47, 54, 59, 62, 63, 64, 65, 84, 105, 157, 168, 178, 199, 211, 233, 236, 317, 331, 335], "convert": [2, 4, 5, 6, 9, 14, 103, 158, 164, 172, 173, 175, 185, 189, 193, 198, 199, 201, 203, 204, 219, 233, 237, 238, 239, 240, 241, 257, 261, 291, 314, 315, 317, 319, 324, 325, 331], "convert_fram": [6, 11, 49, 82, 86, 93, 105, 158, 159, 164, 184, 205, 224, 225, 226, 230, 317, 318, 331], "convertible_to": [99, 113, 114], "convin": 191, "convolut": 334, "cooper": 334, "copi": [4, 7, 103, 165, 168, 178, 194, 228, 244, 324, 331], "copyright": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318], "core": [1, 10, 11, 21, 40, 42, 43, 44, 82, 83, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 117, 118, 157, 167, 324, 340], "corefil": [84, 105], "corenamespac": [83, 105], "coro": 283, "coroutin": [5, 55, 99, 283, 324, 334], "coroutine_handl": [99, 113], "coroutinu": 334, "corpor": 327, "correct": 252, "correspond": [14, 18, 103, 191, 199, 200, 202, 206, 207, 208, 252, 308, 334, 335], "cost": [4, 7, 332, 337], "could": [3, 5, 10, 103, 319, 325, 339], "count": [14, 15, 194, 322, 335], "counter": [74, 104, 253], "coupl": [7, 331], "cours": [2, 335], "cover": [4, 8, 174, 200, 222, 260, 261, 302, 327, 332], "cpp": 93, "cpu": [4, 7, 9, 10, 108, 161, 177, 205, 217, 242, 243, 244, 316, 318, 332, 339, 340, 341, 343], "cpu_buff": [11, 47, 82, 86, 91, 105, 164], "cpu_count": 4, "cpu_storag": [164, 177, 203, 204], "cpubind": [14, 15], "cpubuff": [11, 47, 61, 82, 86, 91, 105, 121, 164, 203, 204, 224, 225, 226, 230, 242, 243, 331], "cpubufferptr": [11, 47, 61, 63, 65, 82, 86, 91, 93, 105], "cpubufferstruct": [83, 105], "cpustorag": [11, 49, 58, 61, 82, 86, 91, 93, 102, 105, 108, 118, 203, 204, 205, 226], "cpustoragetempl": [83, 105], "crash": 252, "creat": [3, 4, 7, 9, 14, 15, 17, 18, 61, 89, 92, 95, 158, 159, 160, 161, 164, 165, 189, 191, 193, 194, 206, 207, 228, 234, 244, 261, 270, 278, 283, 284, 285, 287, 289, 290, 291, 292, 297, 298, 299, 317, 318, 319, 322, 323, 324, 326, 331, 340, 341, 343], "create_main_pipelin": 160, "create_model": 19, "create_pipelin": 161, "create_reference_audio_fram": [11, 49, 82, 86, 93, 105, 172], "create_reference_video_fram": [11, 49, 82, 86, 93, 105, 198, 317], "create_sub_pipeline_1": 160, "create_sub_pipeline_2": 160, "create_test_tar": 14, "create_wav_data": 15, "creation": [6, 15, 193, 297, 331, 339], "criteria": 313, "critic": [14, 194], "crop": [193, 212, 222], "crop_bottom": [193, 212], "crop_height": [19, 222], "crop_left": [193, 212], "crop_right": [193, 212], "crop_top": [193, 212], "crop_width": [19, 222], "cstddef": [47, 58, 91, 102], "cstdint": [58, 59, 102, 103], "csv": [14, 15], "csvfile": [14, 15], "cuda": [9, 18, 19, 158, 164, 178, 179, 180, 193, 210, 217, 224, 225, 226, 227, 230, 233, 237, 239, 242, 243, 244, 246, 316, 318, 324, 327, 337], "cuda_array_interfac": [178, 239], "cuda_buff": 164, "cuda_config": [18, 19, 164, 180, 193, 205, 212, 316, 318, 325], "cuda_device_index": 164, "cuda_index": 316, "cuda_stream": [164, 205, 208, 316], "cudaarrayinterfac": 239, "cudabuff": [164, 193, 210, 212, 224, 225, 226, 227, 230, 232, 233, 237, 241, 242, 243], "cudaconfig": [18, 19, 193, 208, 210, 212, 224, 226, 227, 230, 232, 233, 237, 242, 316], "cudastorag": 102, "cum": 326, "cumbersom": 3, "current": [3, 236, 250, 274, 275, 276, 277, 301, 302, 319, 331, 339, 343], "current_except": 99, "currentmodul": [159, 160], "custom": [104, 159, 161, 184, 202, 208, 209, 211, 214, 217, 244, 254, 257, 261, 263, 267, 270, 289, 290, 291, 298, 321, 327], "customqueu": 159, "customtaskhook": 159, "cuviddec": 327, "cvdfoundat": 318, "cycl": 334, "cyclomat": [3, 319], "d": [14, 18, 19, 160, 161, 318], "d_empti": 335, "d_measur": 335, "daemon": 297, "data": [3, 4, 6, 8, 9, 10, 11, 13, 14, 15, 18, 19, 21, 62, 64, 66, 82, 89, 91, 93, 95, 101, 102, 105, 107, 108, 116, 118, 158, 159, 160, 161, 162, 163, 164, 165, 168, 172, 173, 174, 178, 184, 189, 190, 191, 192, 194, 199, 200, 202, 205, 206, 207, 208, 210, 217, 219, 223, 228, 229, 231, 236, 242, 243, 244, 252, 257, 259, 260, 261, 264, 265, 267, 271, 292, 295, 298, 301, 302, 303, 304, 305, 317, 318, 319, 320, 322, 323, 324, 325, 327, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343], "data_": 102, "data_format": [7, 16], "data_load": 9, "data_readi": 335, "databas": 323, "dataclass": [14, 15, 18, 244, 261, 264, 291, 318, 325], "datainterfac": [11, 45, 82, 86, 89, 105, 119], "datainterfaceptr": [11, 24, 45, 82, 86, 89, 95, 105, 107, 117], "datainterfacestruct": [83, 105], "dataload": [10, 19, 158, 322, 324, 325, 326, 329, 332, 336, 337, 342], "dataset": [4, 7, 19, 158, 159, 165, 166, 300, 301, 302, 306, 307, 318, 324, 326, 330, 331, 335, 340, 341], "dataset_dir": 159, "dataset_directori": 331, "datasourc": 16, "date": 327, "dbl": [173, 202, 206, 219], "dblp": [206, 219], "dc": 326, "ddof": [14, 15], "dead": 322, "deadlock": [3, 260, 261, 322], "deal": 10, "dealloc": 102, "deallocator_typ": [21, 102], "debug": [14, 18, 19, 101, 200, 252, 297, 318], "decai": 7, "decid": [267, 331, 334, 338], "decod": [6, 11, 18, 19, 27, 33, 41, 48, 54, 57, 59, 82, 84, 86, 92, 101, 103, 105, 110, 125, 157, 158, 159, 164, 170, 174, 175, 181, 186, 188, 190, 191, 194, 196, 199, 200, 201, 204, 210, 211, 212, 218, 220, 226, 227, 234, 235, 237, 260, 317, 324, 325, 326, 327, 329, 335, 340, 341, 343], "decode_": 316, "decode_and_flush": [11, 23, 82, 94, 105], "decode_and_preprocess": 6, "decode_concurr": 318, "decode_config": [181, 182, 211, 224, 225, 226, 230, 235], "decode_fn": 318, "decode_func": 19, "decode_imag": [6, 19, 158, 164, 331], "decode_images_nvjpeg": 19, "decode_packet": [6, 158, 159, 164, 182, 194, 205, 224, 225, 226, 230, 235, 318, 331], "decode_packets_nvdec": [193, 318], "decode_video": 318, "decode_video_nvdec": 318, "decodeconfig": [11, 23, 59, 82, 86, 94, 103, 105, 182, 209, 211, 224, 225, 226, 230, 235], "decodeconfigstruct": [83, 105], "decoder_opt": [11, 82, 103, 105, 110, 209], "decoderclass": [83, 105], "decoderimpl": [11, 50, 82, 87, 94, 105], "decoderimpltempl": [83, 105], "decoderptr": [11, 50, 82, 86, 94, 105], "decomposit": 6, "decompress": [336, 340], "decor": 267, "decord": 13, "decreas": [7, 14, 158], "dedic": [10, 244, 270, 324], "deduc": 331, "deetrmin": 244, "def": [2, 3, 4, 5, 6, 13, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 164, 217, 260, 267, 298, 316, 317, 318, 320, 322, 324, 325, 326, 331, 341], "default": [1, 13, 14, 15, 18, 19, 21, 22, 89, 92, 95, 99, 101, 102, 109, 113, 115, 117, 118, 158, 159, 161, 164, 184, 185, 199, 200, 209, 211, 212, 219, 222, 228, 231, 233, 234, 257, 260, 261, 266, 269, 270, 271, 274, 275, 276, 277, 279, 280, 281, 282, 283, 289, 290, 291, 297, 313, 314, 316, 318, 320, 321, 327, 331, 343], "default_alloc": [21, 102], "default_col": [158, 331], "default_dealloc": [21, 102], "defaultselector": 1, "defin": [5, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 43, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 163, 165, 261, 291, 298, 324, 325, 335, 340], "definit": [17, 103, 157, 261, 270, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 298, 299, 326], "degrad": [7, 10, 14, 161, 323, 342, 343], "degre": [3, 7, 158, 337], "degrees_freedom": 15, "del": 271, "delai": [5, 319, 322], "deleg": [3, 5, 13, 261, 291], "delet": [20, 21, 23, 25, 26, 29, 32, 90, 94, 96, 97, 98, 99, 100, 102, 104, 113, 194, 208, 322], "delete_src": 271, "delta": [266, 269], "demand": [332, 335], "demonstr": [9, 160, 161, 193, 237, 322], "demux": [6, 11, 31, 41, 45, 48, 55, 57, 59, 66, 67, 82, 84, 86, 89, 92, 101, 105, 126, 127, 157, 174, 175, 182, 183, 191, 193, 194, 200, 213, 214, 215, 216, 218, 219, 220, 222, 226, 237, 317], "demux_audio": [184, 224], "demux_config": [183, 184, 213, 215, 216, 224, 225, 226, 230], "demux_imag": [6, 158, 164, 184, 194, 205, 225, 226, 331], "demux_video": [159, 184, 193, 194, 201, 225, 230, 318], "demux_window": [11, 24, 82, 95, 101, 105], "demuxconfig": [11, 51, 59, 82, 86, 89, 95, 103, 105, 107, 117, 184, 213, 214, 215, 216, 224, 225, 226, 230], "demuxconfigtempl": [83, 105], "demuxerimpl": [31, 95], "demuxerptr": [11, 51, 66, 67, 82, 86, 95, 105], "demuxertempl": [83, 105], "den": [11, 82, 103, 105, 106], "denomin": [106, 169, 187, 195, 199, 200, 207], "denot": [174, 200], "depend": [7, 231, 252, 326, 334, 337], "depict": [1, 3, 319], "deploi": [161, 324], "depth": [11, 15, 61, 82, 91, 105, 108], "deriv": [11, 82, 105], "desc": 211, "describ": [6, 7, 158, 341], "descript": [14, 15, 18, 19, 159, 161, 164, 185, 201, 211, 218, 219, 220, 222, 226, 235, 252, 316, 317, 318], "descriptor": 256, "deseri": [4, 7, 331], "design": [9, 194, 323, 331, 334, 343], "dest": 19, "destin": [191, 266, 269, 323], "destroi": [99, 340], "destruct": 340, "destructor": 101, "detach": 334, "detail": [7, 10, 11, 13, 16, 25, 31, 46, 50, 51, 52, 53, 56, 82, 86, 90, 93, 94, 95, 96, 97, 100, 105, 163, 170, 188, 191, 196, 203, 228, 235, 237, 252, 260, 261, 267, 318, 320, 323, 326, 331, 333, 337], "detailtempl": [83, 105], "determin": [6, 273, 313, 320, 323, 337, 338], "determinist": 302, "develop": [2, 252, 318, 332, 338, 343], "deviat": 19, "devic": [18, 19, 164, 179, 180, 193, 205, 208, 210, 212, 217, 224, 225, 226, 227, 230, 233, 237, 242, 244, 316, 318, 324], "device_config": [18, 19, 210, 212, 224, 225, 226, 227, 230, 232, 233, 237, 242, 316, 318], "device_count": 316, "device_index": [18, 19, 164, 179, 193, 205, 208, 316, 318, 325], "devicendarrai": 239, "devx": 343, "di": [24, 95], "diagnost": [270, 273, 278, 298], "diagram": [1, 158, 260, 267, 297, 317, 319, 320, 325, 334, 335], "dict": [16, 159, 184, 189, 191, 209, 214, 237, 244, 251, 261, 291, 299, 308, 316], "dictat": 5, "dictconfig": 17, "dictionari": [7, 192], "dictwrit": [14, 15], "did": 10, "differ": [2, 3, 6, 7, 9, 10, 14, 15, 16, 89, 98, 158, 161, 165, 173, 191, 192, 193, 199, 222, 228, 270, 298, 319, 324, 330, 331, 332, 334, 335, 336, 337, 340, 342], "difficult": [330, 339], "dim": [19, 93], "dimens": 15, "dimension": 184, "dir": [19, 158, 159, 316], "direct": 327, "directli": [5, 6, 7, 15, 101, 210, 212, 317, 331, 332, 335], "directori": [14, 15, 16, 17, 18, 19, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 158, 159, 160, 161, 164, 307, 310, 316, 317, 318, 325], "disabl": [101, 199, 211, 261, 270, 274, 279, 280, 281, 316], "disagg": 160, "disaggreg": [17, 160, 261, 288, 292, 325, 332, 335, 341], "disaggregate_pip": 160, "disaggregateconfig": [287, 293], "discard": [6, 331], "discatd": 200, "discret": [206, 207], "discuss": [7, 338], "disjoint": [301, 302], "dispatch": [4, 324], "displai": [161, 200], "disrupt": 336, "distil": 89, "distinguish": 331, "distribut": [14, 15, 301, 327, 336, 337, 342], "divid": 340, "divis": [164, 222], "dl": 163, "dmx_cfg": [66, 67, 89, 95, 107, 117], "do": [3, 7, 9, 10, 13, 14, 103, 164, 193, 260, 267, 302, 317, 319, 322, 327, 331, 332, 336, 341, 342], "do_oper": 256, "doc": [168, 178, 240, 327], "docstr": 3, "document": [11, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 191, 218, 220, 297, 327], "doe": [1, 4, 5, 7, 15, 164, 175, 194, 199, 206, 207, 214, 218, 220, 228, 252, 261, 291, 297, 319, 320, 322, 323, 324, 326, 331, 332, 336, 337, 341, 342, 343], "domain": [7, 319], "don": [1, 3, 4, 319], "done": [1, 3, 5, 11, 31, 82, 95, 99, 105, 193, 212, 260, 270, 298, 318, 319], "doubl": [24, 31, 70, 95, 98, 101, 115, 298], "double_valu": 298, "down": [2, 3, 6, 7, 319, 340], "download": [6, 318, 320, 324, 325, 327, 335, 338, 340, 341], "download_from_remot": 7, "downsid": 324, "downstream": [3, 261, 265, 266, 291, 295, 335], "doxygen": 103, "dpi": 161, "drain": 317, "draw": 302, "drawback": 332, "drawn": 302, "driven": 323, "drop": [10, 164, 165, 219, 222, 229, 261, 267, 285, 286, 324, 331, 335, 339, 341, 343], "drop_last": [17, 19, 160, 164, 166, 261, 285, 286], "dry": 316, "dst": 191, "dtype": [15, 16, 19, 103, 192, 203, 206, 207, 217, 228, 231, 236, 318], "dtype_map": 15, "dual": 327, "due": [6, 10, 165, 193, 194, 253, 324, 335, 341], "dump": [4, 11, 26, 82, 97, 105], "durat": [15, 24, 31, 95, 184, 214, 218, 220, 231, 260, 265, 317, 335, 337], "duration_second": [15, 231], "dure": [14, 199, 259, 273, 327, 334, 335], "dynam": 327, "e": [13, 14, 15, 16, 161, 191, 202, 206, 219, 223, 244, 265, 267, 316, 319, 327, 334, 335], "each": [3, 4, 5, 6, 7, 9, 14, 15, 18, 89, 158, 161, 165, 189, 193, 199, 200, 202, 212, 237, 259, 260, 261, 263, 264, 267, 270, 280, 298, 301, 302, 313, 317, 318, 319, 324, 330, 335, 336, 340, 342], "earlier": [325, 342], "eas": 340, "easi": [3, 5, 7, 218, 220, 319, 322, 324, 332, 334, 335, 337], "easier": [332, 337], "effect": [3, 10, 261, 270, 324, 337, 339, 340], "effici": [1, 3, 4, 6, 9, 228, 229, 319, 324, 326, 328, 332, 339, 340, 341], "effort": [7, 10, 332], "either": [16, 217, 324, 325], "elabor": [297, 343], "elaps": [14, 15, 16, 18, 19, 158, 265, 316, 318, 335], "elast": 335, "elegantli": 3, "elem_class": [11, 61, 82, 91, 105, 108], "elemclass": [11, 59, 61, 82, 86, 91, 103, 105, 108], "elemclassenum": [83, 105], "element": [3, 108], "elimin": 339, "els": [1, 3, 7, 14, 15, 16, 18, 19, 103, 158, 160, 161, 289, 316, 318, 319], "embed": 314, "embed_shuffl": 302, "emit": [285, 286], "emploi": 194, "employe": 323, "empti": [193, 261, 265, 270, 316, 335], "en": 239, "enabl": [9, 18, 19, 256, 266, 269, 278, 318, 327, 331, 340, 343], "enc_height": 317, "enc_pix_fmt": 317, "enc_width": 317, "encapsul": [89, 324, 334], "encod": [11, 29, 34, 41, 54, 56, 57, 59, 82, 84, 86, 92, 100, 101, 103, 105, 128, 129, 130, 131, 132, 157, 171, 172, 191, 197, 198, 202, 206, 207, 217, 257, 317, 318], "encode_config": 217, "encodeconfig": 217, "encodeconfigbas": [11, 29, 59, 82, 86, 100, 103, 105, 152, 154], "encodeconfigbasetempl": [83, 105], "encoder_config": [29, 100, 191], "encoderclass": [83, 105], "encoderimpl": [11, 25, 52, 82, 87, 96, 105], "encoderimplstruct": [83, 105], "encoderptr": [11, 29, 52, 82, 86, 96, 100, 105, 128, 130], "encount": [2, 8, 10, 262, 334], "encourag": 334, "end": [3, 9, 160, 170, 172, 174, 175, 185, 193, 196, 198, 200, 219, 222, 231, 259, 261, 263, 314, 317, 318, 322, 327, 343], "endif": 103, "engin": [7, 193, 258, 326, 343], "enhanc": 339, "enough": [3, 10, 285, 286, 335, 340, 342], "ensur": [3, 7, 194, 244, 301, 302, 323, 324, 331, 340], "enter": 297, "enter_context": 316, "entir": [5, 7, 9, 14, 15, 184, 222, 261, 302, 330], "entri": [14, 17, 159, 160, 161], "entrypoint": [16, 18, 19, 158, 316, 317, 318], "enum": [11, 103, 157], "enumer": [17, 18, 19, 42, 43, 44, 158, 318], "env": [14, 16, 18, 158, 159, 160, 161, 317], "envelop": 331, "environ": [17, 244, 270, 273, 278, 298, 327, 331, 332, 343], "eof": 296, "eoferror": 260, "epoch": [314, 315, 324, 342], "epollselector": 1, "eprint": 326, "equal": 302, "equip": 336, "equival": [228, 314, 315, 324, 330, 331], "eras": 93, "error": [14, 89, 103, 158, 194, 226, 227, 235, 252, 262, 297, 319, 322, 324], "especi": [319, 340], "essenti": 332, "estim": [7, 163, 271, 338, 339], "etc": [15, 95], "eula": 327, "ev": [18, 318], "eval": 19, "evalu": 15, "even": [3, 7, 10, 13, 194, 228, 267, 319, 322, 331, 343], "event": [2, 3, 4, 5, 9, 18, 261, 318, 320, 322, 324, 325, 326, 334, 340, 343], "eventu": 5, "ever": 103, "everi": [1, 261, 270, 332], "evolut": [3, 319], "evolv": 319, "ex": 14, "exact": 14, "exactli": [261, 291, 325], "examin": [335, 338], "examlpl": 159, "exampl": [3, 4, 5, 6, 8, 13, 14, 15, 16, 17, 18, 103, 158, 159, 160, 161, 164, 199, 208, 217, 228, 229, 252, 257, 261, 267, 270, 284, 285, 287, 290, 291, 292, 293, 294, 295, 298, 308, 313, 316, 317, 318, 319, 320, 323, 324, 325, 326, 331, 335, 336, 340, 342], "example_benchmark_tarfil": 14, "example_benchmark_tarfile_2": 14, "example_performance_analysis_tensorboard": 159, "exceed": [219, 222], "excel": [14, 15], "except": [1, 3, 11, 14, 15, 55, 82, 99, 105, 113, 114, 258, 262, 267, 283, 309, 319], "exception_ptr": [99, 113, 114], "excess": 222, "execut": [1, 2, 4, 5, 9, 10, 13, 15, 158, 160, 164, 165, 194, 203, 228, 244, 258, 259, 260, 261, 263, 267, 268, 283, 291, 297, 298, 316, 320, 322, 324, 325, 331, 332, 334, 338, 340, 343], "executor": [1, 5, 13, 14, 15, 16, 261, 270, 291, 319, 321, 343], "exhaust": [260, 261, 291, 297, 313], "exhibit": [7, 335], "exist": [194, 325, 331, 337, 340, 343], "exit": [5, 270, 278, 297, 298, 322, 335], "exitstack": 316, "exmperiment": [210, 212], "exot": 7, "exp_spdl": 158, "exp_spdl_": 158, "exp_torch": 158, "exp_torch_": 158, "exp_torch_thread": 158, "expand": 19, "expect": [1, 5, 7, 19, 160, 163, 172, 233, 271, 332, 343], "expected_ad": 160, "expected_combined_count": 160, "expected_squar": 160, "expens": 193, "experi": [10, 324, 336, 339, 343], "experienc": 335, "experiment": [210, 212, 223, 227, 229, 297, 298, 314], "explain": [4, 9, 260, 261, 265, 266, 268, 269, 284, 323, 334], "explicit": [21, 22, 24, 25, 26, 30, 32, 92, 95, 96, 97, 99, 101, 102, 104, 113, 115, 334], "explicitli": [4, 319, 331, 334], "explor": 7, "export": [265, 266, 268, 269, 316, 323, 338, 343], "export_chrome_trac": [19, 316], "expos": [101, 159, 168, 178, 231, 331, 335], "express": [5, 169, 187, 195, 199, 207, 218, 219, 220, 221, 222], "ext": 325, "extend": [3, 15, 159, 259, 266, 319], "extens": [4, 7, 13, 191, 319, 327], "extern": [9, 95, 103, 335], "extra": [7, 236, 324, 331], "extract": [231, 317], "extract_packets_at_indic": [11, 57, 82, 86, 101, 105], "extractfil": 14, "extrem": [4, 252, 337], "f": [14, 15, 16, 17, 18, 19, 158, 160, 164, 191, 193, 214, 218, 220, 223, 229, 260, 298, 316, 317, 318, 324, 325], "face": 3, "facilit": [13, 260, 318], "fact": [3, 319], "factor": [3, 6, 161, 319, 335, 336, 337, 339, 340], "factori": [17, 91, 159, 160, 171, 177, 180, 181, 183, 191, 197, 211, 292, 323], "fail": [1, 3, 6, 10, 226, 227, 235, 267, 268, 297, 319, 324, 334], "failur": [261, 267, 270, 291, 297, 335, 342], "fairli": 1, "fals": [7, 14, 15, 16, 18, 19, 20, 21, 70, 90, 99, 101, 102, 158, 160, 164, 166, 175, 200, 228, 232, 233, 261, 278, 283, 285, 286, 297, 302, 314, 318], "famili": 327, "familiar": [2, 319], "far": [5, 102, 320], "fashion": [175, 193, 316, 317], "fast": [3, 14, 15, 165, 335, 339, 340, 342, 343], "faster": [2, 7, 10, 15, 165, 228, 265, 320, 324, 326, 331, 335, 336, 342, 343], "fastest": [14, 15, 343], "fatal": 252, "fcc": 233, "fd": [32, 104], "feasibl": [7, 341], "featur": [3, 7, 19, 319, 343], "fed": 257, "feed": 193, "feedback": 343, "fetch": [1, 3, 9, 101, 172, 193, 198, 208, 265, 297, 301, 302, 317, 319, 324, 325, 327, 331, 334, 335], "few": [13, 14, 331, 340], "fewer": [286, 331], "ffmpeg": [15, 27, 92, 93, 98, 103, 104, 175, 186, 191, 194, 201, 210, 212, 214, 218, 219, 220, 222, 250, 251, 252, 257, 327, 331], "ffmpeg_opt": 103, "fftool": 103, "field": [159, 323], "fieldnam": [14, 15], "figsiz": 161, "figur": [3, 7, 9, 10, 161, 331, 335, 336, 337, 340, 342, 343], "file": [7, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 164, 184, 191, 194, 199, 210, 217, 228, 229, 256, 260, 307, 310, 316, 317, 318, 323, 325, 326, 327, 331, 340], "file_": 14, "file_lik": 14, "file_obj": 14, "file_s": 14, "filenam": [14, 18, 19], "fileobj": 14, "filepath": 223, "fill": [99, 335, 336], "filter": [11, 14, 15, 20, 82, 90, 101, 105, 164, 175, 186, 193, 201, 206, 207, 211, 218, 219, 220, 221, 222, 226, 235, 249, 317], "filter_arg": [221, 317], "filter_desc": [15, 19, 23, 26, 68, 94, 97, 158, 159, 164, 182, 185, 211, 218, 219, 220, 222, 224, 225, 226, 230, 235, 317, 318, 331], "filter_graph": [26, 41, 54, 68, 84, 105, 133, 157, 185, 218, 220, 317], "filtergraph": [11, 53, 82, 86, 97, 105, 133, 218, 220, 236, 317], "filtergraphimpl": 97, "filtergraphptr": [11, 53, 68, 82, 86, 97, 105], "filtergraphtempl": [83, 105], "final": [2, 5, 18, 19, 158, 160, 193, 259, 266, 267, 294, 317, 318, 322, 331], "final_sink": 160, "final_suspend": [11, 82, 99, 105, 113, 114], "find": [1, 18, 164, 318, 323, 326, 335, 340], "find_fil": 325, "fine": [324, 331], "finish": [297, 320, 339], "first": [3, 98, 160, 173, 193, 202, 206, 207, 222, 244, 260, 309, 317, 319, 322, 327, 331, 337], "first_complet": [1, 3, 319], "fit": [330, 332, 343], "fix": [219, 222, 253, 335], "flamegraph": 340, "flatten": 160, "flexibl": [9, 319, 324, 332, 343], "flist": [18, 318], "float": [7, 11, 14, 15, 16, 18, 19, 44, 82, 103, 105, 158, 159, 164, 166, 173, 174, 184, 189, 199, 200, 202, 206, 213, 216, 219, 222, 224, 230, 231, 253, 260, 261, 265, 266, 268, 269, 270, 297, 299, 302, 313, 318], "float32": 231, "float64": 231, "flow": [3, 5, 9, 160, 319, 322, 323, 334], "flt": [173, 202, 206, 219], "fltp": [202, 206, 219], "flush": [11, 20, 23, 25, 26, 29, 82, 90, 94, 96, 97, 100, 105, 170, 172, 175, 182, 185, 191, 193, 196, 198, 317], "flv": 191, "fmt": [18, 19, 318, 327], "fn": [1, 3, 164, 297, 319], "fn1": [3, 319], "fn2": [3, 319], "fn3": [3, 319], "focu": 337, "follos": 297, "follow": [1, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 18, 19, 158, 159, 161, 165, 194, 202, 206, 207, 208, 217, 233, 236, 244, 252, 260, 267, 284, 297, 302, 314, 315, 317, 319, 320, 322, 323, 324, 325, 326, 327, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343], "fontsiz": 161, "fontweight": 161, "foo": [175, 182, 184, 194, 201, 217, 218], "footprint": 331, "foreground": [9, 19, 244, 334, 335], "forev": [267, 271], "forget": 322, "fork": 158, "form": [1, 200], "format": [4, 8, 11, 13, 14, 15, 18, 19, 82, 103, 105, 111, 160, 161, 164, 169, 173, 187, 189, 190, 191, 193, 195, 199, 200, 202, 206, 207, 210, 211, 212, 214, 217, 218, 219, 220, 222, 226, 227, 228, 233, 236, 237, 252, 257, 317, 318, 324, 326, 331, 335, 340], "format_opt": [11, 82, 103, 105, 111, 214], "formatter_class": [18, 19, 161], "formula": 233, "forth": 324, "fortran": 228, "fortun": [3, 319], "forward": [9, 10, 19, 99, 337], "found": [7, 14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 228, 244, 252, 297, 307, 309, 316, 317, 318, 324, 342], "foundat": [2, 319], "four": 335, "fp": [18, 19, 318], "fraction": [169, 187, 195], "frame": [6, 11, 18, 26, 35, 36, 37, 41, 47, 49, 50, 52, 53, 59, 69, 82, 84, 86, 93, 94, 96, 97, 101, 105, 134, 135, 136, 137, 138, 139, 140, 141, 157, 158, 159, 164, 170, 172, 173, 182, 184, 185, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 204, 205, 206, 207, 209, 211, 212, 218, 219, 220, 222, 226, 227, 235, 237, 257, 316, 317, 318, 325, 331], "frame_r": [22, 64, 90, 92, 93, 103, 195, 200, 207, 222, 257, 317], "frame_s": 172, "frames0": 185, "frames1": 185, "framesclass": [83, 105], "framesptr": [11, 23, 25, 54, 69, 82, 86, 94, 96, 98, 105, 134, 137, 139], "free": [4, 9, 10, 14, 15, 208, 324, 326, 331, 332, 343], "free_thread": [14, 15, 327], "frequenc": 15, "frequent": 326, "friend": 101, "from": [1, 2, 3, 4, 5, 6, 8, 9, 10, 14, 15, 16, 17, 18, 19, 89, 92, 95, 99, 101, 113, 114, 158, 159, 160, 161, 163, 164, 175, 184, 185, 186, 189, 191, 192, 193, 194, 203, 205, 212, 213, 215, 216, 219, 222, 224, 225, 226, 228, 230, 231, 235, 237, 251, 260, 261, 265, 266, 267, 270, 271, 283, 289, 290, 291, 297, 298, 299, 302, 307, 308, 309, 313, 314, 315, 316, 317, 318, 319, 322, 324, 325, 326, 329, 332, 334, 335, 336, 337, 340, 341, 342, 343], "from_numpi": 16, "from_promis": 99, "fromarrai": 316, "fromfil": 228, "front": 327, "frozen": 15, "ft": 327, "fulfil": 334, "full": [99, 322, 335], "fullscreen": 191, "func": [3, 14, 15, 16, 18, 19, 158, 160, 161, 316, 317, 318, 319], "func_nam": 14, "function": [1, 2, 3, 5, 6, 9, 10, 11, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 89, 91, 107, 108, 109, 113, 114, 115, 117, 118, 157, 162, 163, 164, 165, 167, 171, 176, 177, 179, 180, 181, 183, 185, 186, 191, 193, 194, 197, 203, 205, 206, 207, 208, 211, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 244, 245, 257, 258, 261, 263, 270, 271, 272, 280, 284, 289, 290, 291, 292, 298, 299, 306, 307, 312, 319, 320, 322, 323, 324, 325, 326, 331, 332, 334, 335, 338, 339, 343], "function_nam": [14, 15], "functool": [14, 18, 159, 297, 324, 325], "fundament": [3, 319], "further": [6, 9, 206, 207], "futur": [1, 2, 4, 5, 13, 14, 15, 16, 252, 261, 291, 302, 332], "future1": [3, 319], "future2": [3, 319], "future3": [3, 319], "futures1": 3, "futures2": 3, "g": [13, 14, 15, 161, 191, 202, 233, 316], "gael": 326, "gain": [163, 271, 338, 339, 342], "garbag": [194, 255, 322], "gather": 335, "gb": 14, "gcc": 327, "gen": 95, "geneartor": [261, 291], "gener": [5, 7, 9, 11, 14, 15, 16, 18, 30, 41, 51, 57, 82, 83, 84, 86, 95, 101, 105, 157, 160, 161, 163, 164, 165, 166, 172, 194, 198, 203, 211, 214, 228, 258, 260, 261, 267, 283, 291, 295, 297, 302, 313, 318, 319, 324, 331, 334, 335], "generatorstruct": [83, 105], "get": [1, 3, 7, 10, 14, 15, 19, 95, 98, 101, 158, 185, 199, 200, 221, 249, 250, 251, 259, 260, 265, 266, 273, 274, 275, 276, 277, 289, 301, 302, 308, 313, 317, 322, 326, 331, 334, 338], "get_abuffer_desc": 185, "get_audio_filter_desc": [211, 221], "get_bit_r": [11, 22, 82, 92, 105], "get_bits_per_sampl": [11, 22, 82, 92, 105], "get_buffer_desc": 185, "get_channel_layout": [11, 22, 82, 92, 105], "get_codec": [11, 20, 82, 90, 105], "get_codec_id": [11, 22, 82, 92, 105], "get_data_from_remot": 9, "get_dataload": 19, "get_decode_func": 19, "get_default_codec": [11, 24, 82, 95, 105], "get_default_stream_index": [11, 24, 82, 95, 105], "get_ffmpeg_filt": [11, 60, 82, 86, 104, 105], "get_ffmpeg_log_level": [11, 60, 82, 86, 104, 105], "get_ffmpeg_vers": [11, 60, 82, 86, 104, 105], "get_filter_desc": [159, 164, 211, 317, 318], "get_fmt_ctx": [11, 82, 89, 105, 109], "get_fram": [11, 26, 82, 97, 98, 105, 185, 218, 220, 317], "get_frame_r": [11, 22, 82, 92, 105], "get_frame_s": [11, 25, 82, 96, 105], "get_handle_for_remot": 7, "get_height": [11, 22, 82, 92, 98, 105], "get_id": 98, "get_interfac": [11, 82, 89, 105, 107, 117], "get_item": [260, 334], "get_iter": [17, 18, 260, 318, 322, 341], "get_map": 307, "get_media_format_nam": 98, "get_metadata": 98, "get_mock_data": 16, "get_model": 19, "get_nam": [11, 22, 82, 92, 105], "get_next_task": [1, 3, 319], "get_nowait": 334, "get_num_channel": [11, 22, 82, 92, 98, 105], "get_num_fram": 98, "get_num_plan": 98, "get_packet": [11, 30, 82, 101, 105], "get_paramet": [11, 22, 82, 92, 105], "get_pipelin": [16, 18, 318, 322], "get_pix_fmt": [11, 22, 82, 92, 105], "get_pt": [98, 199], "get_pytorch_dataload": 165, "get_rank": [301, 302], "get_return_object": [11, 82, 99, 105, 113, 114], "get_running_loop": [4, 159, 324], "get_sample_aspect_ratio": [11, 22, 82, 92, 105], "get_sample_fmt": [11, 22, 82, 92, 105], "get_sample_r": [11, 22, 82, 92, 98, 105], "get_siz": 102, "get_time_bas": [11, 22, 82, 92, 98, 105], "get_timestamp": [11, 57, 82, 86, 98, 101, 105, 199, 200], "get_video_filter_desc": [19, 158, 211, 221, 331], "get_width": [11, 22, 82, 92, 98, 105], "get_world_s": [301, 302], "getattr": 14, "getlogg": [14, 18, 19, 158, 160, 161, 318], "getmemb": 14, "getter": 92, "getvalu": [14, 15, 228], "gil": [3, 4, 5, 7, 9, 10, 14, 15, 161, 229, 323, 324, 326, 331, 332, 340, 343], "github": [103, 318], "give": [7, 193, 261, 291, 331, 332, 340, 343], "given": [15, 16, 18, 19, 95, 158, 159, 163, 170, 188, 193, 196, 203, 206, 207, 212, 217, 221, 222, 233, 236, 242, 243, 244, 260, 261, 267, 270, 271, 291, 297, 299, 302, 313, 316, 318, 320, 324, 325], "glob": [164, 325], "global": [9, 13, 14, 297], "global_step": 159, "glog": [104, 327], "go": [1, 3, 6, 295, 297, 319, 323, 331, 332, 336, 340], "goal": [9, 335, 338, 339, 343], "goe": [1, 5, 322], "gokul": 326, "good": [10, 15, 322, 331, 332, 337], "gop": 257, "gop_siz": [103, 257], "got": 160, "govern": [7, 336], "gpl": 327, "gpu": [3, 7, 8, 10, 18, 19, 158, 164, 193, 203, 205, 210, 212, 242, 244, 316, 319, 324, 325, 327, 331, 335, 336, 339, 340, 341, 343], "gpu_transf": [324, 335, 341], "grai": 236, "granular": 340, "graph": [160, 185, 206, 207, 218, 220, 317, 337], "gray16": 207, "gray16b": 236, "gray16l": 236, "gray8": [207, 217, 222], "grayscal": 207, "great": 10, "greater": 302, "grid": 161, "group": [160, 343], "grow": [14, 331], "guarante": [14, 200, 343], "guid": [8, 159, 323, 326], "gunasekaran": 326, "gz": 316, "h": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 191, 204, 207, 210, 233, 317, 318, 327], "h264": [11, 42, 82, 103, 105, 175, 193, 201], "h_": [11, 82, 99, 105, 113], "ha": [3, 4, 5, 7, 15, 165, 184, 185, 193, 211, 219, 222, 231, 238, 239, 240, 241, 261, 265, 267, 270, 285, 286, 297, 319, 324, 331, 334, 335, 342], "had": [1, 265, 336], "halt": [261, 270], "hand": [158, 335], "handi": 101, "handl": [1, 2, 3, 4, 7, 9, 10, 19, 160, 172, 222, 259, 266, 298, 319, 324], "handle_typ": [11, 82, 99, 105, 113], "handler_stop_sign": [18, 318], "handrol": 19, "hang": 322, "happen": [1, 5, 103, 193, 244, 322, 331, 336, 340, 342], "hard": 327, "hardwar": [9, 191, 193, 318, 324, 327, 341, 342], "has_audio": [11, 24, 82, 95, 105, 184], "hasattr": [315, 324], "have": [3, 4, 5, 6, 9, 10, 175, 211, 214, 261, 270, 291, 297, 319, 320, 324, 332, 334, 336, 337, 340], "head": 19, "header": [14, 92, 101, 103, 214, 228, 252, 327], "headspac": [7, 10, 326, 338], "height": [18, 19, 103, 159, 164, 187, 189, 190, 194, 195, 199, 200, 204, 205, 212, 217, 222, 226, 227, 233, 236, 237, 257, 316, 317, 318, 325], "held": [7, 340], "hell": [3, 319], "help": [7, 14, 15, 158, 161, 205, 259, 297, 316, 319, 324, 331, 335, 336, 337, 340, 343], "helper": [3, 4, 6, 101, 163, 185, 319], "here": [3, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 172, 193, 267, 297, 316, 317, 318, 319, 322, 331, 332, 335], "hevc": [11, 42, 82, 103, 105, 193], "hfile": [84, 105], "hide": 327, "high": [4, 7, 13, 15, 319, 331, 332, 339, 343], "higher": [158, 318, 330, 331, 335, 336], "highest": 7, "highli": [10, 343], "hira": 326, "hira2025scalableperformantdataload": 326, "hit": [161, 339], "hold": [4, 5, 7, 14, 27, 161, 175, 186, 194, 323, 326, 331, 340], "home": [39, 40, 41, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157, 158], "hook": [261, 263, 267, 270, 274, 276, 279, 281, 298], "hook_class": 279, "hook_factori": 159, "hope": 319, "hour": [9, 337], "how": [1, 2, 3, 4, 5, 7, 9, 16, 17, 158, 159, 161, 193, 222, 237, 260, 261, 265, 266, 267, 268, 269, 270, 273, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 298, 316, 317, 319, 320, 322, 323, 324, 325, 326, 330, 331, 332, 334, 337, 338, 339, 340, 342], "howev": [2, 3, 5, 7, 10, 13, 165, 194, 199, 228, 252, 267, 327, 334, 339, 340, 341, 342], "html": [16, 103, 159, 168, 175, 178, 191, 201, 218, 220, 222, 239, 240], "http": [13, 95, 103, 168, 175, 178, 191, 201, 218, 220, 222, 239, 240, 257, 318, 326, 343], "huge": 331, "huggingfac": 332, "hydra": 326, "hydra_full_error": 17, "hydra_integr": 17, "hypothet": 320, "hz": 15, "i": [1, 3, 5, 6, 7, 9, 10, 14, 15, 16, 17, 18, 19, 29, 74, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 158, 159, 160, 161, 163, 164, 165, 167, 169, 173, 174, 175, 184, 185, 187, 189, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 214, 219, 222, 223, 228, 229, 231, 232, 233, 234, 237, 244, 246, 247, 248, 252, 253, 257, 259, 260, 261, 263, 265, 266, 267, 269, 270, 271, 273, 274, 278, 280, 281, 283, 291, 292, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 307, 308, 309, 313, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342], "icicl": 1, "id": [11, 18, 82, 98, 101, 105, 115, 307, 308, 309, 318], "idea": 337, "ideal": [334, 343], "ident": 318, "identif": 335, "identifi": [161, 184, 226, 259, 298, 335, 336, 338, 340, 343], "idl": 9, "iglob": 164, "ignor": [14, 15, 16, 19, 159, 297, 302, 313, 317], "ih": 317, "illeg": 252, "illustr": [2, 3, 9, 10, 158, 160, 218, 220, 260, 261, 267, 270, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 317, 319, 320, 324, 325, 331, 335, 336, 337], "ilsvrc2012": 308, "imag": [6, 7, 9, 11, 14, 15, 16, 19, 43, 82, 92, 98, 101, 103, 105, 122, 134, 135, 145, 151, 158, 159, 161, 164, 184, 187, 188, 189, 190, 194, 201, 207, 210, 211, 215, 217, 220, 222, 225, 226, 227, 233, 236, 257, 307, 316, 318, 325, 326, 329, 332, 339, 343], "image_codec": 184, "image_dataload": [18, 318], "image_dataloading_chart": 18, "imagecodec": [11, 48, 82, 86, 92, 105, 182, 184, 190, 220], "imagedecod": 182, "imagefram": [6, 11, 54, 82, 86, 98, 105, 164, 185, 188, 194, 199, 204, 211, 331], "imageframesptr": [11, 54, 82, 86, 98, 105, 138], "imagenet": [18, 158, 318, 326, 331], "imagenet_classif": 19, "imagenet_classification_chart": 19, "imagepacket": [11, 57, 82, 86, 101, 105, 184, 188, 194, 201, 211, 215, 221, 235], "imagepacketsptr": [11, 57, 82, 86, 101, 105, 150], "imaginari": 325, "img": [16, 217, 316], "immedi": [261, 291, 317, 335, 336], "impl": [16, 89, 93], "implement": [1, 2, 5, 6, 10, 14, 15, 89, 93, 158, 163, 164, 165, 167, 168, 176, 178, 179, 184, 192, 193, 194, 212, 228, 229, 236, 238, 239, 240, 241, 258, 261, 267, 270, 299, 312, 319, 320, 325, 326, 328, 330, 331, 333, 337], "import": [1, 2, 4, 5, 6, 7, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 164, 214, 217, 260, 289, 298, 316, 317, 318, 322, 323, 324, 325, 330, 331, 335, 337, 338, 341, 343], "impos": 4, "imposs": 334, "improp": 2, "improv": [4, 7, 9, 10, 158, 161, 323, 331, 332, 337, 339, 343], "in0": 185, "in1": 185, "in_ord": 166, "inact": 297, "inc": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318], "includ": [7, 14, 15, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157, 158, 160, 236, 261, 264, 270, 271, 313, 317, 335, 337, 343], "incom": [182, 285, 286, 287, 288, 292], "incompat": 194, "inconsist": [8, 9], "incorpor": [327, 343], "increas": [3, 158, 319, 331, 332, 335, 336, 339, 340], "increment": [7, 14, 182, 212], "indefinit": [164, 260], "independ": [3, 4, 15, 161, 205, 260, 298, 319, 332, 335], "index": [18, 19, 98, 101, 115, 159, 179, 184, 208, 253, 261, 270, 308, 316, 318, 324, 326], "indic": [24, 71, 89, 95, 101, 165, 184, 235, 301, 302, 308, 335, 342], "individu": [6, 10, 160, 164, 301, 302], "individual_valu": 160, "ineffici": [10, 324, 331, 340], "inevit": 332, "inf": [19, 318], "infer": [8, 19, 244, 326], "infinit": 315, "info": [14, 18, 19, 92, 159, 160, 161, 252, 316, 318], "inform": [14, 15, 92, 101, 175, 193, 252, 323, 335], "inherit": [11, 82, 105, 261, 270], "init": [11, 32, 82, 104, 105, 193, 237, 259, 266], "init_glog": [11, 60, 82, 86, 104, 105], "init_resourc": 13, "init_trac": [11, 60, 82, 86, 104, 105], "initarg": 13, "initi": [4, 13, 101, 165, 175, 182, 193, 259, 260, 261, 267, 270, 297, 301, 302, 314, 316, 324, 331, 332, 334], "initial_suspend": [11, 82, 99, 105, 113, 114], "initialization_fail": 297, "initialization_succeed": 297, "inlin": [113, 114], "inner": 5, "inocm": 291, "inou": 326, "inovk": [261, 291], "inprop": 319, "input": [3, 4, 7, 9, 14, 15, 18, 19, 89, 160, 161, 164, 165, 175, 201, 206, 207, 218, 220, 227, 233, 235, 244, 257, 261, 289, 290, 291, 295, 296, 313, 316, 317, 318, 320, 324, 331, 335], "input0": 185, "input1": [3, 185], "input2": 3, "input_fil": 316, "input_flist": [18, 318], "input_height": 317, "input_path": [317, 325], "input_pix_fmt": 317, "input_queu": [289, 290], "input_width": 317, "insert": 335, "insid": [261, 267, 291, 331], "insight": [9, 332], "instabl": 332, "instal": 326, "instanc": [13, 163, 182, 194, 234, 261, 267, 270, 281, 291, 317, 322, 323, 324, 331], "instant": 15, "instanti": [17, 19, 165, 193, 234, 260, 261, 270, 284], "instead": [1, 2, 3, 6, 7, 13, 14, 173, 194, 219, 319, 334, 337], "instruct": [297, 327], "int": [6, 11, 14, 15, 16, 18, 19, 22, 23, 24, 25, 29, 31, 32, 44, 62, 64, 74, 76, 79, 82, 92, 93, 94, 95, 96, 98, 100, 101, 103, 104, 105, 106, 111, 115, 116, 158, 159, 160, 161, 163, 164, 165, 166, 169, 172, 173, 174, 179, 184, 187, 189, 190, 191, 192, 193, 195, 199, 200, 202, 205, 206, 207, 208, 210, 212, 214, 219, 222, 223, 226, 227, 232, 233, 235, 237, 250, 251, 252, 253, 256, 257, 259, 261, 263, 265, 266, 268, 270, 271, 273, 283, 285, 286, 291, 294, 297, 298, 299, 301, 302, 303, 305, 307, 308, 311, 313, 314, 315, 316, 317, 318, 324], "int16": [15, 231], "int32": [15, 231], "int64": [19, 203], "int64_t": [22, 62, 64, 73, 92, 93, 98, 101, 104, 116], "integ": [7, 160, 161, 173, 202, 203, 206, 207, 236, 298], "integr": [9, 318, 326, 327, 334], "intend": [4, 92, 163, 164, 203, 205, 244, 259, 271, 327, 332, 337, 343], "intens": [9, 340, 341], "inter": [2, 7, 165, 320, 324, 331, 334], "interact": [5, 7, 13, 334], "interest": [7, 340], "interfac": [6, 7, 89, 102, 164, 168, 176, 178, 179, 192, 231, 238, 239, 240, 241, 297, 325, 331], "interleav": [207, 233, 237], "intermedi": [3, 7, 14, 164, 319, 326], "intern": [101, 103, 169, 170, 172, 175, 186, 187, 193, 194, 195, 196, 214, 235, 317, 319, 322, 324, 331, 335], "internalerror": [11, 59, 82, 86, 103, 105], "internalerrorclass": [83, 105], "interpret": [7, 13, 14, 159, 184, 206, 298, 322, 324], "interpreterpoolexecutor": 3, "interrupt": [18, 318, 322, 324, 340], "interst": 319, "interv": [14, 15, 159, 261, 266, 269, 270, 283], "interval_stats_callback": [159, 266, 269, 323], "interweav": 173, "intra": [320, 334], "introduc": [2, 3, 5, 208, 319, 320, 326], "introduct": [3, 10, 13, 326], "introductori": 2, "intuit": [339, 343], "invalid": [6, 231, 261, 291], "invent": 319, "invers": 10, "invoc": [324, 335, 340], "invok": [1, 3, 194, 268, 319], "involv": [4, 9, 319, 332, 341], "io": [4, 6, 7, 14, 15, 16, 18, 19, 101, 158, 159, 164, 260, 316, 317, 318, 319, 324, 325, 326, 327, 331, 333, 340], "irrelev": [187, 320], "is_avail": 316, "is_eof": 289, "is_free_thread": [14, 15], "is_pin": [11, 21, 82, 102, 105], "is_set": [18, 318], "isfil": 14, "isfileobj": [7, 228], "isinst": [16, 160, 317], "isol": 158, "issu": [2, 3, 7, 10, 199, 261, 291, 297, 319, 324, 332, 334, 335, 338, 342], "ite": 322, "item": [3, 6, 7, 13, 16, 17, 19, 158, 159, 160, 161, 164, 192, 260, 261, 264, 265, 266, 271, 273, 285, 286, 287, 288, 289, 290, 291, 296, 297, 298, 313, 318, 319, 320, 322, 324, 325, 331, 335], "iter": [3, 6, 14, 15, 16, 18, 19, 101, 158, 159, 163, 164, 165, 184, 192, 223, 237, 260, 261, 263, 271, 284, 291, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 318, 323, 324, 325, 337, 341, 343], "iter_": 19, "iter_data": [11, 30, 82, 101, 105], "iter_tarfil": 14, "iter_tarfile_benchmark_result": 14, "iter_tarfile_builtin": 14, "iterablewithshuffl": [307, 311, 314, 315], "iterate_in_subprocess": [299, 324], "iteration_finish": 297, "iteration_start": 297, "iteratoin": 302, "iterator_fail": 297, "iterator_success": 297, "itnerptet": 7, "its": [3, 5, 15, 16, 18, 19, 158, 193, 194, 223, 317, 318, 319, 320, 327, 331, 334, 336, 337, 343], "itself": [5, 7, 13, 331, 343], "ivar": 165, "iw": 317, "j": 326, "javascript": [3, 319], "jax": [238, 327], "job": [3, 5, 7, 194, 319, 320], "join": [158, 260, 317, 325, 334], "joseph": 326, "jpeg": [18, 164, 210, 331], "json": [19, 316], "just": [3, 187, 337], "k": [16, 159, 166, 202, 319, 331, 332], "k400": 318, "kb": 14, "keep": [3, 4, 6, 7, 8, 16, 194, 271, 319, 324, 334, 339, 341], "kei": [6, 9, 161, 185, 192, 199, 331, 343], "kept": 331, "kernel": [7, 9, 10, 203, 233, 324, 337, 339], "keyword": [2, 267, 326, 340], "kick": [194, 283], "kill": 322, "kilo": 256, "kind": [3, 323, 325], "kinet": 318, "kinetics400": 318, "know": [1, 193, 331, 334], "known": [7, 260, 261], "kqueueselector": 1, "krishnamoorthi": 326, "krishnan": 326, "kwarg": [158, 184, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 225, 226, 227, 230, 236, 242, 260, 299], "l00058": 103, "l1550": 103, "label": [16, 19, 161, 203, 218, 220, 308], "lambda": [15, 158, 161, 316, 322], "lan": 326, "languag": [13, 17, 320], "larg": [4, 335, 342], "larger": [252, 265], "largest": 335, "last": [3, 7, 15, 98, 194, 202, 206, 222, 261, 285, 286, 316, 335], "last_total_count": 14, "later": [7, 159, 185, 218, 220, 319, 323, 335, 337, 342], "latest": [178, 335], "launch": [4, 7, 10, 18, 233, 318, 324, 337, 339], "lavfi": 214, "layout": [169, 206, 207], "lbl": 16, "le": 326, "lead": [3, 252, 322, 335], "learn": [10, 159], "least": [3, 331], "leav": [322, 332], "legend": 161, "legn": 335, "len": [3, 4, 14, 18, 158, 160, 161, 223, 316, 317, 318, 331], "length": [14, 163, 302], "less": [193, 261, 285, 324, 334, 335], "let": [1, 3, 4, 5, 175, 193, 209, 317, 319, 320, 322, 324, 331, 336], "level": [1, 4, 13, 14, 18, 19, 159, 160, 161, 202, 250, 252, 257, 264, 298, 316, 318, 320, 331, 336], "levelnam": [14, 18, 19, 160, 161, 318], "leverag": [7, 9], "lgpl": 327, "lib": [7, 192, 194, 228], "libav": 252, "libavcodec": 251, "libavdevic": 251, "libavfilt": 251, "libavformat": 251, "libavutil": [101, 103, 251], "libopenh264": 209, "librari": [4, 7, 13, 15, 178, 231, 246, 247, 248, 251, 319, 320, 324, 327, 332, 343], "libsndfil": 15, "libsoundfil": [15, 231], "libspdl": [39, 41, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157, 327], "libspdldirectori": [84, 105], "licens": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318, 327], "life": 334, "lifetim": [89, 194], "light": 340, "lighter": 4, "lightweight": [260, 261, 325, 335], "like": [1, 3, 4, 6, 7, 9, 10, 13, 14, 18, 19, 103, 161, 176, 178, 179, 192, 218, 220, 257, 319, 320, 325, 331, 334, 337, 340], "limit": [3, 7, 10, 193], "line": [14, 15, 18, 159, 161, 194, 316, 317, 318, 325, 330], "line_numb": [18, 318], "linear": 257, "lineno": [18, 19], "linestyl": 161, "linewidth": 161, "link": [327, 336], "linspac": 15, "linux": [1, 327], "list": [6, 11, 13, 14, 15, 16, 18, 19, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 157, 158, 159, 160, 161, 164, 166, 175, 191, 193, 199, 200, 201, 202, 203, 204, 226, 227, 232, 233, 235, 237, 244, 249, 260, 261, 270, 287, 288, 289, 291, 297, 298, 299, 302, 313, 316, 318, 323, 324, 325, 326, 331, 341], "list_bucket": 325, "listen": 191, "literalinclud": 17, "littl": [7, 10], "live": [191, 335], "load": [3, 4, 6, 8, 9, 10, 13, 14, 15, 16, 18, 19, 158, 162, 163, 164, 224, 225, 226, 227, 228, 229, 230, 237, 246, 247, 248, 271, 318, 319, 320, 324, 325, 330, 331, 332, 336, 337, 338, 339, 340, 341, 342, 343], "load_audio": [15, 231], "load_fn": 16, "load_imag": 260, "load_image_batch": [6, 18, 325], "load_npi": [7, 16], "load_npy_spdl": 16, "load_npz": [7, 15, 16, 192, 340], "load_npz_spdl": 16, "load_path_from_fil": 325, "load_sf": 15, "load_spdl_audio": 15, "load_spdl_wav": 15, "load_torch": 16, "load_wav": [14, 15], "loader": [10, 15, 18, 19, 158, 163, 165, 271, 330, 331, 337, 341], "loc": [15, 161], "local": [18, 19, 158, 184, 234, 244, 307, 310, 322, 323, 324, 332], "local_rank": 244, "localhost": 191, "locat": [7, 184, 260, 267, 283, 323, 325, 336], "lock": [13, 14, 164, 244, 322], "log": [14, 18, 19, 158, 159, 160, 161, 250, 252, 261, 266, 267, 269, 270, 283, 298, 316, 318, 323, 327, 336], "log_cancel": 283, "log_dir": 159, "log_interv": 159, "log_level": 14, "logger": [18, 19, 160, 161, 318], "logic": [163, 164, 259, 261, 266, 267, 270, 297, 299, 317, 322, 331, 340], "logic_error": [28, 103], "loglevel": 252, "long": [13, 161, 193, 194, 237, 335], "longer": [5, 9, 14, 15, 194, 265, 335, 337], "longest": 340, "look": [1, 2, 3, 5, 6, 7, 9, 252, 319, 320, 322, 325, 331, 336, 339, 340], "loop": [2, 3, 4, 5, 7, 9, 18, 19, 261, 291, 318, 320, 322, 324, 325, 326, 333, 335, 337, 339, 340, 343], "loss": [10, 337, 342], "losslessli": 252, "lot": [3, 15, 319, 340], "low": [1, 4, 13, 15, 320], "lower": [14, 15, 339], "m": [160, 233, 337], "machin": 336, "maco": [1, 327], "made": [3, 158, 194, 334, 340], "magic": [3, 319], "mai": [3, 252, 305, 319, 335], "main": [1, 3, 4, 7, 9, 10, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 165, 208, 260, 316, 317, 318, 319, 324, 331, 340], "main_pipeline_config": 160, "mainli": [200, 324, 325], "maintain": [160, 222, 317, 319, 324], "maintan": 7, "major": [14, 15, 320, 331, 332], "make": [1, 3, 4, 5, 7, 10, 89, 165, 191, 205, 206, 207, 218, 220, 261, 267, 291, 319, 322, 324, 326, 327, 330, 331, 332, 334, 335, 336, 337, 338, 340, 341, 343], "make_demux": [11, 51, 82, 86, 95, 105], "make_filter_graph": [11, 53, 82, 86, 97, 105], "malinovskyi": 326, "manag": [3, 4, 9, 95, 101, 180, 191, 208, 259, 260, 263, 266, 267, 319, 320, 322, 334, 337], "mani": [3, 4, 7, 10, 13, 14, 273, 319, 320, 325, 331, 336, 337, 340, 341, 342], "manipul": [297, 299, 324], "manipult": 297, "manner": [2, 5, 7, 10, 227, 244, 297, 317, 324, 331, 334, 339], "manual": [3, 325, 327], "map": [6, 18, 31, 59, 73, 95, 103, 104, 156, 164, 165, 192, 233, 251, 291, 308, 318, 327, 331], "mapiter": 164, "margin": 14, "mark": 3, "marker": 161, "martin": 326, "match": [16, 192, 193, 199, 206, 207, 217, 219, 222, 236, 302, 317, 335], "matplotlib": 161, "matrix": [233, 318], "max": [18, 19, 158, 161, 318], "max_amplitud": 15, "max_b_fram": [103, 257], "max_batch": 19, "max_bfram": 257, "max_failur": [261, 270, 291, 299], "max_item": 158, "max_sampl": [18, 318], "max_work": [3, 13, 14, 15, 319, 324], "maxim": [9, 319], "maximnum": [261, 291], "maximum": [7, 10, 158, 163, 237, 257, 261, 270, 271, 291, 297, 318, 324, 338, 339], "mb": [14, 331], "mean": [3, 14, 15, 19, 158, 206, 219, 265, 319, 320, 324, 331, 332, 335, 342], "meaning": 335, "meanwhil": [3, 319], "measuer": 15, "measur": [14, 15, 16, 18, 19, 158, 265, 266, 268, 298, 318, 323, 331, 335, 337], "mechan": [2, 5, 160, 175, 320, 324, 326, 330, 331], "media": [4, 6, 11, 13, 20, 22, 23, 24, 25, 27, 29, 33, 34, 49, 69, 70, 82, 86, 90, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 112, 115, 125, 132, 140, 148, 191, 206, 207, 211, 317, 331], "mediatyp": [11, 20, 22, 23, 24, 25, 27, 29, 33, 34, 59, 63, 65, 69, 70, 82, 86, 90, 92, 93, 94, 95, 96, 98, 100, 101, 103, 105, 112, 115, 122, 123, 124, 125, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 144, 145, 146, 147, 148, 149, 151, 152, 154], "mediatypestruct": [83, 105], "medium": 340, "meet": [228, 331], "member": [14, 21, 106, 108, 110, 111, 113, 114, 115, 116], "membind": [14, 15], "memorandum": 334, "memori": [3, 4, 8, 9, 14, 15, 45, 47, 52, 53, 54, 57, 60, 89, 91, 95, 96, 97, 98, 101, 104, 108, 164, 165, 177, 180, 184, 186, 193, 206, 207, 208, 228, 244, 319, 327, 331, 339, 340], "memory_pin": 102, "memoryview": [223, 228], "mention": 7, "mere": 89, "merg": [160, 164, 290, 331], "merge_config": 160, "mergeconfig": [289, 293], "mermaid": 160, "messag": [14, 18, 19, 160, 161, 318], "met": 334, "meta": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 312, 316, 317, 318, 323, 326, 340, 343], "metadata": [6, 7, 15, 169, 184, 187, 189, 195, 340], "meth": [159, 316], "method": [1, 3, 4, 5, 13, 101, 159, 170, 172, 173, 174, 175, 184, 185, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 223, 244, 259, 260, 261, 263, 266, 267, 269, 291, 297, 302, 303, 305, 307, 311, 314, 319, 320, 322, 323, 324, 325, 331], "methodologi": 338, "metric": [10, 15, 266, 269, 326, 335, 338], "micro": [14, 15], "middl": 9, "might": [3, 4, 6, 161, 194, 208, 210, 212, 267, 322, 327, 331, 337], "migrat": [326, 330, 340], "miguel": 326, "millisecond": 1, "mimic": 192, "min": 4, "minim": 335, "minimum": [235, 337], "minor": [14, 15], "misc": 326, "miscellan": 8, "mit": 327, "mitig": 193, "mix": [4, 5, 160], "mixtur": 324, "mjpeg": [11, 42, 82, 103, 105], "ml": [7, 319, 320, 332, 343], "mobilenetv3_large_100": 19, "mock": 16, "mod": [17, 160, 318], "modal": 332, "mode": [14, 16, 19, 270, 273, 278, 297, 298, 317, 324], "model": [9, 10, 13, 19, 208, 308, 317, 324, 326, 332, 336, 337, 339, 341], "model_typ": 19, "modelbundl": 19, "modifi": [89, 266, 269, 317], "modul": [1, 3, 4, 7, 13, 14, 17, 19, 160, 194, 223, 272, 284, 300, 319, 324, 327, 331, 343], "mono": [15, 185], "monoton": [14, 16, 18, 19, 158, 316, 318], "more": [1, 3, 6, 7, 10, 13, 14, 15, 158, 161, 193, 228, 229, 252, 257, 260, 297, 302, 319, 331, 336, 337, 340, 341, 342, 343], "most": [3, 7, 14, 161, 194, 199, 237, 308, 319, 320, 331, 335], "mostli": 343, "motiv": 3, "moto": [18, 158, 318, 326], "move": [9, 10, 93, 99, 208, 224, 225, 226, 230, 242, 243, 324], "mp": [7, 16], "mp3": 103, "mp4": [159, 175, 182, 184, 191, 194, 201, 218, 318], "mp_context": [13, 297], "mpeg1video": [11, 42, 82, 103, 105], "mpeg2video": [11, 42, 82, 103, 105], "mpeg4": [11, 42, 82, 103, 105], "mt": [7, 10, 16], "mtp": [10, 324], "much": [7, 339, 340], "multi": [2, 5, 7, 9, 10, 13, 14, 15, 16, 244, 260, 261, 319, 321, 326, 331, 343], "multi_thread_preprocess": [6, 331], "multi_thread_preprocessing_chart_spdl": 158, "multi_thread_preprocessing_chart_torch": 158, "multi_thread_preprocessing_plot": 158, "multimedia": [332, 343], "multipl": [2, 5, 6, 7, 14, 15, 160, 161, 164, 173, 174, 189, 190, 191, 194, 199, 200, 218, 220, 260, 261, 265, 289, 290, 291, 301, 309, 320, 324, 325, 331, 334, 335, 336, 340, 341], "multiplex": [191, 317], "multipli": [160, 161], "multiply_by_10": 160, "multiply_pip": 160, "multiprocess": [4, 8, 18, 158, 297, 318], "multiprocessing_context": [158, 166], "multithread": 10, "must": [1, 4, 5, 7, 13, 14, 16, 92, 101, 175, 184, 193, 206, 207, 217, 233, 236, 253, 257, 261, 270, 291, 297, 302, 317, 319, 320, 324, 325, 332, 334, 335, 340, 343], "mux": 101, "muxer": [11, 41, 52, 57, 59, 82, 84, 86, 105, 142, 157, 172, 198, 236, 317], "muxer_config": [29, 100, 191], "muxerclass": [83, 105], "muxerimpl": 100, "muxerptr": [11, 56, 82, 86, 100, 105], "my_bucket": 7, "my_data": 7, "my_func": 324, "my_oper": 254, "n": [14, 15, 18, 19, 159, 204, 207, 222, 223, 301, 302, 313, 316, 318], "n03709823": 308, "n4": 103, "naiv": 9, "name": [4, 13, 14, 15, 18, 26, 80, 81, 97, 104, 159, 161, 169, 173, 185, 187, 189, 190, 193, 195, 199, 200, 218, 220, 223, 249, 251, 254, 256, 259, 261, 264, 266, 267, 269, 270, 283, 286, 288, 289, 290, 291, 292, 298, 318, 323, 337], "namespac": [11, 14, 15, 18, 19, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157, 159, 161, 316, 317, 318], "nan": 19, "nanobind": [194, 327], "nanobind_add_modul": 327, "nanosecond": 1, "narrow": 340, "nativ": [15, 158, 331, 334], "natur": [7, 9, 331, 335], "nbenchmark": 15, "nccl": [336, 342], "nchw": 19, "ndarrai": [4, 7, 15, 16, 184, 192, 217, 228, 239, 240], "ndim": [15, 158], "necessari": [319, 331], "necessarili": [193, 200, 302, 317, 320], "necessit": 319, "need": [3, 4, 7, 13, 14, 15, 101, 102, 236, 261, 270, 317, 319, 320, 324, 325, 327, 331, 334, 337, 339], "neglig": 1, "neighbor": 217, "neighbour": [4, 7, 8, 326, 338, 340, 341, 343], "nest": [11, 82, 105], "network": [3, 7, 13, 161, 260, 319, 325, 332, 334, 335, 336, 340, 341], "never": 334, "new": [1, 14, 101, 159, 163, 193, 199, 228, 234, 318, 320, 331, 332, 343], "newaxi": 15, "newlin": [14, 15], "next": [1, 3, 7, 9, 11, 31, 82, 95, 105, 164, 260, 265, 313, 319, 322, 331, 334, 335, 336, 339, 342], "ngener": 161, "nhwc": 257, "ninja": 327, "nn": 19, "no_grad": [19, 158], "node": [185, 218, 220, 302, 336], "noexcept": [21, 22, 30, 32, 92, 98, 99, 101, 102, 104, 113, 114, 115], "noisi": [4, 7, 8, 326, 338, 340, 341, 343], "non": [5, 327, 331], "non_block": [244, 316, 324], "none": [1, 3, 13, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 163, 164, 166, 170, 172, 174, 175, 182, 184, 185, 188, 191, 193, 196, 198, 200, 203, 204, 208, 210, 211, 212, 213, 216, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 235, 237, 242, 252, 256, 257, 259, 260, 261, 263, 266, 267, 269, 270, 271, 274, 275, 276, 277, 279, 280, 281, 282, 283, 289, 290, 291, 297, 298, 299, 302, 303, 305, 307, 311, 313, 316, 317, 318, 319, 324, 331], "nor": 331, "norm": 160, "normal": [19, 158, 160, 335], "normalize_pip": 160, "normalize_to_list": 160, "normalize_transform": 158, "notabl": [324, 331], "note": [14, 17, 89, 92, 98, 101, 159, 160, 175, 209, 228, 265, 297, 318, 320, 324, 327, 330, 332, 334, 335], "noth": [218, 220, 319], "notifi": [1, 172, 175, 185, 191, 193, 198, 319], "notion": 319, "notori": [3, 319], "novel": 9, "now": [1, 3, 5, 252, 317, 319, 320, 324, 331, 336, 337, 339, 341], "np": [7, 13, 14, 15, 16, 217, 228, 229, 231], "npp": [227, 327], "npy": [7, 16, 192, 228], "npyio": 192, "npz": [8, 16, 229, 340], "npzfile": 229, "nsummari": 161, "null": [185, 220], "nullcontext": 19, "nullopt": [24, 66, 67, 95, 103, 110, 111], "nullptr": [32, 61, 63, 65, 67, 91, 93, 95, 102, 104], "num": [11, 14, 18, 19, 82, 103, 105, 106, 161, 318], "num_aggreg": [261, 285], "num_batch": [18, 318], "num_cach": [163, 271, 337], "num_channel": [15, 103, 169, 173, 174, 202, 206, 219, 231], "num_correct_top1": 19, "num_correct_top5": 19, "num_draw": 302, "num_failur": [159, 268, 335], "num_fil": 14, "num_fram": [18, 19, 23, 94, 173, 182, 199, 206, 219, 222, 237, 316, 318], "num_imag": 158, "num_input": [161, 298], "num_invoc": 159, "num_item": [16, 158, 261, 265, 285, 286], "num_iter": 14, "num_packet": [24, 31, 95, 184, 191], "num_plan": [189, 194, 199], "num_process": 13, "num_run": 14, "num_sampl": [15, 173, 231], "num_set": 15, "num_sourc": 161, "num_task": [159, 268, 335], "num_thread": [6, 14, 15, 16, 17, 18, 19, 158, 159, 160, 164, 260, 261, 270, 299, 318, 320, 322, 331, 335, 341], "num_video_fram": 317, "num_work": [16, 18, 158, 166, 318, 331], "num_workers_": 158, "num_yield": 318, "numactl": [14, 15], "numba": [178, 239, 327], "number": [3, 5, 7, 14, 15, 16, 18, 19, 74, 104, 158, 160, 161, 164, 165, 169, 172, 173, 174, 189, 193, 199, 200, 202, 206, 207, 212, 219, 222, 235, 237, 253, 257, 261, 264, 265, 266, 268, 270, 271, 273, 283, 285, 286, 291, 297, 298, 301, 302, 313, 315, 317, 318, 320, 324, 331, 337, 338, 340, 343], "numer": [4, 7, 106, 169, 187, 195, 199, 200, 207], "numpi": [4, 8, 14, 15, 16, 168, 184, 192, 203, 217, 228, 229, 231, 239, 240, 316, 317, 324, 327, 331, 340], "nv12": [193, 222, 233, 237], "nv12_to_bgr": 237, "nv12_to_rgb": [193, 232, 237, 316], "nvcodec": 247, "nvcuvid": 327, "nvdec": [101, 103, 175, 193, 201, 212, 237, 318, 326], "nvdec_decod": 193, "nvdecdecod": [175, 201, 212, 234, 237], "nvidia": [318, 327], "nvjpeg": [19, 210, 227, 248, 327], "nxxxxxxxx": 309, "o": [1, 3, 5, 9, 10, 14, 15, 17, 161, 165, 167, 184, 317, 319, 324, 326, 327, 328, 329, 340], "obj": [4, 324], "object": [1, 2, 3, 4, 5, 6, 7, 13, 14, 15, 17, 18, 89, 92, 101, 159, 163, 164, 168, 172, 174, 175, 178, 182, 184, 185, 186, 189, 190, 191, 193, 194, 198, 199, 200, 201, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 224, 225, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 244, 261, 263, 264, 266, 270, 271, 284, 285, 287, 289, 291, 293, 297, 298, 301, 302, 317, 318, 319, 322, 323, 324, 325, 331, 332, 334], "oblig": 327, "observ": [10, 158, 305, 323, 331, 332, 335, 336, 338, 342, 343], "obtain": [7, 10, 158, 211, 317, 324, 335], "occasion": [1, 5, 335], "occup": [161, 298], "occupancy_r": [159, 161, 264, 265, 298], "occupi": [264, 331, 335], "occur": [103, 339], "off": [7, 175, 334], "offer": [3, 4, 319, 324], "offici": [218, 220, 229, 327, 340], "offload": 320, "often": [1, 7, 9, 164, 303, 304, 305, 318, 319, 331, 334, 337, 340, 342], "oftentim": 343, "omegaconf": 17, "omit": [3, 184, 317, 319, 335], "on_trace_readi": 316, "onboard": 332, "onc": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 267, 270, 285, 286, 298, 322, 327, 331, 337], "one": [1, 3, 7, 9, 13, 14, 19, 101, 164, 172, 175, 193, 198, 199, 200, 208, 217, 224, 225, 226, 230, 236, 237, 244, 261, 265, 287, 288, 289, 290, 291, 298, 309, 313, 316, 317, 319, 322, 323, 324, 325, 327, 330, 331, 332, 334, 336, 337, 339, 340, 342], "ones": [3, 319], "ongo": [5, 297], "onli": [1, 3, 5, 7, 9, 14, 15, 101, 102, 158, 165, 170, 189, 196, 223, 229, 236, 252, 261, 267, 269, 270, 297, 319, 324, 325, 331, 334, 335, 336, 337, 339, 340, 343], "onto": 9, "op": [261, 289, 290, 291, 320, 334], "op_with_content": 161, "open": [11, 14, 15, 18, 29, 82, 100, 105, 191, 223, 260, 317, 318, 325], "openai": 332, "opencv": 13, "oper": [2, 3, 5, 9, 11, 13, 20, 21, 22, 23, 25, 26, 29, 30, 32, 82, 90, 92, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 113, 115, 158, 161, 175, 201, 211, 244, 254, 260, 261, 265, 286, 288, 289, 290, 291, 292, 317, 319, 320, 322, 325, 331, 334, 335, 336, 340], "operaiton": 5, "opiton": 214, "oppos": 7, "opposit": 335, "optim": [7, 8, 9, 10, 15, 159, 161, 163, 209, 271, 298, 323, 326, 332, 337, 339, 340, 343], "option": [7, 11, 13, 18, 23, 24, 26, 29, 51, 56, 59, 60, 82, 86, 89, 94, 95, 97, 100, 101, 103, 104, 105, 110, 111, 115, 161, 164, 182, 193, 200, 202, 208, 209, 210, 211, 212, 214, 218, 219, 220, 222, 224, 225, 226, 227, 230, 231, 235, 252, 257, 261, 267, 283, 289, 290, 291, 298, 302, 315, 316, 317, 318, 326, 341], "optiondict": [11, 29, 59, 82, 86, 98, 100, 103, 105, 110, 111], "orchestr": [1, 2, 5, 9, 319, 326, 335], "order": [3, 160, 164, 200, 202, 228, 232, 261, 289, 290, 291, 313, 319, 320], "org": [103, 168, 175, 178, 191, 201, 218, 220, 222, 240, 257, 326, 343], "organ": 340, "orient": 332, "origin": [6, 7, 10, 163, 194, 206, 207, 222, 271, 314, 319, 325, 331, 337], "other": [3, 4, 5, 6, 7, 10, 15, 30, 32, 89, 101, 104, 158, 161, 194, 221, 231, 233, 260, 267, 314, 319, 324, 334, 335, 336, 342, 343], "otherwis": [6, 7, 16, 185, 206, 234, 236, 267, 278, 302, 309, 334], "our": [1, 3, 10, 319, 326, 332, 335, 343], "out": [3, 9, 10, 231, 319, 322, 323, 327, 331, 334, 336, 337, 339, 340, 343], "out0": 185, "out1": 185, "outliv": 92, "output": [14, 15, 19, 160, 161, 164, 165, 191, 210, 211, 219, 222, 226, 236, 252, 256, 260, 261, 289, 290, 291, 298, 317, 320, 322, 324, 325, 335], "output0": 185, "output1": 185, "output_fil": [14, 15], "output_height": 317, "output_ord": [160, 164, 261, 291, 320, 331], "output_path": [161, 317], "output_pix_fmt": 317, "output_queu": [289, 290], "output_width": 317, "outsid": 200, "over": [9, 14, 164, 260, 297, 301, 302, 313, 323, 335, 340], "overal": [10, 15, 335, 342, 343], "overhead": [1, 337], "overlap": [203, 205, 244, 324, 334], "overload": 259, "overrid": [21, 89, 102, 103, 107, 159, 191, 202, 209, 214, 218, 220, 257, 261, 266, 267, 269, 270, 291, 323], "oversight": 5, "overview": 326, "overwrit": 214, "own": [158, 206, 207, 317, 327], "owner": 343, "ownership": 194, "p": [31, 95, 102, 173, 202, 206, 219, 316], "p1": 160, "p2": 160, "p3": 160, "pack": [199, 206], "packag": [7, 327], "packet": [6, 11, 20, 23, 29, 30, 41, 46, 48, 50, 51, 52, 55, 56, 59, 70, 71, 82, 84, 86, 90, 94, 95, 96, 100, 105, 116, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 164, 170, 172, 174, 175, 182, 184, 188, 190, 191, 193, 196, 198, 200, 201, 205, 211, 212, 213, 214, 215, 216, 218, 220, 221, 235, 317, 318, 331], "packet_stream": 184, "packets2": 194, "packetseri": [11, 57, 82, 86, 101, 105, 115, 143], "packetseriesclass": [83, 105], "packetseriesptr": [11, 57, 82, 86, 101, 105], "packetsptr": [11, 20, 23, 24, 25, 57, 82, 86, 90, 94, 95, 96, 101, 105, 145, 147, 149], "packetsstruct": [83, 105], "pad": [219, 222], "pad_mod": 222, "page": [164, 244], "pair": 208, "panic": 252, "par": 172, "paradigm": [2, 3, 319, 324, 326, 329, 332], "parallel": [4, 8, 9, 15, 16, 260, 261, 297, 299, 320, 321, 326, 330, 332, 334, 343], "param": 241, "paramet": [9, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 163, 164, 172, 175, 182, 184, 185, 191, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 252, 253, 254, 256, 257, 259, 260, 261, 266, 267, 269, 270, 271, 279, 280, 281, 282, 283, 285, 289, 291, 297, 298, 299, 301, 302, 307, 309, 313, 314, 315, 316, 317, 318, 320, 337], "parent": [40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 297], "pars": [7, 14, 15, 159, 161, 228, 309, 316, 317], "parse_arg": [14, 15, 18, 19, 158, 159, 161, 316, 317, 318], "parse_known_arg": [18, 316, 318], "parse_wnid": 307, "parsed_abuffer_0": [185, 218], "parsed_abuffersink_2": 185, "parsed_anull_1": 185, "parsed_buffer_0": [185, 220], "parsed_buffersink_2": 185, "parsed_buffersink_3": 185, "parsed_null_1": 185, "parsed_showwaves_1": 185, "parsed_split_1": 185, "parsed_vstack_2": 185, "parser": [14, 15, 18, 19, 158, 159, 161, 316, 317, 318], "part": [5, 7, 10, 13, 237, 267, 331, 334, 338, 339, 343], "parti": [15, 327], "partial": [3, 14, 18, 159, 297, 324, 325, 340], "particular": [319, 336, 340], "particularli": 161, "pass": [1, 4, 7, 9, 13, 18, 19, 92, 101, 159, 164, 165, 176, 179, 191, 194, 219, 221, 222, 226, 236, 237, 259, 261, 267, 270, 284, 289, 290, 291, 297, 299, 314, 318, 323, 324, 325, 331, 334, 343], "past": 336, "path": [6, 7, 10, 14, 15, 18, 19, 39, 40, 41, 95, 158, 159, 161, 164, 184, 191, 194, 205, 210, 217, 218, 220, 223, 228, 236, 237, 256, 260, 307, 311, 316, 317, 318, 325, 327, 331], "pathlib": [18, 19, 159, 161, 316, 317, 318], "pathlik": [307, 311], "pattern": [1, 9, 15, 260, 261, 311, 322, 324, 339, 340], "paus": [319, 322], "pave": 343, "pcm": 15, "pcm_s16le": 214, "peak": [7, 158, 161, 331], "peform": 302, "peopl": [1, 3], "pep": [14, 15], "per": [10, 14, 15, 161, 208, 264, 265, 298, 331, 335, 339], "percentag": 264, "perf": 340, "perf_count": 15, "perfectli": 9, "perfetto": 327, "perform": [1, 2, 4, 6, 8, 9, 13, 14, 15, 16, 18, 19, 158, 161, 163, 194, 210, 212, 223, 231, 244, 260, 261, 265, 266, 267, 268, 269, 270, 271, 297, 298, 299, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 329, 332, 336, 337, 338, 339], "performance_analysi": [159, 323, 335], "perfresult": [18, 318], "period": [159, 266, 269], "permit": 340, "permut": [19, 158, 159, 316, 318, 331], "persistent_work": 166, "perspect": [1, 319, 334], "perturb": 342, "pftrace": [19, 256], "phase": [14, 15], "phenomenon": 339, "pi": 15, "pick": [13, 313, 327], "pickl": [4, 7], "picklabl": [4, 13, 297, 324], "pil": 316, "pillow": [13, 158, 331], "piltotensor": [158, 331], "pimpl": [90, 94, 95, 96, 97, 100], "pin": 164, "pin_memori": [21, 102, 164, 166, 205, 244, 316, 324], "pin_memory_devic": 166, "pink": 1, "pip": 327, "pipe": [1, 5, 6, 9, 13, 16, 17, 18, 158, 159, 160, 161, 191, 260, 261, 264, 267, 270, 289, 292, 293, 295, 298, 318, 320, 322, 323, 324, 325, 331, 335, 341], "pipeconfig": [160, 291, 293], "pipelin": [1, 2, 4, 5, 6, 7, 8, 13, 16, 17, 18, 19, 158, 159, 162, 163, 164, 236, 244, 318, 320, 321, 323, 326, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 342, 343], "pipeline_cfg": [17, 270], "pipeline_config": [161, 289, 290, 298], "pipeline_profile_hook": 263, "pipeline_queu": 159, "pipeline_task": 159, "pipelinebuild": [1, 5, 6, 9, 13, 16, 18, 158, 159, 160, 259, 260, 266, 267, 270, 299, 318, 320, 322, 323, 324, 325, 331, 335, 341], "pipelineconfig": [17, 160, 161, 261, 270, 289, 290, 298], "pix_fmt": [18, 19, 103, 159, 164, 185, 187, 189, 190, 195, 199, 200, 207, 210, 211, 212, 217, 220, 222, 226, 227, 236, 257, 317, 318], "pixel": [19, 158, 187, 189, 190, 193, 195, 199, 200, 210, 211, 212, 220, 222, 226, 227, 233, 236, 257, 317, 331], "pixel_aspect": [185, 317], "pixel_format": 194, "pkt": [11, 82, 101, 105, 115], "place": [303, 305, 307, 311, 335], "placement": 327, "plain": 13, "planar": [173, 202, 206, 207, 219], "plane": [173, 189, 199, 237, 331], "platform": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318], "playabl": 317, "player": 191, "plc1": 289, "plc2": 289, "pleas": [10, 13, 159, 191, 318, 320, 323, 326, 327, 331, 335], "plot": [7, 10, 14, 15, 18, 19, 158, 161, 316, 317, 335, 336, 339, 342, 343], "plot_dir": 316, "plot_output": 161, "plot_profile_result": 161, "plot_tar_benchmark": 14, "plot_wav_benchmark": 15, "plt": 161, "plu": 161, "png": [14, 15, 159, 161, 194, 217, 316], "point": [1, 7, 14, 17, 159, 160, 161, 199, 202, 206, 219, 337, 339], "pointer": [92, 101, 208], "poll": 289, "pool": [1, 3, 4, 5, 13, 18, 101, 261, 270, 291, 318, 319, 321, 322], "popul": 89, "popular": [15, 332], "portion": 340, "possibl": [3, 4, 7, 13, 173, 191, 208, 252, 319, 322, 336, 337, 339, 343], "possibli": 335, "post": [237, 316], "post_process": 316, "post_processing_param": [237, 316], "potenti": [4, 194, 337, 340], "pr": 340, "practic": [8, 13, 322, 326, 340], "practition": 319, "pragma": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "pre": [6, 13, 164, 320, 325, 327, 331, 343], "preced": 336, "prefetch_factor": [158, 166, 331], "prefix": [18, 261, 291, 318], "prepar": [5, 331], "prepcoess": 336, "prepend": [18, 318], "preprocess": [9, 19, 164, 219, 222, 236, 260, 320, 324, 326, 335, 336, 340, 341, 343], "preprocessor": 164, "present": [189, 199, 222], "pressur": [3, 335], "pretend": [317, 319], "pretrain": 19, "pretti": 15, "prevent": [3, 5, 13, 322, 325, 334, 341], "preview": 223, "previou": [1, 3, 5, 9, 193, 284, 319, 324, 325, 331, 339, 342], "previous": [7, 9, 206, 207], "primal": [175, 201, 343], "primari": [9, 15, 257, 320], "primarili": [9, 343], "primaryclass": 326, "primit": [1, 6], "print": [15, 16, 17, 18, 158, 161, 223, 252, 298, 308, 313, 316, 317, 318, 322], "print_profile_result": 161, "privat": [98, 99, 102], "pro": [4, 329], "prob": 19, "probe": [210, 212], "problem": [3, 252, 319], "procedu": 1, "procedur": [1, 3, 5, 319], "process": [1, 2, 3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 18, 158, 160, 161, 164, 165, 185, 193, 201, 206, 207, 211, 221, 227, 237, 256, 260, 261, 264, 266, 267, 269, 273, 291, 295, 297, 298, 316, 318, 319, 320, 321, 322, 323, 326, 327, 330, 331, 332, 334, 335, 341, 342, 343], "process_cpu_count": 4, "process_nam": [32, 104, 256], "process_tar_builtin": 14, "process_tar_spdl": 14, "process_tar_spdl_filelik": 14, "process_with_resourc": 13, "processor": [164, 343], "processpoolexecutor": [3, 4, 13, 16, 261, 291, 319, 324], "produc": [224, 225, 226, 230, 260, 265, 298, 335], "product": [8, 161, 257, 335, 336, 338, 340], "prof": [19, 316], "profil": [1, 19, 263, 264, 267, 270, 273, 275, 276, 278, 280, 281, 298, 316, 324, 326, 327, 336, 338], "profile_pipelin": [161, 263, 264, 270, 273, 278], "profile_pipeline_exampl": 161, "profile_result": 161, "profilehook": [276, 281, 298], "profileresult": [161, 275, 280, 298], "program": [1, 2, 3, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 157, 270, 298, 319, 340], "programmat": 338, "progress": [5, 7, 342], "prohibit": 331, "project": [9, 326, 338, 343], "promis": [3, 99, 319], "promise_typ": [11, 55, 82, 86, 99, 105, 113], "promise_typetempl": [83, 105], "propag": [4, 261, 267, 291], "proper": 3, "properli": [3, 5, 10, 246, 247, 248, 319, 322, 324], "properti": [5, 7, 169, 172, 173, 174, 179, 184, 187, 189, 190, 195, 199, 200, 265], "prospect": 337, "protocol": [164, 168, 178, 184, 231, 238, 239, 240, 241, 261, 291, 303, 304, 305, 319, 324, 325], "provid": [1, 4, 6, 18, 101, 159, 192, 193, 206, 207, 208, 209, 211, 214, 218, 220, 224, 225, 226, 230, 233, 257, 261, 270, 271, 284, 289, 290, 291, 298, 302, 313, 316, 318, 319, 323, 324, 327, 331, 332, 337, 340, 343], "prune": 319, "pseudo": 340, "pt": [11, 62, 64, 82, 93, 98, 101, 105, 116, 189, 199, 206, 207, 317], "public": [6, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 89, 90, 92, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 297], "publicli": 308, "publish": [6, 159, 259], "puhrsch": 326, "pure": [7, 14], "purpos": [3, 7, 15, 89, 218, 220, 324, 341], "push": [11, 30, 82, 101, 105], "push_back": 98, "put": [3, 158, 259, 261, 265, 266, 289, 291, 297, 320, 324, 331, 332, 334, 338, 342], "put_data_to_remot": 9, "put_nowait": 334, "py": [14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 316, 317, 318, 327], "pydata": 178, "pypi": 326, "pyplot": 161, "pyre": [14, 15, 16, 18, 19, 158, 159, 160, 161, 316, 317, 318], "python": [1, 2, 3, 4, 7, 10, 13, 14, 15, 18, 19, 104, 194, 206, 207, 208, 223, 318, 319, 322, 324, 326, 331, 332, 334, 343], "python3": [14, 16, 18, 158, 159, 160, 161, 317], "python_vers": [14, 15], "pytorch": [1, 4, 7, 10, 16, 158, 165, 178, 184, 217, 241, 244, 316, 324, 326, 327, 329, 336, 340], "pytorchdataload": 166, "qp": [10, 14, 15, 16, 158, 159, 161, 264, 265, 298, 316, 335, 341], "qps_lower_ci": 14, "qps_mean": [14, 15], "qps_sampl": [14, 15], "qps_std": [14, 15], "qps_upper_ci": 14, "qps_valu": 161, "qscale": [103, 202, 257], "qualiti": 15, "queri": [14, 15, 265], "question": [326, 331, 337], "queue": [3, 9, 158, 165, 259, 260, 261, 264, 265, 266, 270, 277, 282, 289, 290, 291, 297, 298, 318, 320, 324, 333, 336, 338], "queue_class": [159, 261, 270, 282, 299], "queue_siz": 318, "queueperfstat": [159, 266, 323, 338], "quick": [5, 335], "quickli": 3, "quiet": 252, "quit": [3, 319, 342], "r": [14, 15, 233, 318, 325], "raghuraman": 326, "rais": [16, 160, 226, 227, 231, 235, 260, 267, 309], "ran": [9, 337, 339], "randint": [16, 217], "random": [16, 217, 302, 313], "rang": [3, 14, 15, 16, 17, 18, 19, 98, 158, 160, 161, 219, 231, 298, 316, 318, 322, 331, 335], "rank": [301, 302, 326, 338, 342], "rase": 4, "rate": [15, 169, 173, 174, 195, 200, 202, 206, 207, 219, 222, 257, 269, 298, 317, 335, 340], "rather": [3, 4], "ratio": [187, 195, 222], "ration": [11, 22, 59, 64, 82, 86, 90, 92, 93, 98, 101, 103, 105, 115], "rational_8h_sourc": 103, "raw": [7, 70, 101, 184, 191, 200, 324, 325, 341], "raw_data": 7, "rawdescriptionhelpformatt": [18, 19, 161], "rawpacketdata": [11, 30, 57, 82, 86, 101, 105], "rawpacketdatastruct": [83, 105], "rb": 223, "re": [7, 19, 193, 331, 340], "reach": [9, 185, 193, 283], "react": [1, 3, 5, 267, 319], "read": [4, 7, 14, 15, 16, 158, 223, 229, 316, 334], "reader": 229, "readi": [185, 338, 342], "readthedoc": 239, "real": 319, "realiz": [1, 3, 5, 334], "realli": [252, 319], "reason": [6, 194, 322, 331, 334, 335, 336, 342], "rebuild": 327, "receiv": [194, 297, 331, 336], "recent": [194, 343], "recommend": [4, 6, 7, 322, 331, 334, 339, 341], "record_funct": [19, 316], "recov": [252, 335], "recoveri": [252, 335], "rectangular": 1, "recurs": [164, 244], "red": 1, "redistribut": 327, "reduc": [7, 9, 165, 324, 327, 337, 340, 343], "reduct": 337, "redund": [331, 340], "ref": [15, 228, 319], "refer": [10, 13, 15, 159, 168, 185, 191, 194, 206, 207, 218, 220, 240, 317, 318, 323, 324, 327, 331, 335, 339], "referenc": [218, 220], "reflect": 332, "reformat": 7, "refrain": 325, "refresh": 327, "regard": 4, "region": [205, 206, 207, 222, 228, 331], "regist": 5, "register_avdevic": [11, 60, 82, 86, 104, 105], "register_buff": 19, "regul": 335, "regular": [3, 192], "reinterpret": 15, "reinvent": 1, "rel": [265, 335], "relat": [8, 246, 247, 248, 331, 335, 340], "relationship": [11, 82, 105], "releas": [3, 4, 7, 10, 15, 101, 161, 194, 229, 271, 324, 326, 327, 331, 332, 340], "relev": 7, "reliv": [3, 319], "remain": [160, 337], "rememb": 101, "remind": 164, "remot": [7, 323, 325, 336], "remov": [212, 266, 289], "remux": 317, "renam": 212, "repeat": [1, 16, 222, 283, 315, 339], "repeatedli": 313, "replac": [7, 14, 15, 165, 229, 302, 331, 337, 343], "report": [18, 89, 261, 266, 269, 270, 297, 318], "report_stats_interv": [18, 261, 270, 299, 318], "repres": [3, 9, 186, 194, 303, 304, 305, 318, 319, 331, 335], "request": [14, 334, 335, 341], "requir": [3, 7, 17, 18, 19, 89, 92, 96, 98, 101, 159, 175, 185, 201, 223, 297, 316, 317, 318, 320, 325, 326, 331, 332, 334, 339, 340, 341, 343], "resampl": 260, "rescal": [159, 222, 236, 316], "research": 343, "resembl": [3, 319, 322, 336], "resembol": 16, "reserv": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318], "resiz": [18, 158, 164, 193, 210, 212, 217, 226, 227, 260, 316, 325, 331], "resolut": [159, 193, 222, 317, 318, 331], "resolv": [2, 10, 326, 332, 338], "resort": 7, "resourc": [3, 10, 89, 101, 161, 191, 194, 271, 319, 320, 332, 337, 339, 340, 341], "resourceclass": 13, "respons": [1, 319], "respos": 340, "rest": [7, 336, 342], "restor": 228, "restrict": [253, 332], "restructur": 338, "result": [1, 3, 4, 5, 7, 9, 13, 14, 15, 16, 18, 19, 89, 101, 158, 160, 161, 164, 165, 186, 193, 194, 199, 205, 206, 207, 218, 220, 221, 226, 261, 264, 265, 291, 294, 297, 298, 299, 305, 316, 317, 318, 319, 320, 322, 324, 325, 327, 331, 334, 335, 340], "result1": [3, 319], "result2": [3, 319], "result3": [3, 319], "resum": 322, "resutl": 160, "ret": 93, "rethrow_except": 99, "retriev": [172, 175, 219, 222, 235, 260, 307, 335], "return": [3, 4, 5, 6, 7, 13, 14, 15, 16, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 163, 164, 165, 172, 173, 174, 175, 182, 184, 185, 186, 189, 190, 191, 193, 194, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 233, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 251, 260, 261, 264, 266, 270, 271, 273, 274, 275, 276, 277, 278, 283, 285, 287, 289, 291, 297, 298, 301, 302, 308, 309, 316, 317, 318, 319, 323, 324, 325, 331, 334, 337], "return_caches_aft": [163, 271, 337], "return_void": [11, 82, 99, 105, 113, 114], "return_when": [1, 3, 319], "reus": [193, 331], "reveal": [3, 319], "revers": [161, 317], "revisit": 102, "rewrit": 7, "rgb": [16, 19, 164, 193, 199, 207, 210, 212, 227, 233, 237, 257, 317, 318, 331], "rgb24": [18, 19, 159, 164, 194, 207, 211, 217, 222, 226, 236, 257, 317, 318], "rgba": [185, 212, 222], "rglob": 159, "rid": 7, "right": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318, 322], "robin": [289, 327], "robust": 324, "roman": 326, "room": 10, "root": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 307, 311, 316, 317, 318], "root_dir": [19, 158, 164], "roughli": [5, 191, 314, 315, 335], "round": 289, "round_robin_merg": 289, "rout": 325, "row": 101, "rsc": 13, "rtmp": 191, "rule": 3, "run": [1, 2, 5, 6, 8, 10, 14, 15, 16, 18, 19, 158, 160, 161, 163, 164, 208, 214, 260, 261, 267, 271, 273, 278, 297, 298, 299, 316, 318, 320, 321, 324, 325, 326, 327, 330, 331, 332, 334, 335, 337, 340, 341], "run_benchmark": 14, "run_benchmark_suit": 15, "run_coroutine_threadsaf": 334, "run_dataload": 158, "run_forev": 334, "run_in_executor": [2, 159, 261, 291, 320, 324], "run_in_process": 158, "run_pipelin": 16, "run_pipeline_exampl": 160, "run_pipeline_in_subprocess": [10, 297, 324], "run_profiling_exampl": 161, "run_test": 158, "run_until_complet": 334, "runinng": 297, "runner": [39, 40, 41, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157], "runtim": [18, 159, 265, 266, 268, 269, 272, 321, 326, 327, 332, 335, 338, 340, 343], "runtimeerror": [160, 260], "runtimewarn": 194, "rust": 13, "s1": 160, "s16": [173, 185, 202, 206, 219], "s16le": 214, "s16p": [206, 219], "s2": 160, "s32": [173, 202, 206, 219], "s32p": [206, 219], "s64": [173, 206, 219], "s64p": [206, 219], "safe": [260, 331, 332, 334], "sai": [3, 214, 319, 320, 322, 340], "said": 1, "sake": [3, 319, 340], "same": [3, 6, 15, 16, 93, 165, 173, 182, 193, 199, 201, 208, 232, 233, 244, 261, 270, 271, 283, 302, 320, 324, 327, 331, 332, 334, 335, 337, 342], "sampl": [4, 14, 15, 16, 18, 98, 164, 165, 169, 173, 174, 194, 202, 205, 206, 214, 218, 219, 220, 231, 313, 318, 336, 340, 341], "sample_aspect_ratio": [187, 195], "sample_fmt": [62, 64, 93, 103, 169, 173, 185, 202, 206, 207, 218, 219], "sample_r": [15, 62, 93, 103, 169, 173, 174, 185, 202, 206, 219], "sampler": [165, 166, 301, 302, 331, 338], "save": [7, 9, 14, 15, 16, 159, 161, 217, 228, 236, 316, 323], "save_result": 9, "save_results_to_csv": [14, 15], "savefig": 161, "savez": [7, 16, 229], "savez_compress": [7, 16], "saw": 319, "scalabl": 343, "scalable_op": 161, "scalable_op2": 161, "scale": [7, 15, 164, 202, 222, 257, 317, 326, 331, 342], "scale_algo": [217, 222], "scale_height": [19, 158, 159, 164, 193, 210, 212, 222, 316, 318, 331], "scale_mod": 222, "scale_width": [19, 158, 159, 164, 193, 210, 212, 222, 316, 318, 331], "scaler": 222, "scenario": 319, "schedul": [1, 3, 4, 5, 7, 10, 318, 319, 320, 324, 325], "scipi": 15, "scope": [13, 322], "scratch": 343, "screen": 191, "screenshot": 1, "script": [7, 14, 15, 18, 19, 158, 223, 231, 318], "sdk": 327, "sdl": 191, "seamless": 9, "search": 327, "sec": [15, 261, 270, 316], "secifi": 233, "second": [10, 14, 15, 98, 101, 158, 159, 160, 174, 199, 200, 231, 260, 264, 265, 266, 268, 269, 302, 335, 336, 339], "section": [1, 2, 3, 5, 7, 8, 9, 297, 319, 323, 332, 334, 335, 338, 339], "see": [1, 4, 7, 10, 13, 14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 163, 168, 170, 171, 177, 178, 180, 181, 182, 183, 188, 189, 191, 192, 193, 196, 197, 203, 204, 211, 212, 213, 215, 216, 217, 222, 224, 225, 230, 235, 237, 259, 267, 271, 316, 317, 318, 319, 320, 324, 327, 331, 332, 335, 336, 337, 340, 343], "seed": [302, 303, 305, 307, 311, 313, 314, 315], "seek": [14, 16, 228, 229], "seemingli": 322, "seen": [5, 332], "segment": [7, 16], "segv": 103, "select": [5, 233], "selector": [1, 5], "self": [6, 16, 19, 159, 194, 261, 267, 270, 298, 322, 341], "send": [18, 19, 164, 203, 318, 325], "send_to_cpu": 9, "send_to_gpu": 9, "sens": [5, 319], "sent": [9, 18, 158, 297, 317, 324], "sentinel": 296, "separ": [6, 16, 101, 164, 173, 261, 291, 298, 331, 340], "seprat": 101, "sequenc": [3, 161, 184, 210, 226, 264, 289, 290, 293, 297, 298, 302, 313, 334], "sequenti": [9, 227, 320], "seri": [101, 186, 194, 223, 284, 293, 295, 340], "serial": [4, 7, 13, 16, 228, 324, 331], "serv": [89, 191, 320, 335, 339], "server": [191, 319], "servic": 7, "sess": [32, 104], "set": [4, 6, 7, 15, 18, 24, 31, 51, 95, 103, 161, 164, 165, 184, 211, 235, 252, 261, 270, 273, 278, 279, 280, 281, 282, 298, 302, 318, 325], "set_default_executor": 4, "set_ffmpeg_log_level": [11, 60, 82, 86, 104, 105], "set_start_method": 158, "setlevel": 158, "setup": [301, 302, 327, 330, 335, 342], "sever": 334, "sf": 15, "shape": [11, 18, 19, 61, 62, 64, 82, 91, 93, 105, 108, 159, 173, 204, 207, 210, 217, 219, 228, 231, 233, 236, 237, 318], "share": [4, 8, 10, 13, 165, 194, 319, 331, 338], "shared_memori": 4, "shared_ptr": [11, 49, 61, 82, 86, 89, 91, 93, 105, 108, 120], "sharedmemori": 2, "shell": [14, 15, 318], "shift": [326, 329, 332], "shmem": 4, "short": 4, "should": [1, 5, 6, 92, 101, 103, 187, 194, 206, 207, 267, 289, 290, 332, 334, 335, 337, 339, 340, 343], "show": [3, 4, 7, 9, 10, 14, 15, 17, 158, 159, 161, 202, 316, 317, 322, 323, 324, 331, 335, 336, 339, 340, 342, 343], "showcas": 160, "shown": 159, "showwav": 185, "shuffl": [166, 302, 303, 305, 307, 311, 314, 315], "shuffle_last": 314, "shutdown": [3, 260, 261, 291, 319, 322], "side": [104, 193, 212], "sign": [173, 202, 206, 207, 236], "signal": [18, 318, 334], "signatur": [289, 290], "signific": [5, 9, 340, 342], "significantli": [7, 158, 336, 342], "sigterm": [18, 318], "silenc": 219, "silent": 233, "similar": [3, 5, 7, 14, 101, 319, 324, 331, 336], "similarli": [159, 261, 270, 320], "simpl": [1, 3, 5, 10, 15, 19, 161, 163, 298, 319, 331, 337, 342], "simpler": [3, 334], "simpli": [10, 322, 331, 334], "simplic": [3, 319, 334], "simplifi": [3, 103, 297, 319, 335], "simul": 161, "sin": [15, 229], "sinc": [3, 4, 5, 7, 10, 14, 15, 164, 194, 233, 319, 324, 325, 331, 332, 334, 339, 341, 342], "sine": 214, "sine_wav": 15, "singl": [6, 14, 15, 16, 19, 160, 161, 164, 187, 195, 199, 209, 331, 343], "sink": [17, 19, 160, 161, 260, 289, 293, 294, 298, 321, 334, 335, 336, 342], "sink_config": 160, "sinkconfig": [17, 160, 161, 289, 293, 298], "sit": 9, "situat": [322, 335], "size": [4, 6, 11, 14, 16, 18, 19, 21, 82, 101, 102, 105, 108, 116, 158, 164, 199, 205, 208, 214, 217, 222, 233, 256, 257, 259, 261, 266, 301, 302, 304, 318, 321, 324, 331, 335], "size_t": [21, 61, 62, 64, 71, 91, 93, 98, 101, 102, 108], "sizediter": [305, 314], "sizediterablewithshuffl": 314, "sizeof": [61, 91, 108], "skip": [3, 18, 261, 291, 318, 319], "sleep": [3, 161], "slice": [98, 172, 189, 199, 254, 287, 288], "slientli": 297, "slightli": [331, 335, 342], "slow": [2, 3, 4, 7, 15, 319, 335, 336, 342], "slower": [7, 10, 331, 335, 336, 342], "slowest": [336, 342], "sm": [9, 336], "small": [3, 14, 317, 319, 331, 337], "smaller": [235, 302, 332], "smoothli": 4, "smpte240m": 233, "snippet": [3, 314, 315, 319, 320, 322, 324, 331, 335, 337], "snk1": 160, "snk2": 160, "so": [1, 2, 3, 4, 5, 7, 10, 13, 15, 19, 89, 92, 102, 103, 158, 165, 173, 174, 185, 189, 190, 193, 199, 200, 205, 211, 218, 220, 222, 229, 260, 267, 271, 297, 317, 318, 319, 320, 322, 323, 324, 331, 332, 334, 335, 336, 337, 340, 341, 343], "softmax": 19, "softwar": [8, 191, 327], "solut": [3, 7, 8, 10, 158, 162, 319, 332, 343], "solv": [9, 10, 319], "some": [3, 5, 7, 14, 18, 161, 172, 228, 317, 318, 319, 320, 325, 327, 332, 336, 337, 338, 339, 341], "some_task": 5, "somehow": 252, "someth": [7, 252, 260, 337], "sometim": 342, "somewhat": [297, 331, 336], "somewher": 159, "soon": [3, 265, 319, 322, 334, 335, 339], "sort": [101, 161, 200, 308, 317], "sorted_concurr": 161, "soundfil": 15, "soundfile_result": 15, "sourc": [6, 9, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 320, 321, 324, 326, 331, 335], "source_config": 160, "source_video": 191, "sourceadaptor": [11, 45, 82, 86, 89, 105, 107, 120], "sourceadaptorptr": [11, 45, 51, 82, 86, 89, 95, 105], "sourceadaptorstruct": [83, 105], "sourceconfig": [17, 160, 161, 289, 293, 298], "space": [7, 199, 211, 257, 265, 331, 340], "spare": [332, 336], "spawn": [18, 158, 318, 339], "spd": 184, "spdl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 39, 40, 41, 42, 43, 44, 82, 83, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 117, 118, 157, 158, 159, 160, 161, 316, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 335, 336, 337, 338, 340, 341], "spdl_audio_result": 15, "spdl_default_buffer_s": [11, 59, 82, 103, 105], "spdl_io": 327, "spdl_pipeline_diagnostic_mod": [270, 278, 298], "spdl_pipeline_diagnostic_mode_num_item": 273, "spdl_use_cuda": 327, "spdl_use_ffmpeg_vers": 327, "spdl_use_nvcodec": 327, "spdl_use_trac": 327, "spdl_wav_result": 15, "spdlnamespac": [83, 105], "speak": 7, "speaker": 191, "specif": [7, 14, 89, 92, 98, 162, 191, 210, 212, 267, 319, 340], "specifi": [14, 18, 98, 101, 174, 180, 191, 193, 200, 211, 235, 273, 297, 313, 318, 320, 321, 325, 327], "speech": 15, "speed": [7, 8, 14, 16, 265, 318, 335, 336, 337, 339, 342], "spefici": 191, "spend": [7, 15, 337, 340], "spent": [14, 340], "spike": 335, "spiki": 10, "spikier": 10, "split": [3, 6, 9, 18, 19, 158, 160, 185, 235, 301, 307, 318, 319, 340], "split_id": [18, 318], "split_siz": [18, 318], "spot": 335, "sprcifi": 208, "sqcale": [202, 257], "sqrt": 15, "squar": [160, 161, 298], "square_pip": 160, "square_valu": 298, "squared_pair": 160, "squash": [319, 340], "squeez": 7, "src": [6, 11, 13, 16, 17, 18, 19, 40, 41, 67, 69, 71, 82, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 157, 160, 161, 164, 175, 182, 184, 193, 194, 201, 209, 210, 213, 214, 215, 216, 223, 224, 225, 226, 227, 230, 237, 271, 289, 293, 298, 314, 315, 316, 318, 324], "src_height": 317, "src_pix_fmt": 317, "src_width": 317, "srcdirectori": [84, 105], "stabl": [15, 168, 239, 240, 331], "stack": [316, 325, 340], "stackoverflow": 13, "stage": [1, 3, 6, 7, 9, 13, 159, 160, 161, 259, 260, 261, 263, 264, 265, 266, 267, 269, 270, 279, 280, 282, 286, 288, 291, 298, 319, 321, 323, 326, 330, 331, 332, 334, 335, 336, 338, 341, 342], "stage1": 13, "stage2": 13, "stage3": 13, "stage_hook": [259, 266, 267, 269], "stage_id": [261, 270], "stage_profile_hook": 263, "stai": [9, 336], "stamp": [189, 199], "stand": [1, 5, 297, 328, 340], "standard": [19, 252], "start": [2, 3, 4, 5, 10, 11, 14, 32, 82, 98, 104, 105, 158, 161, 174, 200, 219, 222, 231, 259, 260, 271, 297, 305, 315, 319, 322, 326, 331, 334, 342, 343], "start_iter": 297, "starv": 335, "starvat": [3, 265, 335, 341], "stash": 244, "stask_hook": 267, "stat": [15, 159, 161, 259, 261, 264, 265, 266, 268, 269, 270, 298, 323, 335, 340], "state": [1, 5, 16, 297, 324, 331, 334, 335], "statefuldatalaod": [7, 10], "statefuldataload": 7, "static": [4, 102], "statist": [15, 18, 159, 265, 266, 268, 269, 321, 326, 335, 336, 338, 340, 343], "statsqueu": [159, 259, 261, 265, 270, 282, 323], "statu": 297, "std": [11, 14, 15, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 49, 51, 61, 62, 64, 68, 70, 71, 72, 73, 78, 80, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 110, 111, 113, 114, 115, 117, 119, 120, 121, 125, 126, 127, 132, 133, 138, 140, 142, 143, 148, 150, 156, 158], "stdexcept": [59, 103], "stdin": 194, "step": [3, 10, 98, 159, 224, 225, 226, 230, 284, 297, 316, 319, 323, 331, 337, 338, 339, 341], "step_tim": 337, "stereo": 15, "still": [13, 165, 194, 334], "stocast": 313, "stop": [11, 19, 32, 82, 98, 104, 105, 260, 271, 297, 313, 322, 334, 337], "stop_aft": [163, 271, 313], "stop_iter": 297, "stop_request": [18, 318], "stopasynciter": 267, "storag": [7, 11, 21, 41, 47, 59, 61, 63, 65, 82, 84, 86, 91, 93, 105, 108, 157, 164, 203, 204, 205, 226, 234, 244, 260, 324, 325, 332, 336, 340, 343], "storagetempl": [83, 105], "store": [7, 13, 158, 164, 317, 324, 331], "store_fals": 19, "store_tru": [18, 19, 318], "str": [6, 14, 15, 16, 18, 19, 158, 159, 161, 164, 166, 169, 173, 175, 182, 184, 185, 187, 189, 190, 191, 192, 194, 195, 199, 200, 201, 202, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 235, 236, 237, 249, 251, 254, 256, 257, 259, 261, 263, 264, 266, 269, 270, 283, 286, 288, 289, 290, 291, 292, 297, 299, 307, 308, 309, 311, 316, 317, 318, 325, 331, 341], "straggler": [326, 338], "straight": [3, 319], "straightforward": [319, 334, 335], "stream": [95, 101, 160, 164, 169, 170, 172, 174, 175, 182, 185, 191, 193, 196, 198, 200, 201, 205, 233, 244, 324, 326, 340], "stream_index": [11, 31, 82, 95, 101, 105, 115, 191], "streamer": 316, "streaming_demux": [11, 24, 82, 95, 105, 184, 191, 218, 220, 317], "streaming_demux_video": [175, 182, 193], "streaming_load_video_nvdec": [193, 316], "streaming_nvdec_decod": [193, 237], "streaming_video_processing_block": 317, "streaming_video_processing_chart": 317, "streamingdemux": [11, 51, 82, 86, 95, 105, 126], "streamingdemuxerclass": [83, 105], "streamingdemuxerptr": [11, 24, 51, 82, 86, 95, 105], "strict": [15, 16, 18, 19, 159, 160, 161, 172, 226, 227, 235, 316, 317, 318], "stride": [62, 64, 93], "string": [7, 11, 14, 15, 16, 20, 22, 23, 24, 26, 29, 32, 45, 48, 51, 52, 56, 57, 59, 60, 62, 64, 68, 72, 73, 80, 82, 86, 89, 90, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 110, 111, 115, 156, 251, 309, 324, 331], "string_view": [11, 45, 51, 82, 86, 89, 95, 105, 107, 117], "strip": [18, 318, 325], "stripe": 1, "stripped_audio": 191, "strobelight": 340, "strong": 336, "struct": [11, 21, 45, 47, 55, 57, 58, 59, 83, 86, 89, 91, 92, 98, 99, 101, 102, 103, 153], "structur": [160, 318, 329, 343], "struggl": 342, "stuck": 322, "student": 15, "studi": [16, 324, 326, 343], "stuff": 252, "style": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 165, 316, 317, 318], "sub": [3, 13, 160, 261, 331, 332, 343], "sub1": 160, "sub2": 160, "sub_pipeline_1": 160, "sub_pipeline_2": 160, "subclass": [117, 118, 159, 267, 323], "subcompon": 343, "subdirectori": [157, 307], "subgraph": 160, "subject": 320, "submiss": 3, "submit": [1, 3, 5, 14, 15, 319], "submodul": 332, "subprocess": [7, 10, 18, 158, 297, 299, 321, 339], "subroutin": 340, "subsequ": 260, "subset": [18, 103, 301, 302, 318], "substanti": 9, "subtl": [5, 334, 342], "subtract": 335, "succe": [1, 3, 267, 319], "succeed": [3, 297, 319], "success": [268, 269, 335, 337], "successfulli": [3, 6, 319], "suffer": [265, 324, 341], "suffici": 297, "suffix": [173, 185, 192, 202, 206, 219], "suggest": [7, 10, 15, 265, 331, 335, 336, 337, 339, 342], "suit": [9, 15], "suitabl": [7, 257], "sum": [14, 17, 18, 19, 318, 335], "summar": [4, 334], "summari": [2, 159, 329, 338], "summarywrit": 159, "super": [19, 159], "supoprt": 319, "support": [3, 7, 9, 13, 15, 19, 160, 164, 192, 194, 210, 212, 228, 229, 231, 233, 236, 246, 247, 248, 261, 318, 319, 324, 327, 331, 332, 334], "supportsgetitem": [261, 291], "supportsread": 223, "suppos": 331, "suppress": 283, "suppress_repeated_log": 283, "suppression_threshold": 283, "suppression_warning_interv": 283, "sure": [89, 206, 207, 261, 267, 291, 297, 319, 322, 327, 332], "surpris": 10, "surrog": 320, "suscept": 342, "suspect": [10, 340], "suspend_alwai": [99, 113, 114], "sustain": 331, "swap": [10, 330, 331], "switch": [4, 7, 14, 260, 261, 318, 324, 329, 332], "sy": [14, 15, 316], "sync": [2, 4, 5, 232, 233, 261, 291, 316, 334], "sync_func": 4, "synchron": [1, 2, 3, 5, 208, 244, 260, 261, 291, 316, 319, 320, 324, 325, 326, 334, 340], "syntax": 2, "system": [2, 3, 9, 18, 19, 319, 334, 335, 336, 337, 338], "t": [1, 3, 4, 14, 15, 16, 92, 99, 113, 114, 158, 163, 164, 166, 214, 244, 260, 261, 271, 283, 291, 297, 299, 303, 304, 305, 313, 314, 315, 319, 322, 324, 335], "t0": [14, 15, 16, 18, 19, 158, 316, 318], "t_": 261, "t_valu": 14, "tabl": 4, "take": [1, 5, 7, 13, 14, 15, 159, 164, 193, 194, 208, 228, 261, 291, 319, 323, 324, 325, 335, 336, 337, 338, 340, 341, 342], "take_gil": 340, "taken": [319, 340], "talk": [89, 343], "tansfer": 205, "tar": 14, "tar_buff": 14, "tar_data": [14, 223], "tar_siz": 14, "tarfil": [223, 326], "target": [18, 19, 158, 233, 242, 244, 257, 318, 331], "tarinfo": 14, "tarnsform": 158, "task": [1, 2, 4, 5, 9, 10, 19, 162, 258, 260, 261, 265, 267, 268, 269, 270, 283, 291, 319, 320, 324, 325, 331, 333, 337, 338, 343], "task1": 319, "task2": 319, "task3": 319, "task_fn": [3, 319], "task_funct": 324, "task_hook": [267, 269], "task_hook_factori": [159, 261, 270, 299], "taskhook": [159, 261, 270, 274, 279, 299, 323], "taskperfstat": [159, 269, 323, 338], "taskstatshook": [159, 261, 267, 268, 270, 279, 323], "tcodec": 175, "td": 160, "team": [7, 332, 343], "techniqu": 337, "tempfil": 229, "templat": [11, 24, 29, 46, 48, 49, 50, 52, 54, 55, 57, 59, 60, 82, 86, 87, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 114, 125, 132, 140, 148], "temporaryfil": 229, "tensor": [4, 9, 18, 19, 158, 159, 164, 172, 184, 191, 198, 205, 206, 207, 217, 219, 236, 241, 244, 316, 318, 324, 325, 326, 331, 340, 341], "tensorboard": [159, 323], "termin": 297, "test": [14, 15, 158, 264, 296, 327, 343], "text": 160, "tfp": 158, "than": [3, 7, 10, 15, 158, 165, 229, 261, 265, 285, 286, 302, 319, 320, 324, 331, 335, 336, 340, 342, 343], "thei": [3, 6, 7, 9, 13, 14, 103, 158, 161, 164, 184, 233, 289, 290, 297, 298, 302, 319, 324, 331, 334, 335], "them": [2, 3, 4, 5, 6, 7, 9, 13, 18, 19, 158, 160, 164, 205, 227, 233, 244, 260, 261, 265, 287, 288, 291, 297, 300, 318, 319, 320, 323, 324, 331, 332, 335, 336, 337, 338, 340, 341, 342], "themselv": 1, "therefor": [5, 13, 14, 92, 194, 317, 320, 324, 327, 331, 334, 335, 336], "theri": 186, "thi": [1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 158, 159, 160, 161, 163, 164, 165, 168, 174, 175, 178, 185, 187, 189, 191, 192, 193, 194, 199, 200, 202, 203, 205, 206, 207, 210, 212, 214, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 235, 244, 252, 259, 260, 261, 264, 265, 266, 267, 269, 270, 271, 273, 284, 289, 290, 291, 297, 298, 299, 301, 302, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "thin": 192, "thing": [3, 5, 89, 319, 331, 334], "think": [3, 319, 337], "third": [15, 237, 327], "those": 7, "though": [3, 4, 7, 10, 13, 194, 317, 319], "thought": [10, 339], "thread": [1, 2, 5, 7, 8, 10, 13, 14, 15, 16, 18, 19, 101, 161, 164, 194, 208, 234, 244, 260, 261, 270, 291, 318, 319, 321, 322, 325, 326, 329, 332, 333, 343], "thread_count": 14, "thread_loc": 324, "threadpoolexecutor": [3, 4, 14, 15, 16, 319, 320, 324], "three": [3, 14, 15, 161, 297, 325, 331], "threshold": 283, "throttl": 336, "through": [9, 101, 168, 178, 231, 265, 323, 324, 327, 331, 332, 335, 336, 338], "throughout": 335, "throughput": [7, 13, 158, 161, 298, 318, 319, 330, 331, 332, 338, 343], "throw": 98, "thrown": [103, 262], "thu": [14, 15, 186, 302, 319], "tight": 161, "tight_layout": 161, "tiktoken": [13, 332], "time": [1, 3, 4, 5, 7, 9, 10, 13, 14, 15, 16, 18, 19, 101, 158, 159, 161, 164, 169, 172, 173, 174, 184, 187, 189, 190, 194, 195, 199, 200, 206, 207, 219, 222, 231, 237, 253, 259, 260, 264, 265, 266, 268, 297, 316, 318, 319, 320, 322, 324, 327, 334, 337, 338, 339, 340, 341, 342], "time_bas": [11, 22, 82, 90, 92, 98, 101, 105, 115, 169, 185, 187, 195, 199, 317], "time_offset_second": 231, "timebas": 199, "timeout": [17, 19, 164, 166, 260, 297, 334, 341], "timeouterror": 260, "timestamp": [7, 11, 82, 101, 105, 115, 169, 174, 184, 187, 195, 199, 200, 211, 213, 216, 219, 222, 224, 230], "timm": 19, "titl": [161, 326], "tmp": 256, "tnum_work": 158, "to_jax": 164, "to_numba": [164, 176, 179], "to_numpi": [15, 176, 317], "to_thread": [3, 4, 261, 291], "to_torch": [6, 18, 19, 158, 159, 164, 176, 179, 205, 316, 318, 325, 331], "tobyt": 228, "togeth": [6, 16, 302, 331], "toi": 5, "token": 332, "too": [7, 324], "took": [18, 318], "tool": [340, 343], "toolkit": 327, "top": [3, 160, 237, 319, 324], "top1": 19, "top5": 19, "top_catid": 19, "top_prob": 19, "topic": [8, 10], "topk": 19, "torch": [16, 18, 19, 158, 159, 164, 205, 208, 217, 241, 244, 301, 302, 316, 318, 324, 331, 337], "torch_cuda_warmup": 316, "torchdata": [7, 10], "torchvis": [158, 331], "total": [14, 15, 161, 341], "total_batch": [18, 318], "total_count": 14, "total_files_process": 14, "total_fram": [18, 318], "tpacket": 175, "trac": [103, 257], "tracc": 254, "trace": [1, 5, 18, 19, 104, 252, 253, 254, 316, 318, 324, 336, 340, 342], "trace_count": [11, 60, 82, 86, 104, 105], "trace_ev": 19, "trace_event_begin": [11, 60, 82, 86, 104, 105], "trace_event_end": [11, 60, 82, 86, 104, 105], "trace_path": [18, 19, 316, 318], "traceback": 194, "tracer": [255, 338], "tracingsess": [11, 60, 78, 82, 86, 104, 105], "tracingsessionenum": [83, 105], "track": [266, 269], "trade": [7, 334], "tradit": 2, "train": [7, 9, 10, 13, 16, 18, 19, 158, 163, 244, 271, 301, 302, 307, 318, 324, 326, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343], "trand": 336, "transfer": [3, 7, 9, 18, 19, 158, 164, 203, 244, 319, 324, 325, 327, 331, 335, 340, 341], "transfer_buff": [164, 205, 224, 225, 226, 230, 318], "transfer_buffer_cpu": 217, "transfer_data": 324, "transfer_executor": 324, "transfer_fn": 164, "transfer_tensor": 324, "transfor": 19, "transform": [19, 158, 300, 312, 317, 331], "transftransform": 257, "transit": 297, "translat": 335, "travers": [244, 300, 307, 310], "treatment": 331, "tree": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318], "trend": [15, 329, 335], "tri": [10, 14, 193, 322, 335], "trim": [93, 219, 222], "true": [3, 4, 14, 15, 16, 17, 18, 19, 99, 101, 158, 159, 161, 164, 175, 184, 200, 205, 226, 227, 233, 234, 235, 244, 246, 247, 248, 256, 271, 278, 283, 302, 314, 315, 316, 317, 318, 324], "truli": 337, "truthi": 278, "try": [1, 2, 3, 14, 15, 18, 19, 158, 267, 318, 319, 336, 337, 340], "tunabl": 332, "tune": 161, "tupl": [6, 14, 15, 16, 18, 19, 24, 51, 57, 60, 71, 73, 95, 101, 104, 115, 158, 169, 174, 184, 187, 192, 195, 199, 200, 207, 208, 213, 216, 219, 222, 223, 224, 228, 230, 244, 251, 257, 261, 290, 291, 307, 316, 317, 318, 324, 325], "turn": [9, 10, 322, 325, 334, 339], "turner": 326, "tutori": [3, 319], "twice": 331, "two": [14, 89, 191, 194, 267, 302, 320, 323, 334], "txt": [14, 18, 19, 158, 260, 317], "type": [7, 11, 14, 15, 16, 18, 19, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 82, 84, 89, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 104, 105, 106, 108, 110, 111, 112, 114, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 184, 194, 199, 202, 206, 217, 231, 238, 239, 240, 241, 244, 251, 261, 270, 274, 277, 279, 282, 291, 299, 309, 316, 317, 318, 319, 330, 334], "typedef": [11, 103, 157], "typeerror": 194, "typenam": [74, 99, 104, 113], "typevar": 16, "typic": [3, 9, 13, 164, 193, 200, 260, 325, 335, 336, 340, 341], "u": [10, 166, 199, 233, 261, 270, 291, 293, 298, 299, 324], "u8": [173, 202, 206, 219], "u8p": [206, 219], "u_": 261, "udp": 191, "ui": 159, "uint": [11, 44, 61, 82, 91, 103, 105, 108], "uint64_t": 98, "uint8": [16, 159, 184, 217, 231, 318], "uint8_t": [61, 91, 101, 108, 116], "uintptr_t": [98, 101, 115, 208], "uncommon": 332, "undef": 98, "under": [14, 15, 16, 17, 18, 19, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 158, 159, 160, 161, 316, 317, 318, 327, 343], "underli": [193, 194, 212, 231, 337, 340], "understand": [2, 319, 329, 330, 332], "undesir": 208, "undoubtedli": 10, "unexpect": [16, 103, 160, 297, 322], "unexpected_cmd_reciev": 297, "unexpectedli": 5, "unhandled_except": [11, 82, 99, 105, 113, 114], "unharm": 322, "unifi": 2, "uniform": 160, "uniniti": 194, "uninstal": 327, "unique_ptr": [78, 89, 91, 94, 95, 96, 97, 98, 100, 101, 104, 119, 121, 125, 126, 127, 132, 133, 140, 142, 143, 148], "uniquiet": 332, "unit": [3, 5, 108, 169, 187, 195, 199, 206, 207, 260, 261, 270, 319, 339], "univari": 325, "unlik": [103, 210, 212, 322, 331], "unlimit": 261, "unsaf": [14, 158], "unseen": 332, "unsign": [173, 202, 206, 207, 236], "unstabl": 15, "unstack": 325, "until": [1, 3, 164, 206, 207, 231, 261, 291, 305, 313, 322, 332, 334, 335, 339], "unus": [316, 322], "up": [4, 9, 14, 18, 313, 318, 327, 335, 339, 340, 342], "updat": [9, 161, 337], "upgrad": [327, 343], "upload": 9, "upper": [10, 14, 15, 339], "upperbound": 7, "upstream": [3, 261, 265, 266, 291, 331, 335], "uri": [29, 95, 100, 237], "url": [89, 117, 164, 184, 191, 260, 316, 325, 326, 341], "url_gener": 320, "us": [1, 2, 3, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 19, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 158, 159, 160, 161, 164, 165, 169, 170, 172, 185, 187, 191, 193, 194, 195, 196, 198, 203, 206, 207, 209, 210, 211, 212, 214, 218, 220, 222, 227, 229, 233, 234, 236, 237, 244, 252, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 279, 280, 281, 282, 284, 289, 290, 291, 292, 293, 297, 298, 302, 303, 304, 305, 307, 308, 313, 316, 317, 319, 320, 322, 324, 325, 326, 327, 330, 331, 332, 334, 335, 337, 339, 340, 341], "usag": [2, 160, 161, 175, 192, 201, 205, 259, 260, 261, 319, 337], "use_bf16": 19, "use_cach": 234, "use_nvdec": 318, "use_nvjpeg": 19, "usecas": [175, 201], "user": [1, 6, 18, 101, 174, 200, 318, 319, 327, 338, 340, 343], "usr": [14, 16, 18, 158, 159, 160, 161, 317], "usual": [1, 4, 199, 206, 207, 267, 317, 319, 322, 324, 331, 342], "util": [4, 9, 10, 13, 17, 18, 19, 32, 41, 59, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 105, 157, 158, 159, 318, 326, 331, 334, 336, 337, 339, 341, 343], "utmost": 323, "uv": [237, 327], "ux": 343, "v": [16, 18, 158, 159, 161, 165, 199, 233, 318, 327, 333], "val": [18, 19, 158, 159, 203, 252, 253, 307, 318], "valentin": 326, "valid": [15, 16, 189, 194, 206, 207, 219, 222, 307, 335], "valu": [3, 4, 11, 13, 14, 16, 19, 42, 43, 44, 82, 99, 105, 113, 114, 158, 160, 161, 163, 169, 173, 174, 187, 191, 195, 200, 202, 206, 207, 208, 210, 212, 217, 219, 222, 233, 236, 252, 253, 257, 260, 261, 265, 271, 273, 278, 291, 296, 297, 301, 302, 313, 314, 324, 334, 335, 342], "valueerror": [16, 231], "vari": 191, "variabl": [4, 194, 244, 270, 273, 278, 298, 322, 327], "varianc": 336, "variant": [53, 54, 57, 97, 98, 101, 138, 150, 334], "varieti": [325, 337, 343], "variou": [9, 14, 15], "vc1": [11, 42, 82, 103, 105], "vector": [11, 30, 47, 49, 54, 57, 60, 61, 64, 70, 71, 72, 82, 86, 91, 93, 98, 100, 101, 104, 105, 108], "verbos": 252, "veri": [1, 5, 7, 10, 14, 319], "verifi": [160, 336, 340], "versatil": 7, "version": [7, 14, 15, 103, 212, 251, 327, 343], "version_bas": 17, "version_info": [14, 15], "via": [5, 160, 165, 334], "video": [11, 43, 82, 92, 96, 98, 101, 103, 105, 124, 129, 130, 139, 141, 144, 147, 154, 159, 175, 184, 189, 191, 195, 196, 197, 198, 199, 200, 201, 207, 209, 211, 216, 220, 222, 230, 235, 237, 257, 316, 326, 327, 332, 340, 343], "video_codec": [175, 182, 184, 193, 220, 317], "video_dataload": 318, "video_decod": 317, "video_encod": 317, "video_encode_config": [191, 197, 236, 317], "video_fram": 185, "video_index": 317, "video_packet": [191, 317], "video_s": [185, 317], "video_stream_index": [184, 317], "videocodec": [11, 48, 82, 86, 92, 105, 182, 184, 191, 193, 200, 220], "videodecod": [182, 317], "videoencod": [11, 52, 82, 86, 96, 105, 191, 317], "videoencodeconfig": [11, 59, 82, 86, 103, 105, 191, 257], "videoencoderptr": [11, 52, 82, 86, 96, 105], "videofram": [11, 54, 82, 86, 98, 105, 170, 182, 185, 189, 196, 198, 204, 207, 211, 317], "videoframesptr": [11, 54, 64, 82, 86, 93, 98, 105, 138], "videopacket": [11, 57, 82, 86, 101, 105, 184, 191, 193, 196, 198, 201, 211, 212, 216, 221, 222, 235], "videopacketsptr": [11, 57, 71, 82, 86, 101, 105, 150], "view": [14, 19, 319, 320], "virtual": [21, 89, 102, 107, 109, 117, 118], "visit": 313, "visual": [161, 194, 340], "void": [21, 26, 29, 30, 32, 62, 64, 74, 75, 76, 77, 80, 81, 91, 93, 97, 98, 99, 100, 101, 102, 104, 108, 113, 114, 118], "vp8": [11, 42, 82, 103, 105], "vp9": [11, 42, 82, 103, 105], "vstack": 185, "w": [14, 15, 159, 204, 207, 210, 233, 317, 318], "wa": [3, 5, 7, 9, 10, 158, 194, 212, 252, 264, 265, 297, 299, 319, 331, 335, 336, 343], "wai": [3, 5, 7, 161, 165, 214, 244, 319, 320, 322, 323, 324, 327, 331, 332, 334, 337, 340, 343], "wait": [1, 3, 5, 7, 164, 233, 259, 260, 265, 297, 319, 320, 334, 335, 336, 339, 342], "walk": 338, "walltim": 159, "want": [3, 7, 191, 211, 267, 319, 324, 325, 327, 331, 332, 335, 341], "warm": [9, 14, 18, 318], "warmup": 15, "warmup_futur": 14, "warn": [14, 252, 283], "wast": 331, "watch": 297, "wav": [231, 326, 335], "wav_benchmark_plot": [14, 15], "wav_benchmark_plot_2": [14, 15], "wav_benchmark_result": 15, "wav_buff": 15, "wav_data": 15, "wavfil": 15, "we": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 15, 102, 103, 252, 317, 319, 320, 322, 323, 324, 327, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "weakest": 336, "webp": 15, "weight": 313, "well": [3, 331, 334], "went": [252, 265, 335], "were": [7, 10, 212, 337, 340], "what": [1, 5, 7, 10, 206, 207, 319, 320, 326, 332, 336, 338, 340], "whatev": 7, "wheel": 1, "when": [1, 2, 3, 5, 7, 9, 10, 13, 14, 17, 18, 92, 101, 103, 158, 161, 173, 174, 175, 185, 189, 191, 194, 199, 200, 203, 206, 207, 211, 217, 218, 219, 220, 222, 228, 244, 259, 260, 261, 262, 265, 266, 267, 269, 270, 271, 273, 278, 283, 291, 297, 301, 302, 313, 318, 319, 320, 322, 323, 324, 327, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342], "whenev": [335, 339], "where": [1, 5, 7, 10, 158, 199, 204, 228, 265, 294, 297, 307, 318, 320, 322, 324, 325, 334, 335, 336, 337, 338, 340, 342], "wherea": [10, 330], "whether": [3, 7, 14, 19, 158, 228, 256, 286, 296, 297, 319, 331, 334, 342], "which": [1, 3, 4, 6, 7, 10, 14, 18, 101, 160, 161, 184, 191, 193, 199, 200, 203, 206, 207, 212, 217, 218, 219, 220, 222, 228, 229, 252, 259, 260, 261, 266, 283, 289, 290, 291, 297, 298, 299, 308, 318, 319, 322, 323, 324, 325, 326, 327, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343], "while": [1, 3, 4, 5, 8, 9, 10, 14, 18, 158, 193, 203, 260, 289, 298, 302, 314, 315, 318, 319, 331, 335, 336, 338, 342, 343], "who": [320, 343], "whole": [2, 261, 291, 318, 319, 336, 343], "why": [4, 326, 329, 331, 334, 342], "width": [18, 19, 103, 159, 164, 187, 189, 190, 194, 195, 199, 200, 204, 205, 212, 217, 222, 226, 227, 233, 236, 237, 257, 316, 317, 318, 325], "wieght": 302, "wiki": [103, 257], "window": [24, 95, 101, 174, 184, 194, 200, 335, 342], "window_fullscreen": 191, "wise": [314, 332], "with_stack": 316, "with_transf": 158, "within": [98, 260, 335], "without": [3, 6, 7, 14, 15, 101, 103, 164, 191, 192, 205, 211, 218, 220, 236, 260, 261, 291, 324, 331, 334, 340], "wmv3": [11, 42, 82, 103, 105], "won": [1, 92, 214, 261, 291, 322, 335], "word": [5, 319], "wordnet": [308, 309], "work": [2, 3, 4, 5, 7, 9, 15, 39, 40, 41, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 157, 165, 193, 194, 214, 319, 326, 331, 332, 334, 336, 338, 342, 343], "workaround": [13, 324, 331, 332], "worker": [4, 7, 16, 18, 19, 158, 164, 165, 297, 318, 331], "worker_entrypoint": [18, 318], "worker_id": [18, 318], "worker_init_fn": 166, "workflow": [8, 9], "workload": [9, 343], "world": 319, "world_siz": [301, 302], "worth": [330, 336, 337], "worthwhil": 1, "would": [3, 7, 9, 10, 320, 332, 334], "wrap": [4, 7, 160, 163, 244, 271, 283, 319, 322, 337, 340], "wrap_futur": 4, "wrapper": [4, 5, 163, 192, 271, 325], "write": [1, 4, 5, 7, 11, 15, 29, 82, 100, 105, 159, 191, 236, 256, 317, 325, 334], "writehead": [14, 15], "writer": [14, 15, 159], "writerow": [14, 15], "written": [5, 7, 13, 191, 217, 317, 331, 334, 341], "wroker": 297, "wrong": 252, "www": 103, "x": [14, 19, 158, 160, 161, 173, 229, 298, 317, 322], "x3": 332, "xlabel": 161, "xtick": 161, "y": [158, 199, 229, 233, 237], "yaml": 17, "ycgco": 233, "ye": 331, "year": 326, "yet": 331, "yield": [14, 16, 18, 158, 164, 165, 223, 237, 260, 261, 267, 271, 287, 288, 291, 295, 297, 299, 301, 302, 307, 313, 314, 315, 318, 322, 325], "yield_valu": [11, 82, 99, 105, 113, 114], "ylabel": 161, "you": [1, 3, 4, 6, 7, 9, 10, 13, 159, 161, 163, 165, 191, 193, 208, 211, 236, 261, 266, 267, 269, 270, 271, 284, 293, 301, 302, 317, 319, 322, 323, 324, 325, 326, 327, 331, 332, 335, 336, 337, 338, 340, 343], "your": [161, 163, 261, 270, 271, 324, 327, 332, 343], "yuta": 326, "yuv": [199, 207, 317], "yuv420": [317, 331], "yuv420p": [185, 190, 200, 222, 257, 317], "yuv422p": 222, "yuv444p": [207, 217, 222, 236], "zero": [18, 168, 178, 318, 322, 335], "zip": [7, 158, 192, 229, 331], "zipfil": 7, "zlib": 327, "zone": 336, "zoom": 1}, "titles": ["API Reference", "The Event Loop", "Introduction to Async I/O", "Implementing Orchestration Mechanism", "Running Synchronous Functions", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">async</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">await</span></code> keywords", "Best Practices", "Data Format and Performance", "Case Studies", "Building Inference Pipeline", "Parallelism and Performance", "API References (C++)", "Examples", "Frequently Asked Questions", "Benchmark tarfile", "Benchmark wav", "Data formats", "Hydra integration", "Image dataloading", "Imagenet classification", "Template Class BSF", "Class CPUStorage", "Template Class Codec", "Template Class Decoder", "Class Demuxer", "Template Class Encoder", "Class FilterGraph", "Template Class Frames", "Class InternalError", "Class Muxer", "Class PacketSeries", "Class StreamingDemuxer", "Class TracingSession", "Template Class DecoderImpl", "Template Class EncoderImpl", "Define _IS_VIDEO", "Define _IS_AUDIO", "Define _IS_IMAGE", "Define SPDL_DEFAULT_BUFFER_SIZE", "Directory src", "Directory libspdl", "Directory core", "Enum CodecID", "Enum MediaType", "Enum ElemClass", "File adaptor.h", "File bsf.h", "File buffer.h", "File codec.h", "File conversion.h", "File decoder.h", "File demuxing.h", "File encoder.h", "File filter_graph.h", "File frames.h", "File generator.h", "File muxer.h", "File packets.h", "File storage.h", "File types.h", "File utils.h", "Function spdl::core::cpu_buffer", "Function spdl::core::create_reference_audio_frame", "Template Function spdl::core::convert_frames(const std::vector&lt;const Frames&lt;media&gt; *&gt;&amp;, std::shared_ptr&lt;CPUStorage&gt;)", "Function spdl::core::create_reference_video_frame", "Template Function spdl::core::convert_frames(const Frames&lt;media&gt; *, std::shared_ptr&lt;CPUStorage&gt;)", "Function spdl::core::make_demuxer(const std::string_view, const std::optional&lt;DemuxConfig&gt;&amp;)", "Function spdl::core::make_demuxer(const std::string&amp;, const SourceAdaptorPtr&amp;, const std::optional&lt;DemuxConfig&gt;&amp;)", "Function spdl::core::make_filter_graph", "Template Function spdl::core::clone", "Template Function spdl::core::get_timestamps", "Function spdl::core::extract_packets_at_indices", "Function spdl::core::get_ffmpeg_filters", "Function spdl::core::get_ffmpeg_versions", "Template Function spdl::core::trace_counter", "Function spdl::core::trace_event_end", "Function spdl::core::set_ffmpeg_log_level", "Function spdl::core::register_avdevices", "Function spdl::core::init_tracing", "Function spdl::core::get_ffmpeg_log_level", "Function spdl::core::trace_event_begin", "Function spdl::core::init_glog", "Full API", "Class Hierarchy", "File Hierarchy", "Namespace spdl", "Namespace spdl::core", "Namespace spdl::core::detail", "Namespace std", "Program Listing for File adaptor.h", "Program Listing for File bsf.h", "Program Listing for File buffer.h", "Program Listing for File codec.h", "Program Listing for File conversion.h", "Program Listing for File decoder.h", "Program Listing for File demuxing.h", "Program Listing for File encoder.h", "Program Listing for File filter_graph.h", "Program Listing for File frames.h", "Program Listing for File generator.h", "Program Listing for File muxer.h", "Program Listing for File packets.h", "Program Listing for File storage.h", "Program Listing for File types.h", "Program Listing for File utils.h", "Libspdl API", "Struct AVRational", "Struct BytesAdaptor", "Struct CPUBuffer", "Struct DataInterface", "Struct DecodeConfig", "Struct DemuxConfig", "Template Struct EncodeConfigBase", "Template Struct Generator", "Struct Generator::promise_type", "Template Struct Packets", "Struct RawPacketData", "Struct SourceAdaptor", "Struct Storage", "Typedef spdl::core::DataInterfacePtr", "Typedef spdl::core::SourceAdaptorPtr", "Typedef spdl::core::CPUBufferPtr", "Typedef spdl::core::ImageCodec", "Typedef spdl::core::AudioCodec", "Typedef spdl::core::VideoCodec", "Typedef spdl::core::DecoderPtr", "Typedef spdl::core::StreamingDemuxerPtr", "Typedef spdl::core::DemuxerPtr", "Typedef spdl::core::AudioEncoderPtr", "Typedef spdl::core::VideoEncoder", "Typedef spdl::core::VideoEncoderPtr", "Typedef spdl::core::AudioEncoder", "Typedef spdl::core::EncoderPtr", "Typedef spdl::core::FilterGraphPtr", "Typedef spdl::core::ImageFramesPtr", "Typedef spdl::core::ImageFrames", "Typedef spdl::core::AudioFrames", "Typedef spdl::core::AudioFramesPtr", "Typedef spdl::core::AnyFrames", "Typedef spdl::core::VideoFramesPtr", "Typedef spdl::core::FramesPtr", "Typedef spdl::core::VideoFrames", "Typedef spdl::core::MuxerPtr", "Typedef spdl::core::PacketSeriesPtr", "Typedef spdl::core::VideoPackets", "Typedef spdl::core::ImagePacketsPtr", "Typedef spdl::core::AudioPackets", "Typedef spdl::core::VideoPacketsPtr", "Typedef spdl::core::PacketsPtr", "Typedef spdl::core::AudioPacketsPtr", "Typedef spdl::core::AnyPackets", "Typedef spdl::core::ImagePackets", "Typedef spdl::core::AudioEncodeConfig", "Typedef AVRational", "Typedef spdl::core::VideoEncodeConfig", "Typedef spdl::core::Rational", "Typedef spdl::core::OptionDict", "Full API", "Multi thread preprocessing", "Performance analysis", "Pipeline definitions", "Pipeline profiling", "spdl.dataloader", "spdl.dataloader.CacheDataLoader", "spdl.dataloader.DataLoader", "spdl.dataloader.PyTorchDataLoader", "spdl.dataloader.get_pytorch_dataloader", "spdl.io", "spdl.io.ArrayInterface", "spdl.io.AudioCodec", "spdl.io.AudioDecoder", "spdl.io.AudioEncodeConfig", "spdl.io.AudioEncoder", "spdl.io.AudioFrames", "spdl.io.AudioPackets", "spdl.io.BSF", "spdl.io.CPUBuffer", "spdl.io.CPUStorage", "spdl.io.CUDAArrayInterface", "spdl.io.CUDABuffer", "spdl.io.CUDAConfig", "spdl.io.DecodeConfig", "spdl.io.Decoder", "spdl.io.DemuxConfig", "spdl.io.Demuxer", "spdl.io.FilterGraph", "spdl.io.Frames", "spdl.io.ImageCodec", "spdl.io.ImageDecoder", "spdl.io.ImageFrames", "spdl.io.ImagePackets", "spdl.io.Muxer", "spdl.io.NpzFile", "spdl.io.NvDecDecoder", "spdl.io.Packets", "spdl.io.VideoCodec", "spdl.io.VideoDecoder", "spdl.io.VideoEncodeConfig", "spdl.io.VideoEncoder", "spdl.io.VideoFrames", "spdl.io.VideoPackets", "spdl.io.apply_bsf", "spdl.io.audio_encode_config", "spdl.io.convert_array", "spdl.io.convert_frames", "spdl.io.cpu_storage", "spdl.io.create_reference_audio_frame", "spdl.io.create_reference_video_frame", "spdl.io.cuda_config", "spdl.io.decode_config", "spdl.io.decode_image_nvjpeg", "spdl.io.decode_packets", "spdl.io.decode_packets_nvdec", "spdl.io.demux_audio", "spdl.io.demux_config", "spdl.io.demux_image", "spdl.io.demux_video", "spdl.io.encode_image", "spdl.io.get_abuffer_desc", "spdl.io.get_audio_filter_desc", "spdl.io.get_buffer_desc", "spdl.io.get_filter_desc", "spdl.io.get_video_filter_desc", "spdl.io.iter_tarfile", "spdl.io.load_audio", "spdl.io.load_image", "spdl.io.load_image_batch", "spdl.io.load_image_batch_nvjpeg", "spdl.io.load_npy", "spdl.io.load_npz", "spdl.io.load_video", "spdl.io.load_wav", "spdl.io.nv12_to_bgr", "spdl.io.nv12_to_rgb", "spdl.io.nvdec_decoder", "spdl.io.sample_decode_video", "spdl.io.save_image", "spdl.io.streaming_load_video_nvdec", "spdl.io.to_jax", "spdl.io.to_numba", "spdl.io.to_numpy", "spdl.io.to_torch", "spdl.io.transfer_buffer", "spdl.io.transfer_buffer_cpu", "spdl.io.transfer_tensor", "spdl.io.utils", "spdl.io.utils.built_with_cuda", "spdl.io.utils.built_with_nvcodec", "spdl.io.utils.built_with_nvjpeg", "spdl.io.utils.get_ffmpeg_filters", "spdl.io.utils.get_ffmpeg_log_level", "spdl.io.utils.get_ffmpeg_versions", "spdl.io.utils.set_ffmpeg_log_level", "spdl.io.utils.trace_counter", "spdl.io.utils.trace_event", "spdl.io.utils.trace_gc", "spdl.io.utils.tracing", "spdl.io.video_encode_config", "spdl.pipeline", "spdl.pipeline.AsyncQueue", "spdl.pipeline.Pipeline", "spdl.pipeline.PipelineBuilder", "spdl.pipeline.PipelineFailure", "spdl.pipeline.ProfileHook", "spdl.pipeline.ProfileResult", "spdl.pipeline.QueuePerfStats", "spdl.pipeline.StatsQueue", "spdl.pipeline.TaskHook", "spdl.pipeline.TaskPerfStats", "spdl.pipeline.TaskStatsHook", "spdl.pipeline.build_pipeline", "spdl.pipeline.cache_iterator", "spdl.pipeline.config", "spdl.pipeline.config.diagnostic_mode_num_sources", "spdl.pipeline.config.get_default_hook_class", "spdl.pipeline.config.get_default_profile_callback", "spdl.pipeline.config.get_default_profile_hook", "spdl.pipeline.config.get_default_queue_class", "spdl.pipeline.config.is_diagnostic_mode_enabled", "spdl.pipeline.config.set_default_hook_class", "spdl.pipeline.config.set_default_profile_callback", "spdl.pipeline.config.set_default_profile_hook", "spdl.pipeline.config.set_default_queue_class", "spdl.pipeline.create_task", "spdl.pipeline.defs", "spdl.pipeline.defs.Aggregate", "spdl.pipeline.defs.AggregateConfig", "spdl.pipeline.defs.Disaggregate", "spdl.pipeline.defs.DisaggregateConfig", "spdl.pipeline.defs.Merge", "spdl.pipeline.defs.MergeConfig", "spdl.pipeline.defs.Pipe", "spdl.pipeline.defs.PipeConfig", "spdl.pipeline.defs.PipelineConfig", "spdl.pipeline.defs.SinkConfig", "spdl.pipeline.defs.SourceConfig", "spdl.pipeline.is_eof", "spdl.pipeline.iterate_in_subprocess", "spdl.pipeline.profile_pipeline", "spdl.pipeline.run_pipeline_in_subprocess", "spdl.source", "spdl.source.DistributedDeterministicSampler", "spdl.source.DistributedRandomSampler", "spdl.source.IterableWithShuffle", "spdl.source.SizedIterable", "spdl.source.SizedIterableWithShuffle", "spdl.source.imagenet", "spdl.source.imagenet.ImageNet", "spdl.source.imagenet.get_mappings", "spdl.source.imagenet.parse_wnid", "spdl.source.local_directory", "spdl.source.local_directory.LocalDirectory", "spdl.source.utils", "spdl.source.utils.MergeIterator", "spdl.source.utils.embed_shuffle", "spdl.source.utils.repeat_source", "Streaming nvdec decoding", "Streaming video processing", "Video dataloading", "Introduction to Async", "Concurrency", "Getting Started", "Building and Running Pipeline", "Collecting Runtime Statistics", "Pipeline Parallelism", "Pipeline Stages", "SPDL (Scalable and Performant Data Loading)", "Installation", "IO Module", "Migration Guide", "Paradigm Shift", "Migrating from PyTorch DataLoader", "Why migrate to SPDL?", "Development Notes", "Implementation detail of Pipeline", "Analyzing the Performance", "Metrics across Ranks", "Headspace Analysis", "Optimization Guide", "Noisy Neighbour", "Resolving the Bottleneck", "Composition of Pipeline", "The Straggler", "Overview"], "titleterms": {"By": [45, 47, 48, 52, 54, 55, 57, 58, 59], "NOT": 343, "One": 201, "The": [1, 4, 5, 7, 319, 335, 342], "_is_audio": 36, "_is_imag": 37, "_is_video": 35, "across": 336, "adaptor": [45, 89], "adjust": 340, "aggreg": [284, 285], "aggregateconfig": [284, 286], "an": [223, 324], "analysi": [159, 337], "analyz": 335, "anyfram": 138, "anypacket": 150, "api": [0, 11, 82, 105, 157, 162, 167, 245, 258, 272, 284, 300, 306, 310, 312, 326], "apply_bsf": [167, 201], "around": 13, "arrayinterfac": [167, 168], "ask": 13, "async": [2, 4, 5, 13, 319, 334], "asyncqueu": [258, 259], "attempt": 319, "audio": [184, 185, 214], "audio_encode_config": [167, 202], "audiocodec": [123, 167, 169], "audiodecod": [167, 170], "audioencod": [131, 167, 172], "audioencodeconfig": [152, 167, 171], "audioencoderptr": 128, "audiofram": [136, 167, 173], "audioframesptr": 137, "audiopacket": [146, 167, 174], "audiopacketsptr": 149, "averag": [335, 336], "avoid": 6, "avrat": [106, 153], "await": [5, 319], "background": 9, "base": [21, 28, 107], "basic": 318, "batch": 331, "benchmark": [14, 15], "best": 6, "bottleneck": 340, "bsf": [20, 46, 90, 167, 175], "buffer": [47, 91, 334], "build": [9, 322, 327], "build_pipelin": [258, 270], "built_with_cuda": [245, 246], "built_with_nvcodec": [245, 247], "built_with_nvjpeg": [245, 248], "bulk": 260, "busi": 9, "bytesadaptor": 107, "c": 11, "cach": 337, "cache_iter": [258, 271], "cachedataload": [162, 163], "call": 322, "case": 8, "caveat": 322, "chain": 3, "challeng": 9, "chang": [7, 209], "citat": 326, "class": [6, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 82, 83, 86, 87, 105, 159, 318], "classif": 19, "clone": [69, 194], "codec": [22, 48, 92], "codecid": 42, "collect": 323, "combin": 324, "commun": 4, "compon": 317, "compos": [6, 319], "composit": 341, "con": 332, "concept": 343, "concurr": [3, 4, 319, 320, 330, 340], "config": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "const": [63, 65, 66, 67], "content": 326, "convers": [49, 93], "convert_arrai": [167, 203], "convert_fram": [63, 65, 167, 204], "core": [41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 343], "cpu_buff": 61, "cpu_storag": [167, 205], "cpubuff": [108, 167, 176], "cpubufferptr": 121, "cpustorag": [21, 63, 65, 167, 177], "creat": 6, "create_reference_audio_fram": [62, 167, 206], "create_reference_video_fram": [64, 167, 207], "create_task": [258, 283], "cuda": [205, 208], "cuda_config": [167, 208], "cudaarrayinterfac": [167, 178], "cudabuff": [167, 179], "cudaconfig": [167, 180], "custom": 324, "data": [7, 16, 297, 326, 335, 336], "datainterfac": 109, "datainterfaceptr": 119, "dataload": [18, 162, 163, 164, 165, 166, 318, 331], "dataset": 6, "decid": 337, "decod": [23, 50, 94, 167, 182, 184, 193, 209, 316, 318, 331], "decode_config": [167, 209], "decode_image_nvjpeg": [167, 210], "decode_packet": [167, 211], "decode_packets_nvdec": [167, 212], "decodeconfig": [110, 167, 181], "decoderimpl": 33, "decoderptr": 125, "def": [284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "default": [4, 208, 324], "defin": [35, 36, 37, 38, 54, 59, 82, 105], "definit": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 160], "demux": [24, 51, 95, 167, 184, 201], "demux_audio": [167, 213], "demux_config": [167, 214], "demux_imag": [167, 215], "demux_video": [167, 216], "demuxconfig": [66, 67, 111, 167, 183], "demuxerptr": 127, "depend": 327, "deriv": [117, 118], "detail": [87, 297, 334], "develop": [326, 333], "devic": 191, "diagnostic_mode_num_sourc": [272, 273], "differ": 4, "difficulti": 319, "directori": [39, 40, 41, 157], "disaggreg": [284, 287], "disaggregateconfig": [284, 288], "distribut": 302, "distributeddeterministicsampl": [300, 301], "distributedrandomsampl": [300, 302], "document": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 44, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "doe": 13, "download": 336, "dr": [7, 9, 10], "effici": 343, "elemclass": 44, "embed_shuffl": [312, 314], "encod": [25, 52, 96], "encode_imag": [167, 217], "encodeconfigbas": 112, "encoderimpl": 34, "encoderptr": 132, "enum": [42, 43, 44, 59, 82, 86, 105], "estim": 337, "event": [1, 319], "exampl": [7, 12, 175, 182, 184, 185, 191, 193, 194, 201, 205, 209, 214, 218, 220, 223, 251, 253, 254, 256, 260, 289, 302], "execut": [3, 319, 335], "executor": [3, 4, 324], "extract_packets_at_indic": 71, "faster": [4, 205], "ffmpeg": 209, "file": [41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 157, 214, 223], "filter": 185, "filter_graph": [53, 97], "filtergraph": [26, 167, 185], "filtergraphptr": 133, "format": [7, 16], "frame": [27, 54, 63, 65, 98, 167, 186], "framesptr": 140, "free": 327, "frequent": 13, "from": [7, 223, 327, 331], "full": [82, 105, 157], "function": [4, 7, 13, 14, 15, 16, 17, 18, 19, 47, 49, 51, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 86, 105, 158, 159, 160, 161, 297, 316, 317, 318, 340], "futur": [3, 319], "gain": 337, "gener": [55, 99, 113, 114], "get": [321, 335], "get_abuffer_desc": [167, 218], "get_audio_filter_desc": [167, 219], "get_buffer_desc": [167, 220], "get_default_hook_class": [272, 274], "get_default_profile_callback": [272, 275], "get_default_profile_hook": [272, 276], "get_default_queue_class": [272, 277], "get_ffmpeg_filt": [72, 245, 249], "get_ffmpeg_log_level": [79, 245, 250], "get_ffmpeg_vers": [73, 245, 251], "get_filter_desc": [167, 221], "get_map": [306, 308], "get_pytorch_dataload": [162, 166], "get_timestamp": 70, "get_video_filter_desc": [167, 222], "gil": 13, "gpu": [9, 318], "guid": [329, 338], "h": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "h264": 209, "headeless": 214, "headspac": 337, "helper": 297, "hierarchi": [83, 84, 105], "hold": 13, "home": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "how": [13, 343], "hydra": 17, "i": [2, 4, 13, 331, 343], "imag": [18, 260, 331], "imagecodec": [122, 167, 187], "imagedecod": [167, 188], "imagefram": [135, 167, 189], "imageframesptr": 134, "imagenet": [19, 300, 306, 307, 308, 309], "imagepacket": [151, 167, 190], "imagepacketsptr": 145, "implement": [3, 7, 297, 334], "includ": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "inconsist": 10, "increment": 193, "infer": 9, "inherit": [21, 28, 107, 117, 118], "init_glog": 81, "init_trac": 78, "input": 185, "instal": 327, "integr": 17, "inter": 4, "intermedi": 6, "intern": 209, "internalerror": 28, "introduct": [2, 319], "io": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 328, 334], "is_diagnostic_mode_en": [272, 278], "is_eof": [258, 296], "iter": 322, "iter_tarfil": [167, 223], "iterablewithshuffl": [300, 303], "iterate_in_subprocess": [258, 297], "keep": [9, 322], "keyword": [5, 319], "libspdl": [40, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 105], "like": 223, "list": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "load": [7, 214, 260, 326], "load_audio": [167, 224], "load_imag": [167, 225], "load_image_batch": [167, 226], "load_image_batch_nvjpeg": [167, 227], "load_npi": [167, 228], "load_npz": [167, 229], "load_video": [167, 230], "load_wav": [167, 231], "local_directori": [300, 310, 311], "localdirectori": [310, 311], "lock": 205, "loop": [1, 319, 334], "make": 6, "make_demux": [66, 67], "make_filter_graph": 68, "maximum": [4, 337], "mechan": [1, 3], "media": [63, 65, 343], "mediatyp": 43, "memori": [7, 205, 223], "merg": [284, 289], "mergeconfig": [284, 290], "mergeiter": [312, 313], "method": 194, "metric": 336, "migrat": [329, 331, 332], "modul": 328, "multi": [3, 4, 158, 324], "multimedia": 185, "multipl": [3, 185, 319], "multiplex": 1, "multiprocess": 10, "muxer": [29, 56, 100, 167, 191], "muxerptr": 142, "namespac": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 82, 85, 86, 87, 88, 105], "neighbour": [10, 339], "nest": [113, 114], "noisi": [10, 339], "note": [3, 194, 317, 325, 326, 333], "npz": 7, "npzfile": [167, 192], "number": [209, 335], "numpi": 7, "nv12_to_bgr": [167, 232], "nv12_to_rgb": [167, 233], "nvdec": 316, "nvdec_decod": [167, 234], "nvdecdecod": [167, 193], "o": [2, 4, 13, 331, 343], "object": 223, "off": 201, "optim": 338, "option": [66, 67, 191, 327], "optiondict": 156, "orchestr": 3, "output": 185, "overview": [162, 167, 245, 258, 272, 284, 300, 306, 310, 312, 343], "packet": [57, 101, 115, 167, 194], "packetseri": 30, "packetseriesptr": 143, "packetsptr": 148, "page": 205, "paradigm": 330, "parallel": [10, 324], "pars": 223, "parse_wnid": [306, 309], "passthrough": 185, "pcm": 214, "perform": [3, 7, 10, 159, 326, 331, 335, 343], "pipe": [284, 291], "pipeconfig": [284, 292], "pipelin": [3, 9, 10, 160, 161, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 319, 322, 324, 325, 334, 341], "pipelinebuild": [258, 261], "pipelineconfig": [284, 293], "pipelinefailur": [258, 262], "pool": 320, "practic": [6, 7], "preprocess": 158, "pro": 332, "process": [4, 317, 324, 325], "profil": [161, 340], "profile_pipelin": [258, 298], "profilehook": [258, 263], "profileresult": [258, 264], "program": [89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "promise_typ": 114, "protocol": 191, "public": 326, "put": 335, "pypi": 327, "python": 327, "pytorch": [208, 331], "pytorchdataload": [162, 165], "question": 13, "queue": [334, 335], "queueperfstat": [258, 265, 335], "rank": 336, "ration": 155, "raw": 214, "rawpacketdata": 116, "readi": [335, 336], "refer": [0, 11, 162, 167, 245, 258, 272, 284, 300, 306, 310, 312, 322, 326], "register_avdevic": 77, "relationship": [21, 28, 107, 113, 114, 117, 118], "releas": 13, "repeat_sourc": [312, 315], "requir": 327, "resolv": 340, "restructur": 340, "run": [3, 4, 9, 319, 322], "run_in_executor": 4, "run_pipeline_in_subprocess": [258, 299], "runner": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "runtim": 323, "sampl": 302, "sample_decode_video": [167, 235], "sampler": 340, "save_imag": [167, 236], "scalabl": 326, "set_default_hook_class": [272, 279], "set_default_profile_callback": [272, 280], "set_default_profile_hook": [272, 281], "set_default_queue_class": [272, 282], "set_ffmpeg_log_level": [76, 245, 252], "shared_ptr": [63, 65], "sharedmemori": 4, "shift": 330, "sink": 325, "sinkconfig": [284, 294], "size": 320, "sizediter": [300, 304], "sizediterablewithshuffl": [300, 305], "softwar": 9, "solut": 9, "sourc": [14, 15, 16, 17, 18, 19, 158, 159, 160, 161, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 325, 327], "sourceadaptor": 117, "sourceadaptorptr": [67, 120], "sourceconfig": [284, 295], "spdl": [9, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 326, 331, 332, 343], "spdl_default_buffer_s": 38, "specifi": [209, 324], "speed": 10, "src": [39, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60], "stage": [320, 324, 325, 340], "start": 321, "state": 317, "statist": 323, "statsqueu": [258, 266], "std": [63, 65, 66, 67, 88], "storag": [58, 102, 118], "straggler": 342, "stream": [184, 208, 316, 317], "streaming_load_video_nvdec": [167, 237], "streamingdemux": 31, "streamingdemuxerptr": 126, "string": 67, "string_view": 66, "struct": [82, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118], "structur": [297, 330], "studi": 8, "subdirectori": [39, 40], "subprocess": 324, "summari": [3, 331, 335], "switch": 331, "synchron": 4, "tar": 223, "tarfil": 14, "task": [3, 334, 335], "taskhook": [258, 267], "taskperfstat": [258, 268, 335], "taskstatshook": [258, 269], "templat": [20, 22, 23, 25, 27, 33, 34, 63, 65, 69, 70, 74, 112, 113, 115], "tensor": 6, "thread": [3, 4, 9, 158, 209, 320, 324, 327, 331, 334], "throughput": 335, "time": [335, 336], "tl": [7, 9, 10], "to_jax": [167, 238], "to_numba": [167, 239], "to_numpi": [167, 240], "to_torch": [167, 241], "trace": [245, 256], "trace_count": [74, 245, 253], "trace_ev": [245, 254], "trace_event_begin": 80, "trace_event_end": 75, "trace_gc": [245, 255], "tracer": 340, "tracingsess": 32, "transfer": 205, "transfer_buff": [167, 242], "transfer_buffer_cpu": [167, 243], "transfer_tensor": [167, 244], "trend": 331, "type": [21, 28, 59, 103, 107, 113, 117, 118], "typedef": [45, 47, 48, 50, 51, 52, 53, 54, 56, 57, 59, 82, 86, 105, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "underli": 1, "understand": 331, "unnecessari": 322, "us": [4, 205, 208, 318, 343], "usag": 318, "util": [60, 104, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 300, 312, 313, 314, 315], "v": 334, "vector": 63, "video": [185, 193, 317, 318], "video_encode_config": [167, 257], "videocodec": [124, 167, 195], "videodecod": [167, 196], "videoencod": [129, 167, 198], "videoencodeconfig": [154, 167, 197], "videoencoderptr": 130, "videofram": [141, 167, 199], "videoframesptr": 139, "videopacket": [144, 167, 200], "videopacketsptr": 147, "wav": 15, "weight": 302, "what": [13, 337, 343], "which": 13, "whole": 193, "why": [13, 332], "work": [13, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 337]}})