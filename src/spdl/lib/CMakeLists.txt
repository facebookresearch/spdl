# Copyright (c) Meta Platforms, Inc. and affiliates.
# All rights reserved.
#
# This source code is licensed under the BSD-style license found in the
# LICENSE file in the root directory of this source tree.

# This adds the library directory to search path
if (APPLE)
  set(CMAKE_INSTALL_RPATH "@loader_path")
elseif (UNIX)
  set(CMAKE_INSTALL_RPATH $ORIGIN)
endif ()

message(STATUS "########################################")
message(STATUS "# Configuring SPDL Python binding")
message(STATUS "########################################")

set(src
  io.cpp
  io/frames.cpp
  io/buffer.cpp
  io/storage.cpp
  io/packets.cpp
  io/types.cpp
  io/tracing.cpp
  io/utils.cpp
  io/demuxing.cpp
  io/decoding.cpp
  io/conversion.cpp
  io/transfer.cpp
  io/encoding.cpp
)

function(add_spdl_extension ffmpeg_version)
  set(name "_spdl_ffmpeg${ffmpeg_version}")
  message(STATUS "Building ${name}")

  set(defs "-DSPDL_FFMPEG_EXT_NAME=${name}")
  if (SPDL_USE_CUDA)
    list(APPEND defs SPDL_USE_CUDA)
  endif()
  if (SPDL_USE_NVCODEC)
    list(APPEND defs SPDL_USE_NVCODEC)
  endif ()
  if (SPDL_HOLD_GIL)
    list(APPEND defs SPDL_HOLD_GIL)
  endif ()

  nanobind_add_module(${name} ${src})
  target_compile_definitions(${name} PRIVATE "${defs}")
  target_link_libraries(${name} PRIVATE "spdl_ffmpeg${ffmpeg_version}")
  target_include_directories(${name} PRIVATE "${Python_INCLUDE_DIR}")
  target_include_directories(nanobind-static PRIVATE "${Python_INCLUDE_DIR}")

  install(
    TARGETS ${name}
    LIBRARY DESTINATION "${SPDL_PYTHON_BINDING_INSTALL_PREFIX}/lib"
    RUNTIME DESTINATION "${SPDL_PYTHON_BINDING_INSTALL_PREFIX}/lib"
  )

  if (SPDL_BUILD_STUB)
    if (NOT TARGET "_libspdl_stub")
      nanobind_add_stub(
        _libspdl_stub
        MODULE ${name}
        OUTPUT _libspdl.pyi
        PYTHON_PATH $<TARGET_FILE_DIR:${name}>
        DEPENDS ${name}
        )

      install(
        FILES "${CMAKE_CURRENT_BINARY_DIR}/_libspdl.pyi"
        DESTINATION "${SPDL_PYTHON_BINDING_INSTALL_PREFIX}/lib"
        )
    endif()
  endif()

endfunction()

set(ffmpeg_versions 4 5 6 7)
if (SPDL_USE_FFMPEG_VERSION IN_LIST ffmpeg_versions)
add_spdl_extension("${SPDL_USE_FFMPEG_VERSION}")
else()
add_spdl_extension(4)
add_spdl_extension(5)
add_spdl_extension(6)
add_spdl_extension(7)
endif()

###############################################################################
# zip extension
###############################################################################

set(name _zip)
message(STATUS "Building ${name}")

set(srcs zip.cpp)
set(deps libzip::zip fmt::fmt glog::glog)
nanobind_add_module("${name}" "${srcs}")
target_link_libraries("${name}" PRIVATE "${deps}")
target_include_directories("${name}" PRIVATE "${Python_INCLUDE_DIR}")
target_include_directories(nanobind-static PRIVATE "${Python_INCLUDE_DIR}")

install(
  TARGETS ${name}
  LIBRARY DESTINATION "${SPDL_PYTHON_BINDING_INSTALL_PREFIX}/lib"
  RUNTIME DESTINATION "${SPDL_PYTHON_BINDING_INSTALL_PREFIX}/lib"
  )
