.. raw:: html

   <script src='https://cdn.plot.ly/plotly-2.34.0.min.js'></script>
   <script>
    function plot(div_id, t, series, title, ylabel, N=1000) {
       var plot_data = [];
       for (const key of Object.keys(series).sort()) {
           plot_data.push({
               x: t,
               y: series[key],
               name: key,
               line: {
                   size: 0.1,
               },
               visible: key.includes('aggregate') ? 'legendonly': null, 
           });
       }
       Plotly.newPlot(
           div_id, {
               data: plot_data,
               layout: {
                   title: title,
                   yaxis: {
                       title: {
                           text: ylabel,
                       },
                       range: [0, null],
                   },
                   showlegend: true,
               },
           },
       );
    };

    document.addEventListener(
        'DOMContentLoaded',
        function() {
            const data_url = '../_static/data/pipeline_performance_analysis.json';
            const config = [
                {
                    div_id: 'perf_analysis_ave_time',
                    suffix: '_ave_time',
                    title: 'Task Execution Time',
                    ylabel: 'Time [sec]',
                },
                {
                    div_id: 'perf_analysis_num_tasks',
                    suffix: '_num_tasks',
                    title: 'Task Invocation',
                    ylabel: 'The number of invocations [/min]'
                },
                {
                    div_id: 'perf_analysis_qps',
                    suffix: '_qps',
                    title: 'Throughput',
                    ylabel: 'The number of items processed [/sec]'
                },
                {
                    div_id: 'perf_analysis_occupancy_rate',
                    suffix: '_queue_occupancy_rate',
                    title: 'Data Readiness',
                    ylabel: 'Data Readiness [%]'
                },
                {
                    div_id: 'perf_analysis_queue_get',
                    suffix: '_queue_get',
                    title: 'Average wait time to fetch the next result',
                    ylabel: 'Queue::Get wait time [sec]',
                },
                {
                    div_id: 'perf_analysis_queue_put',
                    suffix: '_queue_put',
                    title: 'Average wait time to put the result',
                    ylabel: 'Queue::Put wait time [sec]',
                },
            ];
            fetch(data_url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Failed to fetch the data.');
                    }
                    return response.json();
                })
                .then(data=> {
                    const t = data['event_time'].map(v => { return new Date(v*1000); });
                    config.forEach(c => {
                        try {
                            const series = {};
                            for (const key in data) {
                                if (key.endsWith(c.suffix)) {
                                    let value = data[key];
                                    if (key.endsWith("_rate")) {
                                    value = value.map(v => { return v*100; });
                                    }
                                    const k = key.slice(0, key.length - c.suffix.length);
                                    series[k] = value;
                                }
                            }
                            plot(c.div_id, t, series, c.title, c.ylabel);
                        } catch(error) {
                            const div = document.getElementById(c.div_id);
                            div.textContent = "Failed to plot: " + error.toString();
                        }
                    });
                })
                .catch(error => {console.error(error);});


        },
        false);

    function plot_readiness_diagram(div_id) {
        var data = [
            {
                x: [0, 1, 1, 3, 3, 4, 4, 5, 5, 7, 7, 8, 8, 10],
                y: [2, 2, 3, 3, 2, 2, 3, 3, 2, 2, 3, 3, 2, 2],
                mode: 'lines',
                type: 'scatter',
            },
        ];
        var layout = {
            showlegend: false,
            yaxis: {
                tickvals: [2, 3],
                ticktext: ['Empty', 'Non-Empty'],
                range: [1.3, 3.8],
            },
            xaxis: {
                title: {text: 'Time'},
                tickvals: [],
            },
            annotations: [
                {
                    x: 3,
                    y: 3.2,
                    ax: 1.5,
                    ay: 3.2,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'orange',
                },
                {
                    x: 1,
                    y: 3.2,
                    ax: 2.5,
                    ay: 3.2,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'orange',
                },
                {
                    x: 5,
                    y: 3.2,
                    ax: 4.4,
                    ay: 3.2,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'orange',
                },
                {
                    x: 4,
                    y: 3.2,
                    ax: 4.6,
                    ay: 3.2,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'orange',
                },
                {
                    x: 8,
                    y: 3.2,
                    ax: 7.3,
                    ay: 3.2,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'orange',
                },
                {
                    x: 7,
                    y: 3.2,
                    ax: 7.6,
                    ay: 3.2,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'orange',
                },
                {
                    x: 2,
                    y: 3.55,
                    xref: 'x',
                    yref: 'y',
                    text: 'The duration the queue is not empty',
                    font: {color: 'orange'},
                    showarrow: false,
                },
                {
                    x: 5,
                    y: 1.5,
                    xref: 'x',
                    yref: 'y',
                    text: 'The duration of the measurement.',
                    font: {color: 'black'},
                    showarrow: false,
                },
                {
                    x: 0,
                    y: 1.8,
                    ax:6,
                    ay: 1.8,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'black',
                },
                {
                    x: 10,
                    y: 1.8,
                    ax: 4,
                    ay: 1.8,
                    xref: 'x',
                    yref: 'y',
                    axref: 'x',
                    ayref: 'y',
                    text: '',
                    showarrow: true,
                    arrowhead: 3,
                    arrowsize: 1,
                    arrowwidth: 2,
                    arrowcolor: 'black',
                }
            ],
        };
        config = {
            displayModeBar: false,
        };
        Plotly.newPlot(div_id, data, layout, config);
    };
    document.addEventListener(
        'DOMContentLoaded',
        function() {
            plot_readiness_diagram('perf_analysis_data_readiness');
        },
        false);
   </script>
