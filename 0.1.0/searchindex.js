Search.setIndex({"alltitles": {"API Reference": [[0, null], [151, "api-reference"], [156, "api-reference"], [229, "api-reference"], [242, "api-reference"], [256, "api-reference"], [258, "api-reference"], [262, "api-reference"], [264, "api-reference"]], "API References": [[277, null]], "API References (C++)": [[5, null], [5, null]], "Adjust the concurrency": [[290, "adjust-the-concurrency"]], "Analyzing the Performance": [[285, null]], "Async IO": [[284, "async-io"]], "AsyncQueue": [[242, "asyncqueue"]], "AudioCodec": [[156, "audiocodec"]], "AudioDecoder": [[156, "audiodecoder"]], "AudioEncodeConfig": [[156, "audioencodeconfig"]], "AudioEncoder": [[156, "audioencoder"]], "AudioFrames": [[156, "audioframes"]], "AudioPackets": [[156, "audiopackets"]], "Average Download Time": [[286, "average-download-time"]], "Average Time": [[285, "average-time"]], "Avoid creating intermediate tensors": [[1, "avoid-creating-intermediate-tensors"]], "BSF": [[156, "bsf"]], "Base Type": [[12, "base-type"], [19, "base-type"], [98, "base-type"]], "Basic Usage": [[270, "basic-usage"]], "Batching images": [[281, "batching-images"]], "Best Practices": [[1, null]], "Building a Pipeline": [[273, "building-a-pipeline"]], "Building and Running Pipeline": [[273, null]], "Building with Free-Threaded Python": [[278, "building-with-free-threaded-python"]], "CPUBuffer": [[156, "cpubuffer"]], "CPUStorage": [[156, "cpustorage"]], "CUDABuffer": [[156, "cudabuffer"]], "CUDAConfig": [[156, "cudaconfig"]], "CacheDataLoader": [[151, "cachedataloader"]], "Calling iter on Pipeline": [[273, null]], "Case Studies": [[3, null]], "Changing the data format": [[2, "changing-the-data-format"]], "Class CPUStorage": [[12, null]], "Class Demuxer": [[15, null]], "Class Documentation": [[11, "class-documentation"], [12, "class-documentation"], [13, "class-documentation"], [14, "class-documentation"], [15, "class-documentation"], [16, "class-documentation"], [17, "class-documentation"], [18, "class-documentation"], [19, "class-documentation"], [20, "class-documentation"], [21, "class-documentation"], [22, "class-documentation"], [23, "class-documentation"], [24, "class-documentation"], [25, "class-documentation"]], "Class FilterGraph": [[17, null]], "Class Hierarchy": [[74, null], [96, "class-hierarchy"]], "Class InternalError": [[19, null]], "Class Muxer": [[20, null]], "Class PacketSeries": [[21, null]], "Class StreamingDemuxer": [[22, null]], "Class TracingSession": [[23, null]], "Classes": [[8, "classes"], [9, "classes"], [10, "classes"], [36, "classes"], [37, "classes"], [38, "classes"], [39, "classes"], [41, "classes"], [42, "classes"], [43, "classes"], [44, "classes"], [45, "classes"], [46, "classes"], [47, "classes"], [48, "classes"], [49, "classes"], [50, "classes"], [51, "classes"], [77, "classes"], [78, "classes"], [150, "classes"], [270, "classes"]], "Classes and Structs": [[73, "classes-and-structs"], [96, "classes-and-structs"]], "Collecting Runtime Statistics": [[274, null]], "Composition of Pipeline": [[291, null]], "Concurrency": [[271, null]], "Concurrency Structure": [[280, "concurrency-structure"]], "Cons": [[282, "cons"]], "Contents": [[277, null]], "Core Concept": [[292, "core-concept"]], "Data Format and Performance": [[2, null]], "Data Readiness": [[285, "data-readiness"], [286, "data-readiness"]], "Data formats": [[8, null]], "DataLoader": [[151, "dataloader"]], "Deciding what to work on": [[287, "deciding-what-to-work-on"]], "DecodeConfig": [[156, "decodeconfig"]], "Decoder": [[156, "decoder"]], "Decoding images in threads": [[281, "decoding-images-in-threads"]], "Define Documentation": [[26, "define-documentation"], [27, "define-documentation"], [28, "define-documentation"], [29, "define-documentation"]], "Define SPDL_DEFAULT_BUFFER_SIZE": [[29, null]], "Define _IS_AUDIO": [[27, null]], "Define _IS_IMAGE": [[28, null]], "Define _IS_VIDEO": [[26, null]], "Defines": [[45, "defines"], [50, "defines"], [73, "defines"], [96, "defines"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/adaptor.h)": [[36, "definition-home-runner-work-spdl-spdl-src-libspdl-core-adaptor-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/bsf.h)": [[37, "definition-home-runner-work-spdl-spdl-src-libspdl-core-bsf-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/buffer.h)": [[38, "definition-home-runner-work-spdl-spdl-src-libspdl-core-buffer-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/codec.h)": [[39, "definition-home-runner-work-spdl-spdl-src-libspdl-core-codec-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/conversion.h)": [[40, "definition-home-runner-work-spdl-spdl-src-libspdl-core-conversion-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/decoder.h)": [[41, "definition-home-runner-work-spdl-spdl-src-libspdl-core-decoder-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/demuxing.h)": [[42, "definition-home-runner-work-spdl-spdl-src-libspdl-core-demuxing-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/encoder.h)": [[43, "definition-home-runner-work-spdl-spdl-src-libspdl-core-encoder-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/filter_graph.h)": [[44, "definition-home-runner-work-spdl-spdl-src-libspdl-core-filter-graph-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/frames.h)": [[45, "definition-home-runner-work-spdl-spdl-src-libspdl-core-frames-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/generator.h)": [[46, "definition-home-runner-work-spdl-spdl-src-libspdl-core-generator-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/muxer.h)": [[47, "definition-home-runner-work-spdl-spdl-src-libspdl-core-muxer-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/packets.h)": [[48, "definition-home-runner-work-spdl-spdl-src-libspdl-core-packets-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/storage.h)": [[49, "definition-home-runner-work-spdl-spdl-src-libspdl-core-storage-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/types.h)": [[50, "definition-home-runner-work-spdl-spdl-src-libspdl-core-types-h"]], "Definition (/home/runner/work/spdl/spdl/src/libspdl/core/utils.h)": [[51, "definition-home-runner-work-spdl-spdl-src-libspdl-core-utils-h"]], "DemuxConfig": [[156, "demuxconfig"]], "Demuxer": [[156, "demuxer"]], "Dependencies": [[278, "dependencies"]], "Derived Type": [[108, "derived-type"], [109, "derived-type"]], "Development Notes": [[277, null], [283, null]], "Directories": [[148, "directories"]], "Directory core": [[32, null]], "Directory libspdl": [[31, null]], "Directory src": [[30, null]], "Enum CodecID": [[33, null]], "Enum Documentation": [[33, "enum-documentation"], [34, "enum-documentation"], [35, "enum-documentation"]], "Enum ElemClass": [[35, null]], "Enum MediaType": [[34, null]], "Enums": [[50, "enums"], [73, "enums"], [77, "enums"], [96, "enums"]], "Estimating the maximum gain with caching": [[287, "estimating-the-maximum-gain-with-caching"]], "Example": [[163, null], [169, null], [178, null], [181, null], [205, null], [207, null], [237, null], [238, null], [240, null]], "Example - Audio filtering (passthrough)": [[172, null]], "Example - Device option": [[178, null]], "Example - Multimedia filter": [[172, null]], "Example - Multiple Inputs": [[172, null]], "Example - Multiple outputs": [[172, null]], "Example - One-off demuxing": [[188, null]], "Example - Protocol option": [[178, null]], "Example - Streaming decoding audio": [[171, null]], "Example - Video filtering (passthrough)": [[172, null]], "Example - decoding the whole video": [[180, null]], "Example - incremental decoding": [[180, null]], "Example:": [[235, null]], "Example: Bulk loading images": [[244, null]], "Example: Change the number of threads internal to FFmpeg decoder": [[196, null]], "Example: Loading headeless audio file (raw PCM)": [[201, null]], "Example: Specifying the decoder for H264": [[196, null]], "Example: Use page-locked memory for faster CUDA transfer.": [[192, null]], "Examples": [[6, null]], "File Hierarchy": [[75, null], [96, "file-hierarchy"]], "File adaptor.h": [[36, null]], "File bsf.h": [[37, null]], "File buffer.h": [[38, null]], "File codec.h": [[39, null]], "File conversion.h": [[40, null]], "File decoder.h": [[41, null]], "File demuxing.h": [[42, null]], "File encoder.h": [[43, null]], "File filter_graph.h": [[44, null]], "File frames.h": [[45, null]], "File generator.h": [[46, null]], "File muxer.h": [[47, null]], "File packets.h": [[48, null]], "File storage.h": [[49, null]], "File types.h": [[50, null]], "File utils.h": [[51, null]], "Files": [[32, "files"], [148, "files"]], "FilterGraph": [[156, "filtergraph"]], "Frames": [[156, "frames"]], "Frequently Asked Questions": [[7, null]], "From PyPI": [[278, "from-pypi"]], "From source": [[278, "from-source"]], "Full API": [[73, null], [96, "full-api"], [148, null]], "Function Documentation": [[52, "function-documentation"], [53, "function-documentation"], [54, "function-documentation"], [55, "function-documentation"], [56, "function-documentation"], [57, "function-documentation"], [58, "function-documentation"], [59, "function-documentation"], [60, "function-documentation"], [61, "function-documentation"], [62, "function-documentation"], [63, "function-documentation"], [64, "function-documentation"], [65, "function-documentation"], [66, "function-documentation"], [67, "function-documentation"], [68, "function-documentation"], [69, "function-documentation"], [70, "function-documentation"], [71, "function-documentation"], [72, "function-documentation"]], "Function spdl::core::cpu_buffer": [[52, null]], "Function spdl::core::create_reference_audio_frame": [[53, null]], "Function spdl::core::create_reference_video_frame": [[55, null]], "Function spdl::core::extract_packets_at_indices": [[62, null]], "Function spdl::core::get_ffmpeg_filters": [[63, null]], "Function spdl::core::get_ffmpeg_log_level": [[70, null]], "Function spdl::core::get_ffmpeg_versions": [[64, null]], "Function spdl::core::init_glog": [[72, null]], "Function spdl::core::init_tracing": [[69, null]], "Function spdl::core::make_demuxer(const std::string&, const SourceAdaptorPtr&, const std::optional<DemuxConfig>&)": [[58, null]], "Function spdl::core::make_demuxer(const std::string_view, const std::optional<DemuxConfig>&)": [[57, null]], "Function spdl::core::make_filter_graph": [[59, null]], "Function spdl::core::register_avdevices": [[68, null]], "Function spdl::core::set_ffmpeg_log_level": [[67, null]], "Function spdl::core::trace_event_begin": [[71, null]], "Function spdl::core::trace_event_end": [[66, null]], "Functions": [[8, "functions"], [9, "functions"], [10, "functions"], [38, "functions"], [40, "functions"], [42, "functions"], [44, "functions"], [45, "functions"], [48, "functions"], [51, "functions"], [73, "functions"], [77, "functions"], [96, "functions"], [149, "functions"], [150, "functions"], [268, "functions"], [269, "functions"], [270, "functions"]], "Getting Started": [[272, null]], "Headspace Analysis": [[287, null]], "Helper functions and data structures": [[254, "helper-functions-and-data-structures"]], "How to use SPDL?": [[292, "how-to-use-spdl"]], "How to work around GIL?": [[7, "how-to-work-around-gil"]], "Image dataloading": [[9, null]], "ImageCodec": [[156, "imagecodec"]], "ImageDecoder": [[156, "imagedecoder"]], "ImageFrames": [[156, "imageframes"]], "ImageNet": [[258, "imagenet"]], "ImagePackets": [[156, "imagepackets"]], "Imagenet classification": [[10, null]], "Implementation Detail": [[254, "implementation-detail"]], "Implementation detail of Pipeline": [[284, null]], "Included By": [[36, "included-by"], [38, "included-by"], [39, "included-by"], [43, "included-by"], [45, "included-by"], [46, "included-by"], [48, "included-by"], [49, "included-by"], [50, "included-by"]], "Includes": [[36, "includes"], [37, "includes"], [38, "includes"], [39, "includes"], [40, "includes"], [41, "includes"], [42, "includes"], [43, "includes"], [44, "includes"], [45, "includes"], [46, "includes"], [47, "includes"], [48, "includes"], [49, "includes"], [50, "includes"], [51, "includes"]], "Inconsistent Performance": [[4, "inconsistent-performance"]], "Inheritance Relationships": [[12, "inheritance-relationships"], [19, "inheritance-relationships"], [98, "inheritance-relationships"], [108, "inheritance-relationships"], [109, "inheritance-relationships"]], "Installation": [[278, null]], "IterableWithShuffle": [[256, "iterablewithshuffle"]], "Keeping unnecessary references to Pipeline": [[273, null]], "Libspdl API": [[96, null]], "Loading data from memory": [[2, "loading-data-from-memory"]], "LocalDirectory": [[262, "localdirectory"]], "Make Dataset class composable": [[1, "make-dataset-class-composable"]], "Media I/O": [[292, "media-i-o"]], "MergeIterator": [[264, "mergeiterator"]], "Metrics across Ranks": [[286, null]], "Migrating from PyTorch DataLoader": [[281, null]], "Migration Guide": [[279, null]], "Multi thread preprocessing": [[149, null]], "Multi-processing (combined)": [[275, "multi-processing-combined"]], "Multi-processing (stage)": [[275, "multi-processing-stage"]], "Multi-threading (custom)": [[275, "multi-threading-custom"]], "Multi-threading (default)": [[275, "multi-threading-default"]], "Multi-threading in subprocess": [[275, "multi-threading-in-subprocess"]], "Muxer": [[156, "muxer"]], "Namespace spdl": [[76, null]], "Namespace spdl::core": [[77, null]], "Namespace spdl::core::detail": [[78, null]], "Namespace std": [[79, null]], "Namespaces": [[36, "namespaces"], [37, "namespaces"], [38, "namespaces"], [39, "namespaces"], [40, "namespaces"], [41, "namespaces"], [42, "namespaces"], [43, "namespaces"], [44, "namespaces"], [45, "namespaces"], [46, "namespaces"], [47, "namespaces"], [48, "namespaces"], [49, "namespaces"], [50, "namespaces"], [51, "namespaces"], [73, "namespaces"], [76, "namespaces"], [77, "namespaces"], [96, "namespaces"]], "Nested Relationships": [[104, "nested-relationships"], [105, "nested-relationships"]], "Nested Types": [[104, "nested-types"]], "Noisy Neighbour": [[289, null]], "Noisy Neighbour and multiprocessing": [[4, "noisy-neighbour-and-multiprocessing"]], "Note on clone method": [[181, null]], "Note on component states": [[269, null]], "Note\u2020": [[276, null]], "NpzFile": [[156, "npzfile"]], "NvDecDecoder": [[156, "nvdecdecoder"]], "Optimization Guide": [[288, null]], "Optional Dependencies": [[278, "optional-dependencies"]], "Overview": [[151, "module-spdl.dataloader"], [156, "module-spdl.io"], [229, "module-spdl.io.utils"], [242, "module-spdl.pipeline"], [256, "module-spdl.source"], [258, "module-spdl.source.imagenet"], [262, "module-spdl.source.local_directory"], [264, "module-spdl.source.utils"], [292, null]], "Packets": [[156, "packets"]], "Paradigm Shift": [[280, null]], "Parallelism and Performance": [[4, null]], "Performance & Efficiency": [[292, "performance-efficiency"]], "Performance analysis": [[150, null]], "Pipeline": [[242, "pipeline"]], "Pipeline Parallelism": [[275, null]], "Pipeline Speed": [[4, "pipeline-speed"]], "Pipeline Stages": [[276, null]], "PipelineBuilder": [[242, "pipelinebuilder"]], "PipelineFailure": [[242, "pipelinefailure"]], "Practical Example": [[2, "practical-example"]], "Processing": [[276, "processing"]], "Profiling the function": [[290, "profiling-the-function"]], "Program Listing for File adaptor.h": [[80, null]], "Program Listing for File bsf.h": [[81, null]], "Program Listing for File buffer.h": [[82, null]], "Program Listing for File codec.h": [[83, null]], "Program Listing for File conversion.h": [[84, null]], "Program Listing for File decoder.h": [[85, null]], "Program Listing for File demuxing.h": [[86, null]], "Program Listing for File encoder.h": [[87, null]], "Program Listing for File filter_graph.h": [[88, null]], "Program Listing for File frames.h": [[89, null]], "Program Listing for File generator.h": [[90, null]], "Program Listing for File muxer.h": [[91, null]], "Program Listing for File packets.h": [[92, null]], "Program Listing for File storage.h": [[93, null]], "Program Listing for File types.h": [[94, null]], "Program Listing for File utils.h": [[95, null]], "Pros": [[282, "pros"]], "PyTorchDataLoader": [[151, "pytorchdataloader"]], "Queue Get/Put Time": [[285, "queue-get-put-time"]], "Queue vs Async Queue as Buffer": [[284, "queue-vs-async-queue-as-buffer"]], "QueuePerfStats": [[242, "queueperfstats"], [285, "queueperfstats"]], "Requirements": [[278, "requirements"]], "Resolving the Bottleneck": [[290, null]], "Restructure the stages": [[290, "restructure-the-stages"]], "Running a Pipeline": [[273, "running-a-pipeline"]], "SPDL (Scalable and Performant Data Loading)": [[277, null]], "Sampler": [[290, "sampler"]], "Sink": [[276, "sink"]], "Source": [[8, "source"], [9, "source"], [10, "source"], [149, "source"], [150, "source"], [268, "source"], [269, "source"], [270, "source"], [276, "source"]], "Specifying an executor": [[275, "specifying-an-executor"]], "Stage Concurrency": [[271, "stage-concurrency"]], "StatsQueue": [[242, "statsqueue"]], "Streaming nvdec decoding": [[268, null]], "Streaming video processing": [[269, null]], "Struct AVRational": [[97, null]], "Struct BytesAdaptor": [[98, null]], "Struct CPUBuffer": [[99, null]], "Struct DataInterface": [[100, null]], "Struct DecodeConfig": [[101, null]], "Struct DemuxConfig": [[102, null]], "Struct Documentation": [[97, "struct-documentation"], [98, "struct-documentation"], [99, "struct-documentation"], [100, "struct-documentation"], [101, "struct-documentation"], [102, "struct-documentation"], [103, "struct-documentation"], [104, "struct-documentation"], [105, "struct-documentation"], [106, "struct-documentation"], [107, "struct-documentation"], [108, "struct-documentation"], [109, "struct-documentation"]], "Struct Generator::promise_type": [[105, null]], "Struct RawPacketData": [[107, null]], "Struct SourceAdaptor": [[108, null]], "Struct Storage": [[109, null]], "Subdirectories": [[30, "subdirectories"], [31, "subdirectories"]], "Summary": [[281, "summary"], [285, "summary"]], "Switching to SPDL I/O": [[281, "switching-to-spdl-i-o"]], "TaskHook": [[242, "taskhook"]], "TaskPerfStats": [[242, "taskperfstats"], [285, "taskperfstats"]], "TaskStatsHook": [[242, "taskstatshook"]], "Template Class BSF": [[11, null]], "Template Class Codec": [[13, null]], "Template Class Decoder": [[14, null]], "Template Class DecoderImpl": [[24, null]], "Template Class Encoder": [[16, null]], "Template Class EncoderImpl": [[25, null]], "Template Class Frames": [[18, null]], "Template Function spdl::core::clone": [[60, null]], "Template Function spdl::core::convert_frames(const Frames<media> *, std::shared_ptr<CPUStorage>)": [[56, null]], "Template Function spdl::core::convert_frames(const std::vector<const Frames<media> *>&, std::shared_ptr<CPUStorage>)": [[54, null]], "Template Function spdl::core::get_pts": [[61, null]], "Template Function spdl::core::trace_counter": [[65, null]], "Template Struct EncodeConfigBase": [[103, null]], "Template Struct Generator": [[104, null]], "Template Struct Packets": [[106, null]], "The Performance of numpy.load on NPZ data": [[2, "the-performance-of-numpy-load-on-npz-data"]], "The number of tasks executed": [[285, "the-number-of-tasks-executed"]], "Thread Pool Size": [[271, "thread-pool-size"]], "Thread, loop and task": [[284, "thread-loop-and-task"]], "Throughput": [[285, "throughput"]], "Tracer": [[290, "tracer"]], "Typedef AVRational": [[144, null]], "Typedef Documentation": [[110, "typedef-documentation"], [111, "typedef-documentation"], [112, "typedef-documentation"], [113, "typedef-documentation"], [114, "typedef-documentation"], [115, "typedef-documentation"], [116, "typedef-documentation"], [117, "typedef-documentation"], [118, "typedef-documentation"], [119, "typedef-documentation"], [120, "typedef-documentation"], [121, "typedef-documentation"], [122, "typedef-documentation"], [123, "typedef-documentation"], [124, "typedef-documentation"], [125, "typedef-documentation"], [126, "typedef-documentation"], [127, "typedef-documentation"], [128, "typedef-documentation"], [129, "typedef-documentation"], [130, "typedef-documentation"], [131, "typedef-documentation"], [132, "typedef-documentation"], [133, "typedef-documentation"], [134, "typedef-documentation"], [135, "typedef-documentation"], [136, "typedef-documentation"], [137, "typedef-documentation"], [138, "typedef-documentation"], [139, "typedef-documentation"], [140, "typedef-documentation"], [141, "typedef-documentation"], [142, "typedef-documentation"], [143, "typedef-documentation"], [144, "typedef-documentation"], [145, "typedef-documentation"], [146, "typedef-documentation"], [147, "typedef-documentation"]], "Typedef spdl::core::AnyFrames": [[129, null]], "Typedef spdl::core::AnyPackets": [[141, null]], "Typedef spdl::core::AudioCodec": [[114, null]], "Typedef spdl::core::AudioEncodeConfig": [[143, null]], "Typedef spdl::core::AudioEncoder": [[122, null]], "Typedef spdl::core::AudioEncoderPtr": [[119, null]], "Typedef spdl::core::AudioFrames": [[127, null]], "Typedef spdl::core::AudioFramesPtr": [[128, null]], "Typedef spdl::core::AudioPackets": [[137, null]], "Typedef spdl::core::AudioPacketsPtr": [[140, null]], "Typedef spdl::core::CPUBufferPtr": [[112, null]], "Typedef spdl::core::DataInterfacePtr": [[110, null]], "Typedef spdl::core::DecoderPtr": [[116, null]], "Typedef spdl::core::DemuxerPtr": [[118, null]], "Typedef spdl::core::EncoderPtr": [[123, null]], "Typedef spdl::core::FilterGraphPtr": [[124, null]], "Typedef spdl::core::FramesPtr": [[131, null]], "Typedef spdl::core::ImageCodec": [[113, null]], "Typedef spdl::core::ImageFrames": [[126, null]], "Typedef spdl::core::ImageFramesPtr": [[125, null]], "Typedef spdl::core::ImagePackets": [[142, null]], "Typedef spdl::core::ImagePacketsPtr": [[136, null]], "Typedef spdl::core::MuxerPtr": [[133, null]], "Typedef spdl::core::OptionDict": [[147, null]], "Typedef spdl::core::PacketSeriesPtr": [[134, null]], "Typedef spdl::core::PacketsPtr": [[139, null]], "Typedef spdl::core::Rational": [[146, null]], "Typedef spdl::core::SourceAdaptorPtr": [[111, null]], "Typedef spdl::core::StreamingDemuxerPtr": [[117, null]], "Typedef spdl::core::VideoCodec": [[115, null]], "Typedef spdl::core::VideoEncodeConfig": [[145, null]], "Typedef spdl::core::VideoEncoder": [[120, null]], "Typedef spdl::core::VideoEncoderPtr": [[121, null]], "Typedef spdl::core::VideoFrames": [[132, null]], "Typedef spdl::core::VideoFramesPtr": [[130, null]], "Typedef spdl::core::VideoPackets": [[135, null]], "Typedef spdl::core::VideoPacketsPtr": [[138, null]], "Typedefs": [[36, "typedefs"], [38, "typedefs"], [39, "typedefs"], [41, "typedefs"], [42, "typedefs"], [43, "typedefs"], [44, "typedefs"], [45, "typedefs"], [47, "typedefs"], [48, "typedefs"], [50, "typedefs"], [73, "typedefs"], [77, "typedefs"], [96, "typedefs"]], "Understanding the Performance Trend": [[281, "understanding-the-performance-trend"]], "Using GPU video decoder": [[270, "using-gpu-video-decoder"]], "Using PyTorch default CUDA stream": [[195, null]], "Video dataloading": [[270, null]], "VideoCodec": [[156, "videocodec"]], "VideoDecoder": [[156, "videodecoder"]], "VideoEncodeConfig": [[156, "videoencodeconfig"]], "VideoEncoder": [[156, "videoencoder"]], "VideoFrames": [[156, "videoframes"]], "VideoPackets": [[156, "videopackets"]], "What SPDL is NOT": [[292, "what-spdl-is-not"]], "What if a function does not release GIL?": [[7, "what-if-a-function-does-not-release-gil"]], "What is SPDL?": [[292, "what-is-spdl"]], "Which functions hold the GIL?": [[7, "which-functions-hold-the-gil"]], "Why Async IO?": [[7, "why-async-io"]], "Why default to shuffle after iteration?": [[266, null]], "Why migrate to SPDL?": [[282, null]], "apply_bsf": [[156, "apply-bsf"]], "audio_encode_config": [[156, "audio-encode-config"]], "built_with_cuda": [[229, "built-with-cuda"]], "built_with_nvcodec": [[229, "built-with-nvcodec"]], "built_with_nvjpeg": [[229, "built-with-nvjpeg"]], "cache_iterator": [[242, "cache-iterator"]], "convert_array": [[156, "convert-array"]], "convert_frames": [[156, "convert-frames"]], "cpu_storage": [[156, "cpu-storage"]], "create_reference_audio_frame": [[156, "create-reference-audio-frame"]], "create_reference_video_frame": [[156, "create-reference-video-frame"]], "create_task": [[242, "create-task"]], "cuda_config": [[156, "cuda-config"]], "decode_config": [[156, "decode-config"]], "decode_image_nvjpeg": [[156, "decode-image-nvjpeg"]], "decode_packets": [[156, "decode-packets"]], "decode_packets_nvdec": [[156, "decode-packets-nvdec"]], "demux_audio": [[156, "demux-audio"]], "demux_config": [[156, "demux-config"]], "demux_image": [[156, "demux-image"]], "demux_video": [[156, "demux-video"]], "embed_shuffle": [[264, "embed-shuffle"]], "encode_image": [[156, "encode-image"]], "get_abuffer_desc": [[156, "get-abuffer-desc"]], "get_audio_filter_desc": [[156, "get-audio-filter-desc"]], "get_buffer_desc": [[156, "get-buffer-desc"]], "get_ffmpeg_filters": [[229, "get-ffmpeg-filters"]], "get_ffmpeg_log_level": [[229, "get-ffmpeg-log-level"]], "get_ffmpeg_versions": [[229, "get-ffmpeg-versions"]], "get_filter_desc": [[156, "get-filter-desc"]], "get_mappings": [[258, "get-mappings"]], "get_pytorch_dataloader": [[151, "get-pytorch-dataloader"]], "get_video_filter_desc": [[156, "get-video-filter-desc"]], "imagenet": [[256, "imagenet"]], "iterate_in_subprocess": [[242, "iterate-in-subprocess"]], "load_audio": [[156, "load-audio"]], "load_image": [[156, "load-image"]], "load_image_batch": [[156, "load-image-batch"]], "load_image_batch_nvjpeg": [[156, "load-image-batch-nvjpeg"]], "load_npy": [[156, "load-npy"]], "load_npz": [[156, "load-npz"]], "load_video": [[156, "load-video"]], "local_directory": [[256, "local-directory"]], "nv12_to_bgr": [[156, "nv12-to-bgr"]], "nv12_to_rgb": [[156, "nv12-to-rgb"]], "nvdec_decoder": [[156, "nvdec-decoder"]], "parse_wnid": [[258, "parse-wnid"]], "repeat_source": [[264, "repeat-source"]], "run_pipeline_in_subprocess": [[242, "run-pipeline-in-subprocess"]], "sample_decode_video": [[156, "sample-decode-video"]], "save_image": [[156, "save-image"]], "set_ffmpeg_log_level": [[229, "set-ffmpeg-log-level"]], "spdl.dataloader": [[151, null]], "spdl.dataloader.CacheDataLoader": [[152, null]], "spdl.dataloader.DataLoader": [[153, null]], "spdl.dataloader.PyTorchDataLoader": [[154, null]], "spdl.dataloader.get_pytorch_dataloader": [[155, null]], "spdl.io": [[156, null]], "spdl.io.AudioCodec": [[157, null]], "spdl.io.AudioDecoder": [[158, null]], "spdl.io.AudioEncodeConfig": [[159, null]], "spdl.io.AudioEncoder": [[160, null]], "spdl.io.AudioFrames": [[161, null]], "spdl.io.AudioPackets": [[162, null]], "spdl.io.BSF": [[163, null]], "spdl.io.CPUBuffer": [[164, null]], "spdl.io.CPUStorage": [[165, null]], "spdl.io.CUDABuffer": [[166, null]], "spdl.io.CUDAConfig": [[167, null]], "spdl.io.DecodeConfig": [[168, null]], "spdl.io.Decoder": [[169, null]], "spdl.io.DemuxConfig": [[170, null]], "spdl.io.Demuxer": [[171, null]], "spdl.io.FilterGraph": [[172, null]], "spdl.io.Frames": [[173, null]], "spdl.io.ImageCodec": [[174, null]], "spdl.io.ImageDecoder": [[175, null]], "spdl.io.ImageFrames": [[176, null]], "spdl.io.ImagePackets": [[177, null]], "spdl.io.Muxer": [[178, null]], "spdl.io.NpzFile": [[179, null]], "spdl.io.NvDecDecoder": [[180, null]], "spdl.io.Packets": [[181, null]], "spdl.io.VideoCodec": [[182, null]], "spdl.io.VideoDecoder": [[183, null]], "spdl.io.VideoEncodeConfig": [[184, null]], "spdl.io.VideoEncoder": [[185, null]], "spdl.io.VideoFrames": [[186, null]], "spdl.io.VideoPackets": [[187, null]], "spdl.io.apply_bsf": [[188, null]], "spdl.io.audio_encode_config": [[189, null]], "spdl.io.convert_array": [[190, null]], "spdl.io.convert_frames": [[191, null]], "spdl.io.cpu_storage": [[192, null]], "spdl.io.create_reference_audio_frame": [[193, null]], "spdl.io.create_reference_video_frame": [[194, null]], "spdl.io.cuda_config": [[195, null]], "spdl.io.decode_config": [[196, null]], "spdl.io.decode_image_nvjpeg": [[197, null]], "spdl.io.decode_packets": [[198, null]], "spdl.io.decode_packets_nvdec": [[199, null]], "spdl.io.demux_audio": [[200, null]], "spdl.io.demux_config": [[201, null]], "spdl.io.demux_image": [[202, null]], "spdl.io.demux_video": [[203, null]], "spdl.io.encode_image": [[204, null]], "spdl.io.get_abuffer_desc": [[205, null]], "spdl.io.get_audio_filter_desc": [[206, null]], "spdl.io.get_buffer_desc": [[207, null]], "spdl.io.get_filter_desc": [[208, null]], "spdl.io.get_video_filter_desc": [[209, null]], "spdl.io.load_audio": [[210, null]], "spdl.io.load_image": [[211, null]], "spdl.io.load_image_batch": [[212, null]], "spdl.io.load_image_batch_nvjpeg": [[213, null]], "spdl.io.load_npy": [[214, null]], "spdl.io.load_npz": [[215, null]], "spdl.io.load_video": [[216, null]], "spdl.io.nv12_to_bgr": [[217, null]], "spdl.io.nv12_to_rgb": [[218, null]], "spdl.io.nvdec_decoder": [[219, null]], "spdl.io.sample_decode_video": [[220, null]], "spdl.io.save_image": [[221, null]], "spdl.io.streaming_load_video_nvdec": [[222, null]], "spdl.io.to_jax": [[223, null]], "spdl.io.to_numba": [[224, null]], "spdl.io.to_numpy": [[225, null]], "spdl.io.to_torch": [[226, null]], "spdl.io.transfer_buffer": [[227, null]], "spdl.io.transfer_buffer_cpu": [[228, null]], "spdl.io.utils": [[229, null]], "spdl.io.utils.built_with_cuda": [[230, null]], "spdl.io.utils.built_with_nvcodec": [[231, null]], "spdl.io.utils.built_with_nvjpeg": [[232, null]], "spdl.io.utils.get_ffmpeg_filters": [[233, null]], "spdl.io.utils.get_ffmpeg_log_level": [[234, null]], "spdl.io.utils.get_ffmpeg_versions": [[235, null]], "spdl.io.utils.set_ffmpeg_log_level": [[236, null]], "spdl.io.utils.trace_counter": [[237, null]], "spdl.io.utils.trace_event": [[238, null]], "spdl.io.utils.trace_gc": [[239, null]], "spdl.io.utils.tracing": [[240, null]], "spdl.io.video_encode_config": [[241, null]], "spdl.pipeline": [[242, null]], "spdl.pipeline.AsyncQueue": [[243, null]], "spdl.pipeline.Pipeline": [[244, null]], "spdl.pipeline.PipelineBuilder": [[245, null]], "spdl.pipeline.PipelineFailure": [[246, null]], "spdl.pipeline.QueuePerfStats": [[247, null]], "spdl.pipeline.StatsQueue": [[248, null]], "spdl.pipeline.TaskHook": [[249, null]], "spdl.pipeline.TaskPerfStats": [[250, null]], "spdl.pipeline.TaskStatsHook": [[251, null]], "spdl.pipeline.cache_iterator": [[252, null]], "spdl.pipeline.create_task": [[253, null]], "spdl.pipeline.iterate_in_subprocess": [[254, null]], "spdl.pipeline.run_pipeline_in_subprocess": [[255, null]], "spdl.source": [[256, null]], "spdl.source.IterableWithShuffle": [[257, null]], "spdl.source.imagenet": [[258, null]], "spdl.source.imagenet.ImageNet": [[259, null]], "spdl.source.imagenet.get_mappings": [[260, null]], "spdl.source.imagenet.parse_wnid": [[261, null]], "spdl.source.local_directory": [[262, null]], "spdl.source.local_directory.LocalDirectory": [[263, null]], "spdl.source.utils": [[264, null]], "spdl.source.utils.MergeIterator": [[265, null]], "spdl.source.utils.embed_shuffle": [[266, null]], "spdl.source.utils.repeat_source": [[267, null]], "streaming_load_video_nvdec": [[156, "streaming-load-video-nvdec"]], "tl;dr": [[2, null], [4, null]], "to_jax": [[156, "to-jax"]], "to_numba": [[156, "to-numba"]], "to_numpy": [[156, "to-numpy"]], "to_torch": [[156, "to-torch"]], "trace_counter": [[229, "trace-counter"]], "trace_event": [[229, "trace-event"]], "trace_gc": [[229, "trace-gc"]], "tracing": [[229, "tracing"]], "transfer_buffer": [[156, "transfer-buffer"]], "transfer_buffer_cpu": [[156, "transfer-buffer-cpu"]], "utils": [[256, "utils"]], "video_encode_config": [[156, "video-encode-config"]], "\u2020 The implementation of numpy.load function": [[2, null]], "\u26a0 Caveats \u26a0": [[273, "caveats"]]}, "docnames": ["api", "best_practice", "case_studies/data_format", "case_studies/index", "case_studies/parallelism", "cpp", "examples", "faq", "generated/data_formats", "generated/image_dataloading", "generated/imagenet_classification", "generated/libspdl/classspdl_1_1core_1_1BSF", "generated/libspdl/classspdl_1_1core_1_1CPUStorage", "generated/libspdl/classspdl_1_1core_1_1Codec", "generated/libspdl/classspdl_1_1core_1_1Decoder", "generated/libspdl/classspdl_1_1core_1_1Demuxer", "generated/libspdl/classspdl_1_1core_1_1Encoder", "generated/libspdl/classspdl_1_1core_1_1FilterGraph", "generated/libspdl/classspdl_1_1core_1_1Frames", "generated/libspdl/classspdl_1_1core_1_1InternalError", "generated/libspdl/classspdl_1_1core_1_1Muxer", "generated/libspdl/classspdl_1_1core_1_1PacketSeries", "generated/libspdl/classspdl_1_1core_1_1StreamingDemuxer", "generated/libspdl/classspdl_1_1core_1_1TracingSession", "generated/libspdl/classspdl_1_1core_1_1detail_1_1DecoderImpl", "generated/libspdl/classspdl_1_1core_1_1detail_1_1EncoderImpl", "generated/libspdl/define_frames_8h_1a9beaa64113e413112d43491ba5c13670", "generated/libspdl/define_frames_8h_1ac2ad95ac922a100ec27340436eb94940", "generated/libspdl/define_frames_8h_1ac99c83df576500933a3691deb137be6d", "generated/libspdl/define_types_8h_1a3a6c4d7f842d451acf8717ce734385f2", "generated/libspdl/dir__home_runner_work_spdl_spdl_src", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl_core", "generated/libspdl/enum_types_8h_1a5422694500d2203e301dc182e5f63d22", "generated/libspdl/enum_types_8h_1ac22438cfd069f0b1b6a736e73e8d244c", "generated/libspdl/enum_types_8h_1adb4e1adb2b3a59148c2797f903ead06f", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_types.h", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h", "generated/libspdl/function_buffer_8h_1abb668d9a68635211e5e07bd5038df4aa", "generated/libspdl/function_conversion_8h_1a295b42ad20d2569806d9a15009a44ca8", "generated/libspdl/function_conversion_8h_1a3f08ca7a5c09ab82603e239e50dff4d7", "generated/libspdl/function_conversion_8h_1a87d61e0429716c42f3a5f5e85aad5b61", "generated/libspdl/function_conversion_8h_1ae55bfac2f391205603d77241fc25ca1a", "generated/libspdl/function_demuxing_8h_1a590baa95f8eeb6bc0092c723ff060dd4", "generated/libspdl/function_demuxing_8h_1ad3fdb02bd04d231cd7238e034c27711f", "generated/libspdl/function_filter__graph_8h_1aaa3dba3ab905bd429d038f0bbaa6ce16", "generated/libspdl/function_frames_8h_1a30fbfab5f9ecfb208928ebdaca7f4349", "generated/libspdl/function_packets_8h_1aae5ad1fd09f47a2978afef3921508da0", "generated/libspdl/function_packets_8h_1ad3bdea22ad439f82174ce27c26bec857", "generated/libspdl/function_utils_8h_1a0aef7b410dcb4075e477b10ba3e71f80", "generated/libspdl/function_utils_8h_1a0ebae69b46f68552c3f64ddc2af67f53", "generated/libspdl/function_utils_8h_1a893d39670b4169063d8f6e3723f4bc11", "generated/libspdl/function_utils_8h_1a8f29c25b417b77e9dfb5a769b418c169", "generated/libspdl/function_utils_8h_1a9b6c16227a1a8445319b487cacb0cd1d", "generated/libspdl/function_utils_8h_1aa1e91130e5d71e8c2a104e4f72296ff3", "generated/libspdl/function_utils_8h_1abbebef003881d8734c12e03a47814732", "generated/libspdl/function_utils_8h_1ae1a3d30b33d837c39c40190e681d37c8", "generated/libspdl/function_utils_8h_1ae27a1cc3e5bfd9997090eb40711cc6c6", "generated/libspdl/function_utils_8h_1af82c781c7484afbad6cbac32ff925793", "generated/libspdl/libspdl_api", "generated/libspdl/libspdl_class", "generated/libspdl/libspdl_file", "generated/libspdl/namespace_spdl", "generated/libspdl/namespace_spdl__core", "generated/libspdl/namespace_spdl__core__detail", "generated/libspdl/namespace_std", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_types.h", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h", "generated/libspdl/root", "generated/libspdl/structAVRational", "generated/libspdl/structspdl_1_1core_1_1BytesAdaptor", "generated/libspdl/structspdl_1_1core_1_1CPUBuffer", "generated/libspdl/structspdl_1_1core_1_1DataInterface", "generated/libspdl/structspdl_1_1core_1_1DecodeConfig", "generated/libspdl/structspdl_1_1core_1_1DemuxConfig", "generated/libspdl/structspdl_1_1core_1_1EncodeConfigBase", "generated/libspdl/structspdl_1_1core_1_1Generator", "generated/libspdl/structspdl_1_1core_1_1Generator_1_1promise__type", "generated/libspdl/structspdl_1_1core_1_1Packets", "generated/libspdl/structspdl_1_1core_1_1RawPacketData", "generated/libspdl/structspdl_1_1core_1_1SourceAdaptor", "generated/libspdl/structspdl_1_1core_1_1Storage", "generated/libspdl/typedef_adaptor_8h_1adcb670a31326eb24268b384396736cd6", "generated/libspdl/typedef_adaptor_8h_1adfe58c3c3a3d3171c1d69c2e9924f2a7", "generated/libspdl/typedef_buffer_8h_1ab6e5b43497adbd35e9fbc35cf5be7101", "generated/libspdl/typedef_codec_8h_1a606d432c7b033a787f653c4992937e6f", "generated/libspdl/typedef_codec_8h_1a9098e05b01da4afd02090b0d6d7624ba", "generated/libspdl/typedef_codec_8h_1ac7441badce2b2aa467eac09b35d4f81e", "generated/libspdl/typedef_decoder_8h_1a4b0502ea20d1dda958a67deeb582a74b", "generated/libspdl/typedef_demuxing_8h_1a0a7f8c140cd7110dc5f3f6537fae67db", "generated/libspdl/typedef_demuxing_8h_1a4b53016f9b756cc2c2cfbd0e5ad9558b", "generated/libspdl/typedef_encoder_8h_1a0dfcc06d4bbea67c7f45399be8719fa6", "generated/libspdl/typedef_encoder_8h_1a383bf2b0ac1564702f10e3b5f3ef03f6", "generated/libspdl/typedef_encoder_8h_1a39ace4ea741767fa3d802040a9bc22e1", "generated/libspdl/typedef_encoder_8h_1a57216492ce017017647dba9d1f6f2a5d", "generated/libspdl/typedef_encoder_8h_1aacfba556b86e2d663a004b8677567339", "generated/libspdl/typedef_filter__graph_8h_1a29554b40f89e4b227521ff86ccf69b8b", "generated/libspdl/typedef_frames_8h_1a3760130bba382ba7f15df177ca3374c7", "generated/libspdl/typedef_frames_8h_1a53a3c93ef56a4400fabd3a553ab21c4a", "generated/libspdl/typedef_frames_8h_1a5be56dffe8f2b76de9540fb1ad8b83bf", "generated/libspdl/typedef_frames_8h_1a9db8234daca15eb073d00fa762641b62", "generated/libspdl/typedef_frames_8h_1aba3a9982b74abb6be181dc4d247d53fa", "generated/libspdl/typedef_frames_8h_1acb0efeb222082bf955c71c74964d301d", "generated/libspdl/typedef_frames_8h_1ad628496b3863230dd76eeccc4fa66437", "generated/libspdl/typedef_frames_8h_1af1892953097f3723455403752ef79fc5", "generated/libspdl/typedef_muxer_8h_1aaa76352d246819df02bc407729f69dda", "generated/libspdl/typedef_packets_8h_1a331b599d0eceb00ebef166d64623c71a", "generated/libspdl/typedef_packets_8h_1a7be7c9faccc623d12fb33ec966f84b4c", "generated/libspdl/typedef_packets_8h_1a8b9c8b08fcbf891fa939700ecd807ce1", "generated/libspdl/typedef_packets_8h_1a9644f8aa13f0e4db02d8ab60673563a3", "generated/libspdl/typedef_packets_8h_1aa21b44d594bfc132b4252fd2f544a691", "generated/libspdl/typedef_packets_8h_1aad5761fe07714efccc2be969a4397354", "generated/libspdl/typedef_packets_8h_1ab2cc72fb6b931466960bd4b9f812784c", "generated/libspdl/typedef_packets_8h_1ab96da01bb9cc9793e8ae2637e1dd610b", "generated/libspdl/typedef_packets_8h_1af018ade1cd38831c342686abbcb787a8", "generated/libspdl/typedef_types_8h_1a23b168da4cdf96923387b92a43f20038", "generated/libspdl/typedef_types_8h_1a6eff035c271caa5a533987a1e00ad43e", "generated/libspdl/typedef_types_8h_1a8b310bdb98714a971b07aa58f7403529", "generated/libspdl/typedef_types_8h_1a8bd80c8465b1f3e17b564c5ced977a2d", "generated/libspdl/typedef_types_8h_1aa5d8175da6bbcbe93e7191461f7baa20", "generated/libspdl/unabridged_orphan", "generated/multi_thread_preprocessing", "generated/performance_analysis", "generated/spdl.dataloader", "generated/spdl.dataloader.CacheDataLoader", "generated/spdl.dataloader.DataLoader", "generated/spdl.dataloader.PyTorchDataLoader", "generated/spdl.dataloader.get_pytorch_dataloader", "generated/spdl.io", "generated/spdl.io.AudioCodec", "generated/spdl.io.AudioDecoder", "generated/spdl.io.AudioEncodeConfig", "generated/spdl.io.AudioEncoder", "generated/spdl.io.AudioFrames", "generated/spdl.io.AudioPackets", "generated/spdl.io.BSF", "generated/spdl.io.CPUBuffer", "generated/spdl.io.CPUStorage", "generated/spdl.io.CUDABuffer", "generated/spdl.io.CUDAConfig", "generated/spdl.io.DecodeConfig", "generated/spdl.io.Decoder", "generated/spdl.io.DemuxConfig", "generated/spdl.io.Demuxer", "generated/spdl.io.FilterGraph", "generated/spdl.io.Frames", "generated/spdl.io.ImageCodec", "generated/spdl.io.ImageDecoder", "generated/spdl.io.ImageFrames", "generated/spdl.io.ImagePackets", "generated/spdl.io.Muxer", "generated/spdl.io.NpzFile", "generated/spdl.io.NvDecDecoder", "generated/spdl.io.Packets", "generated/spdl.io.VideoCodec", "generated/spdl.io.VideoDecoder", "generated/spdl.io.VideoEncodeConfig", "generated/spdl.io.VideoEncoder", "generated/spdl.io.VideoFrames", "generated/spdl.io.VideoPackets", "generated/spdl.io.apply_bsf", "generated/spdl.io.audio_encode_config", "generated/spdl.io.convert_array", "generated/spdl.io.convert_frames", "generated/spdl.io.cpu_storage", "generated/spdl.io.create_reference_audio_frame", "generated/spdl.io.create_reference_video_frame", "generated/spdl.io.cuda_config", "generated/spdl.io.decode_config", "generated/spdl.io.decode_image_nvjpeg", "generated/spdl.io.decode_packets", "generated/spdl.io.decode_packets_nvdec", "generated/spdl.io.demux_audio", "generated/spdl.io.demux_config", "generated/spdl.io.demux_image", "generated/spdl.io.demux_video", "generated/spdl.io.encode_image", "generated/spdl.io.get_abuffer_desc", "generated/spdl.io.get_audio_filter_desc", "generated/spdl.io.get_buffer_desc", "generated/spdl.io.get_filter_desc", "generated/spdl.io.get_video_filter_desc", "generated/spdl.io.load_audio", "generated/spdl.io.load_image", "generated/spdl.io.load_image_batch", "generated/spdl.io.load_image_batch_nvjpeg", "generated/spdl.io.load_npy", "generated/spdl.io.load_npz", "generated/spdl.io.load_video", "generated/spdl.io.nv12_to_bgr", "generated/spdl.io.nv12_to_rgb", "generated/spdl.io.nvdec_decoder", "generated/spdl.io.sample_decode_video", "generated/spdl.io.save_image", "generated/spdl.io.streaming_load_video_nvdec", "generated/spdl.io.to_jax", "generated/spdl.io.to_numba", "generated/spdl.io.to_numpy", "generated/spdl.io.to_torch", "generated/spdl.io.transfer_buffer", "generated/spdl.io.transfer_buffer_cpu", "generated/spdl.io.utils", "generated/spdl.io.utils.built_with_cuda", "generated/spdl.io.utils.built_with_nvcodec", "generated/spdl.io.utils.built_with_nvjpeg", "generated/spdl.io.utils.get_ffmpeg_filters", "generated/spdl.io.utils.get_ffmpeg_log_level", "generated/spdl.io.utils.get_ffmpeg_versions", "generated/spdl.io.utils.set_ffmpeg_log_level", "generated/spdl.io.utils.trace_counter", "generated/spdl.io.utils.trace_event", "generated/spdl.io.utils.trace_gc", "generated/spdl.io.utils.tracing", "generated/spdl.io.video_encode_config", "generated/spdl.pipeline", "generated/spdl.pipeline.AsyncQueue", "generated/spdl.pipeline.Pipeline", "generated/spdl.pipeline.PipelineBuilder", "generated/spdl.pipeline.PipelineFailure", "generated/spdl.pipeline.QueuePerfStats", "generated/spdl.pipeline.StatsQueue", "generated/spdl.pipeline.TaskHook", "generated/spdl.pipeline.TaskPerfStats", "generated/spdl.pipeline.TaskStatsHook", "generated/spdl.pipeline.cache_iterator", "generated/spdl.pipeline.create_task", "generated/spdl.pipeline.iterate_in_subprocess", "generated/spdl.pipeline.run_pipeline_in_subprocess", "generated/spdl.source", "generated/spdl.source.IterableWithShuffle", "generated/spdl.source.imagenet", "generated/spdl.source.imagenet.ImageNet", "generated/spdl.source.imagenet.get_mappings", "generated/spdl.source.imagenet.parse_wnid", "generated/spdl.source.local_directory", "generated/spdl.source.local_directory.LocalDirectory", "generated/spdl.source.utils", "generated/spdl.source.utils.MergeIterator", "generated/spdl.source.utils.embed_shuffle", "generated/spdl.source.utils.repeat_source", "generated/streaming_nvdec_decoding", "generated/streaming_video_processing", "generated/video_dataloading", "getting_started/concurrency", "getting_started/index", "getting_started/intro", "getting_started/logging", "getting_started/parallelism", "getting_started/stages", "index", "installation", "migration/index", "migration/paradigm_shift", "migration/pytorch", "migration/why", "notes/index", "notes/pipeline_impl", "optimization_guide/analysis", "optimization_guide/fleet_metrics", "optimization_guide/headspace_analysis", "optimization_guide/index", "optimization_guide/noisy_neighbour", "optimization_guide/resolution", "optimization_guide/setup", "overview"], "envversion": {"sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["api.rst", "best_practice.rst", "case_studies/data_format.rst", "case_studies/index.rst", "case_studies/parallelism.rst", "cpp.rst", "examples.rst", "faq.rst", "generated/data_formats.rst", "generated/image_dataloading.rst", "generated/imagenet_classification.rst", "generated/libspdl/classspdl_1_1core_1_1BSF.rst", "generated/libspdl/classspdl_1_1core_1_1CPUStorage.rst", "generated/libspdl/classspdl_1_1core_1_1Codec.rst", "generated/libspdl/classspdl_1_1core_1_1Decoder.rst", "generated/libspdl/classspdl_1_1core_1_1Demuxer.rst", "generated/libspdl/classspdl_1_1core_1_1Encoder.rst", "generated/libspdl/classspdl_1_1core_1_1FilterGraph.rst", "generated/libspdl/classspdl_1_1core_1_1Frames.rst", "generated/libspdl/classspdl_1_1core_1_1InternalError.rst", "generated/libspdl/classspdl_1_1core_1_1Muxer.rst", "generated/libspdl/classspdl_1_1core_1_1PacketSeries.rst", "generated/libspdl/classspdl_1_1core_1_1StreamingDemuxer.rst", "generated/libspdl/classspdl_1_1core_1_1TracingSession.rst", "generated/libspdl/classspdl_1_1core_1_1detail_1_1DecoderImpl.rst", "generated/libspdl/classspdl_1_1core_1_1detail_1_1EncoderImpl.rst", "generated/libspdl/define_frames_8h_1a9beaa64113e413112d43491ba5c13670.rst", "generated/libspdl/define_frames_8h_1ac2ad95ac922a100ec27340436eb94940.rst", "generated/libspdl/define_frames_8h_1ac99c83df576500933a3691deb137be6d.rst", "generated/libspdl/define_types_8h_1a3a6c4d7f842d451acf8717ce734385f2.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl.rst", "generated/libspdl/dir__home_runner_work_spdl_spdl_src_libspdl_core.rst", "generated/libspdl/enum_types_8h_1a5422694500d2203e301dc182e5f63d22.rst", "generated/libspdl/enum_types_8h_1ac22438cfd069f0b1b6a736e73e8d244c.rst", "generated/libspdl/enum_types_8h_1adb4e1adb2b3a59148c2797f903ead06f.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_types.h.rst", "generated/libspdl/file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h.rst", "generated/libspdl/function_buffer_8h_1abb668d9a68635211e5e07bd5038df4aa.rst", "generated/libspdl/function_conversion_8h_1a295b42ad20d2569806d9a15009a44ca8.rst", "generated/libspdl/function_conversion_8h_1a3f08ca7a5c09ab82603e239e50dff4d7.rst", "generated/libspdl/function_conversion_8h_1a87d61e0429716c42f3a5f5e85aad5b61.rst", "generated/libspdl/function_conversion_8h_1ae55bfac2f391205603d77241fc25ca1a.rst", "generated/libspdl/function_demuxing_8h_1a590baa95f8eeb6bc0092c723ff060dd4.rst", "generated/libspdl/function_demuxing_8h_1ad3fdb02bd04d231cd7238e034c27711f.rst", "generated/libspdl/function_filter__graph_8h_1aaa3dba3ab905bd429d038f0bbaa6ce16.rst", "generated/libspdl/function_frames_8h_1a30fbfab5f9ecfb208928ebdaca7f4349.rst", "generated/libspdl/function_packets_8h_1aae5ad1fd09f47a2978afef3921508da0.rst", "generated/libspdl/function_packets_8h_1ad3bdea22ad439f82174ce27c26bec857.rst", "generated/libspdl/function_utils_8h_1a0aef7b410dcb4075e477b10ba3e71f80.rst", "generated/libspdl/function_utils_8h_1a0ebae69b46f68552c3f64ddc2af67f53.rst", "generated/libspdl/function_utils_8h_1a893d39670b4169063d8f6e3723f4bc11.rst", "generated/libspdl/function_utils_8h_1a8f29c25b417b77e9dfb5a769b418c169.rst", "generated/libspdl/function_utils_8h_1a9b6c16227a1a8445319b487cacb0cd1d.rst", "generated/libspdl/function_utils_8h_1aa1e91130e5d71e8c2a104e4f72296ff3.rst", "generated/libspdl/function_utils_8h_1abbebef003881d8734c12e03a47814732.rst", "generated/libspdl/function_utils_8h_1ae1a3d30b33d837c39c40190e681d37c8.rst", "generated/libspdl/function_utils_8h_1ae27a1cc3e5bfd9997090eb40711cc6c6.rst", "generated/libspdl/function_utils_8h_1af82c781c7484afbad6cbac32ff925793.rst", "generated/libspdl/libspdl_api.rst", "generated/libspdl/libspdl_class.rst", "generated/libspdl/libspdl_file.rst", "generated/libspdl/namespace_spdl.rst", "generated/libspdl/namespace_spdl__core.rst", "generated/libspdl/namespace_spdl__core__detail.rst", "generated/libspdl/namespace_std.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_adaptor.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_bsf.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_buffer.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_codec.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_conversion.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_decoder.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_demuxing.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_encoder.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_filter_graph.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_frames.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_generator.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_muxer.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_packets.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_storage.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_types.h.rst", "generated/libspdl/program_listing_file__home_runner_work_spdl_spdl_src_libspdl_core_utils.h.rst", "generated/libspdl/root.rst", "generated/libspdl/structAVRational.rst", "generated/libspdl/structspdl_1_1core_1_1BytesAdaptor.rst", "generated/libspdl/structspdl_1_1core_1_1CPUBuffer.rst", "generated/libspdl/structspdl_1_1core_1_1DataInterface.rst", "generated/libspdl/structspdl_1_1core_1_1DecodeConfig.rst", "generated/libspdl/structspdl_1_1core_1_1DemuxConfig.rst", "generated/libspdl/structspdl_1_1core_1_1EncodeConfigBase.rst", "generated/libspdl/structspdl_1_1core_1_1Generator.rst", "generated/libspdl/structspdl_1_1core_1_1Generator_1_1promise__type.rst", "generated/libspdl/structspdl_1_1core_1_1Packets.rst", "generated/libspdl/structspdl_1_1core_1_1RawPacketData.rst", "generated/libspdl/structspdl_1_1core_1_1SourceAdaptor.rst", "generated/libspdl/structspdl_1_1core_1_1Storage.rst", "generated/libspdl/typedef_adaptor_8h_1adcb670a31326eb24268b384396736cd6.rst", "generated/libspdl/typedef_adaptor_8h_1adfe58c3c3a3d3171c1d69c2e9924f2a7.rst", "generated/libspdl/typedef_buffer_8h_1ab6e5b43497adbd35e9fbc35cf5be7101.rst", "generated/libspdl/typedef_codec_8h_1a606d432c7b033a787f653c4992937e6f.rst", "generated/libspdl/typedef_codec_8h_1a9098e05b01da4afd02090b0d6d7624ba.rst", "generated/libspdl/typedef_codec_8h_1ac7441badce2b2aa467eac09b35d4f81e.rst", "generated/libspdl/typedef_decoder_8h_1a4b0502ea20d1dda958a67deeb582a74b.rst", "generated/libspdl/typedef_demuxing_8h_1a0a7f8c140cd7110dc5f3f6537fae67db.rst", "generated/libspdl/typedef_demuxing_8h_1a4b53016f9b756cc2c2cfbd0e5ad9558b.rst", "generated/libspdl/typedef_encoder_8h_1a0dfcc06d4bbea67c7f45399be8719fa6.rst", "generated/libspdl/typedef_encoder_8h_1a383bf2b0ac1564702f10e3b5f3ef03f6.rst", "generated/libspdl/typedef_encoder_8h_1a39ace4ea741767fa3d802040a9bc22e1.rst", "generated/libspdl/typedef_encoder_8h_1a57216492ce017017647dba9d1f6f2a5d.rst", "generated/libspdl/typedef_encoder_8h_1aacfba556b86e2d663a004b8677567339.rst", "generated/libspdl/typedef_filter__graph_8h_1a29554b40f89e4b227521ff86ccf69b8b.rst", "generated/libspdl/typedef_frames_8h_1a3760130bba382ba7f15df177ca3374c7.rst", "generated/libspdl/typedef_frames_8h_1a53a3c93ef56a4400fabd3a553ab21c4a.rst", "generated/libspdl/typedef_frames_8h_1a5be56dffe8f2b76de9540fb1ad8b83bf.rst", "generated/libspdl/typedef_frames_8h_1a9db8234daca15eb073d00fa762641b62.rst", "generated/libspdl/typedef_frames_8h_1aba3a9982b74abb6be181dc4d247d53fa.rst", "generated/libspdl/typedef_frames_8h_1acb0efeb222082bf955c71c74964d301d.rst", "generated/libspdl/typedef_frames_8h_1ad628496b3863230dd76eeccc4fa66437.rst", "generated/libspdl/typedef_frames_8h_1af1892953097f3723455403752ef79fc5.rst", "generated/libspdl/typedef_muxer_8h_1aaa76352d246819df02bc407729f69dda.rst", "generated/libspdl/typedef_packets_8h_1a331b599d0eceb00ebef166d64623c71a.rst", "generated/libspdl/typedef_packets_8h_1a7be7c9faccc623d12fb33ec966f84b4c.rst", "generated/libspdl/typedef_packets_8h_1a8b9c8b08fcbf891fa939700ecd807ce1.rst", "generated/libspdl/typedef_packets_8h_1a9644f8aa13f0e4db02d8ab60673563a3.rst", "generated/libspdl/typedef_packets_8h_1aa21b44d594bfc132b4252fd2f544a691.rst", "generated/libspdl/typedef_packets_8h_1aad5761fe07714efccc2be969a4397354.rst", "generated/libspdl/typedef_packets_8h_1ab2cc72fb6b931466960bd4b9f812784c.rst", "generated/libspdl/typedef_packets_8h_1ab96da01bb9cc9793e8ae2637e1dd610b.rst", "generated/libspdl/typedef_packets_8h_1af018ade1cd38831c342686abbcb787a8.rst", "generated/libspdl/typedef_types_8h_1a23b168da4cdf96923387b92a43f20038.rst", "generated/libspdl/typedef_types_8h_1a6eff035c271caa5a533987a1e00ad43e.rst", "generated/libspdl/typedef_types_8h_1a8b310bdb98714a971b07aa58f7403529.rst", "generated/libspdl/typedef_types_8h_1a8bd80c8465b1f3e17b564c5ced977a2d.rst", "generated/libspdl/typedef_types_8h_1aa5d8175da6bbcbe93e7191461f7baa20.rst", "generated/libspdl/unabridged_orphan.rst", "generated/multi_thread_preprocessing.rst", "generated/performance_analysis.rst", "generated/spdl.dataloader.rst", "generated/spdl.dataloader.CacheDataLoader.rst", "generated/spdl.dataloader.DataLoader.rst", "generated/spdl.dataloader.PyTorchDataLoader.rst", "generated/spdl.dataloader.get_pytorch_dataloader.rst", "generated/spdl.io.rst", "generated/spdl.io.AudioCodec.rst", "generated/spdl.io.AudioDecoder.rst", "generated/spdl.io.AudioEncodeConfig.rst", "generated/spdl.io.AudioEncoder.rst", "generated/spdl.io.AudioFrames.rst", "generated/spdl.io.AudioPackets.rst", "generated/spdl.io.BSF.rst", "generated/spdl.io.CPUBuffer.rst", "generated/spdl.io.CPUStorage.rst", "generated/spdl.io.CUDABuffer.rst", "generated/spdl.io.CUDAConfig.rst", "generated/spdl.io.DecodeConfig.rst", "generated/spdl.io.Decoder.rst", "generated/spdl.io.DemuxConfig.rst", "generated/spdl.io.Demuxer.rst", "generated/spdl.io.FilterGraph.rst", "generated/spdl.io.Frames.rst", "generated/spdl.io.ImageCodec.rst", "generated/spdl.io.ImageDecoder.rst", "generated/spdl.io.ImageFrames.rst", "generated/spdl.io.ImagePackets.rst", "generated/spdl.io.Muxer.rst", "generated/spdl.io.NpzFile.rst", "generated/spdl.io.NvDecDecoder.rst", "generated/spdl.io.Packets.rst", "generated/spdl.io.VideoCodec.rst", "generated/spdl.io.VideoDecoder.rst", "generated/spdl.io.VideoEncodeConfig.rst", "generated/spdl.io.VideoEncoder.rst", "generated/spdl.io.VideoFrames.rst", "generated/spdl.io.VideoPackets.rst", "generated/spdl.io.apply_bsf.rst", "generated/spdl.io.audio_encode_config.rst", "generated/spdl.io.convert_array.rst", "generated/spdl.io.convert_frames.rst", "generated/spdl.io.cpu_storage.rst", "generated/spdl.io.create_reference_audio_frame.rst", "generated/spdl.io.create_reference_video_frame.rst", "generated/spdl.io.cuda_config.rst", "generated/spdl.io.decode_config.rst", "generated/spdl.io.decode_image_nvjpeg.rst", "generated/spdl.io.decode_packets.rst", "generated/spdl.io.decode_packets_nvdec.rst", "generated/spdl.io.demux_audio.rst", "generated/spdl.io.demux_config.rst", "generated/spdl.io.demux_image.rst", "generated/spdl.io.demux_video.rst", "generated/spdl.io.encode_image.rst", "generated/spdl.io.get_abuffer_desc.rst", "generated/spdl.io.get_audio_filter_desc.rst", "generated/spdl.io.get_buffer_desc.rst", "generated/spdl.io.get_filter_desc.rst", "generated/spdl.io.get_video_filter_desc.rst", "generated/spdl.io.load_audio.rst", "generated/spdl.io.load_image.rst", "generated/spdl.io.load_image_batch.rst", "generated/spdl.io.load_image_batch_nvjpeg.rst", "generated/spdl.io.load_npy.rst", "generated/spdl.io.load_npz.rst", "generated/spdl.io.load_video.rst", "generated/spdl.io.nv12_to_bgr.rst", "generated/spdl.io.nv12_to_rgb.rst", "generated/spdl.io.nvdec_decoder.rst", "generated/spdl.io.sample_decode_video.rst", "generated/spdl.io.save_image.rst", "generated/spdl.io.streaming_load_video_nvdec.rst", "generated/spdl.io.to_jax.rst", "generated/spdl.io.to_numba.rst", "generated/spdl.io.to_numpy.rst", "generated/spdl.io.to_torch.rst", "generated/spdl.io.transfer_buffer.rst", "generated/spdl.io.transfer_buffer_cpu.rst", "generated/spdl.io.utils.rst", "generated/spdl.io.utils.built_with_cuda.rst", "generated/spdl.io.utils.built_with_nvcodec.rst", "generated/spdl.io.utils.built_with_nvjpeg.rst", "generated/spdl.io.utils.get_ffmpeg_filters.rst", "generated/spdl.io.utils.get_ffmpeg_log_level.rst", "generated/spdl.io.utils.get_ffmpeg_versions.rst", "generated/spdl.io.utils.set_ffmpeg_log_level.rst", "generated/spdl.io.utils.trace_counter.rst", "generated/spdl.io.utils.trace_event.rst", "generated/spdl.io.utils.trace_gc.rst", "generated/spdl.io.utils.tracing.rst", "generated/spdl.io.video_encode_config.rst", "generated/spdl.pipeline.rst", "generated/spdl.pipeline.AsyncQueue.rst", "generated/spdl.pipeline.Pipeline.rst", "generated/spdl.pipeline.PipelineBuilder.rst", "generated/spdl.pipeline.PipelineFailure.rst", "generated/spdl.pipeline.QueuePerfStats.rst", "generated/spdl.pipeline.StatsQueue.rst", "generated/spdl.pipeline.TaskHook.rst", "generated/spdl.pipeline.TaskPerfStats.rst", "generated/spdl.pipeline.TaskStatsHook.rst", "generated/spdl.pipeline.cache_iterator.rst", "generated/spdl.pipeline.create_task.rst", "generated/spdl.pipeline.iterate_in_subprocess.rst", "generated/spdl.pipeline.run_pipeline_in_subprocess.rst", "generated/spdl.source.rst", "generated/spdl.source.IterableWithShuffle.rst", "generated/spdl.source.imagenet.rst", "generated/spdl.source.imagenet.ImageNet.rst", "generated/spdl.source.imagenet.get_mappings.rst", "generated/spdl.source.imagenet.parse_wnid.rst", "generated/spdl.source.local_directory.rst", "generated/spdl.source.local_directory.LocalDirectory.rst", "generated/spdl.source.utils.rst", "generated/spdl.source.utils.MergeIterator.rst", "generated/spdl.source.utils.embed_shuffle.rst", "generated/spdl.source.utils.repeat_source.rst", "generated/streaming_nvdec_decoding.rst", "generated/streaming_video_processing.rst", "generated/video_dataloading.rst", "getting_started/concurrency.rst", "getting_started/index.rst", "getting_started/intro.rst", "getting_started/logging.rst", "getting_started/parallelism.rst", "getting_started/stages.rst", "index.rst", "installation.rst", "migration/index.rst", "migration/paradigm_shift.rst", "migration/pytorch.rst", "migration/why.rst", "notes/index.rst", "notes/pipeline_impl.rst", "optimization_guide/analysis.rst", "optimization_guide/fleet_metrics.rst", "optimization_guide/headspace_analysis.rst", "optimization_guide/index.rst", "optimization_guide/noisy_neighbour.rst", "optimization_guide/resolution.rst", "optimization_guide/setup.rst", "overview.rst"], "indexentries": {"__getitem__() (npzfile method)": [[179, "spdl.io.NpzFile.__getitem__", false]], "__getitem__() (videoframes method)": [[186, "spdl.io.VideoFrames.__getitem__", false]], "__iter__() (cachedataloader method)": [[152, "spdl.dataloader.CacheDataLoader.__iter__", false]], "__iter__() (dataloader method)": [[153, "spdl.dataloader.DataLoader.__iter__", false]], "__iter__() (datasource method)": [[8, "data_formats.DataSource.__iter__", false]], "__iter__() (imagenet method)": [[259, "spdl.source.imagenet.ImageNet.__iter__", false]], "__iter__() (iterablewithshuffle method)": [[257, "spdl.source.IterableWithShuffle.__iter__", false]], "__iter__() (localdirectory method)": [[263, "spdl.source.local_directory.LocalDirectory.__iter__", false]], "__iter__() (mergeiterator method)": [[265, "spdl.source.utils.MergeIterator.__iter__", false]], "__iter__() (npzfile method)": [[179, "spdl.io.NpzFile.__iter__", false]], "__iter__() (pipeline method)": [[244, "spdl.pipeline.Pipeline.__iter__", false]], "__iter__() (pytorchdataloader method)": [[154, "spdl.dataloader.PyTorchDataLoader.__iter__", false]], "__len__() (audioframes method)": [[161, "spdl.io.AudioFrames.__len__", false]], "__len__() (cachedataloader method)": [[152, "spdl.dataloader.CacheDataLoader.__len__", false]], "__len__() (npzfile method)": [[179, "spdl.io.NpzFile.__len__", false]], "__len__() (pytorchdataloader method)": [[154, "spdl.dataloader.PyTorchDataLoader.__len__", false]], "__len__() (videoframes method)": [[186, "spdl.io.VideoFrames.__len__", false]], "__len__() (videopackets method)": [[187, "spdl.io.VideoPackets.__len__", false]], "_is_audio (c macro)": [[27, "c._IS_AUDIO", false]], "_is_image (c macro)": [[28, "c._IS_IMAGE", false]], "_is_video (c macro)": [[26, "c._IS_VIDEO", false]], "add_encode_stream() (muxer method)": [[178, "spdl.io.Muxer.add_encode_stream", false]], "add_frames() (filtergraph method)": [[172, "spdl.io.FilterGraph.add_frames", false]], "add_remux_stream() (muxer method)": [[178, "spdl.io.Muxer.add_remux_stream", false]], "add_sink() (pipelinebuilder method)": [[245, "spdl.pipeline.PipelineBuilder.add_sink", false]], "add_source() (pipelinebuilder method)": [[245, "spdl.pipeline.PipelineBuilder.add_source", false]], "aggregate() (pipelinebuilder method)": [[245, "spdl.pipeline.PipelineBuilder.aggregate", false]], "apply_bsf() (in module spdl.io)": [[188, "spdl.io.apply_bsf", false]], "asyncqueue (class in spdl.pipeline)": [[243, "spdl.pipeline.AsyncQueue", false]], "audio_codec (demuxer property)": [[171, "spdl.io.Demuxer.audio_codec", false]], "audio_encode_config() (in module spdl.io)": [[189, "spdl.io.audio_encode_config", false]], "audio_stream_index (demuxer property)": [[171, "spdl.io.Demuxer.audio_stream_index", false]], "audiocodec (class in spdl.io)": [[157, "spdl.io.AudioCodec", false]], "audiodecoder (class in spdl.io)": [[158, "spdl.io.AudioDecoder", false]], "audioencodeconfig (class in spdl.io)": [[159, "spdl.io.AudioEncodeConfig", false]], "audioencoder (class in spdl.io)": [[160, "spdl.io.AudioEncoder", false]], "audioframes (class in spdl.io)": [[161, "spdl.io.AudioFrames", false]], "audiopackets (class in spdl.io)": [[162, "spdl.io.AudioPackets", false]], "auto_stop() (pipeline method)": [[244, "spdl.pipeline.Pipeline.auto_stop", false]], "ave_get_time (queueperfstats attribute)": [[247, "spdl.pipeline.QueuePerfStats.ave_get_time", false]], "ave_put_time (queueperfstats attribute)": [[247, "spdl.pipeline.QueuePerfStats.ave_put_time", false]], "ave_time (taskperfstats attribute)": [[250, "spdl.pipeline.TaskPerfStats.ave_time", false]], "avrational (c++ struct)": [[97, "_CPPv410AVRational", false]], "avrational (c++ type)": [[144, "_CPPv410AVRational", false]], "avrational::den (c++ member)": [[97, "_CPPv4N10AVRational3denE", false]], "avrational::num (c++ member)": [[97, "_CPPv4N10AVRational3numE", false]], "batch_decode() (in module image_dataloading)": [[9, "image_dataloading.batch_decode", false]], "benchmark() (in module image_dataloading)": [[9, "image_dataloading.benchmark", false]], "benchmark() (in module imagenet_classification)": [[10, "imagenet_classification.benchmark", false]], "benchmark() (in module video_dataloading)": [[270, "video_dataloading.benchmark", false]], "bsf (class in spdl.io)": [[163, "spdl.io.BSF", false]], "build() (pipelinebuilder method)": [[245, "spdl.pipeline.PipelineBuilder.build", false]], "build_components() (in module streaming_video_processing)": [[269, "streaming_video_processing.build_components", false]], "build_pipeline() (in module performance_analysis)": [[150, "performance_analysis.build_pipeline", false]], "built_with_cuda() (in module spdl.io.utils)": [[230, "spdl.io.utils.built_with_cuda", false]], "built_with_nvcodec() (in module spdl.io.utils)": [[231, "spdl.io.utils.built_with_nvcodec", false]], "built_with_nvjpeg() (in module spdl.io.utils)": [[232, "spdl.io.utils.built_with_nvjpeg", false]], "cache_iterator() (in module spdl.pipeline)": [[252, "spdl.pipeline.cache_iterator", false]], "cachedataloader (class in spdl.dataloader)": [[152, "spdl.dataloader.CacheDataLoader", false]], "channel_layout (audiocodec property)": [[157, "spdl.io.AudioCodec.channel_layout", false]], "classification (class in imagenet_classification)": [[10, "imagenet_classification.Classification", false]], "clone() (audioframes method)": [[161, "spdl.io.AudioFrames.clone", false]], "clone() (audiopackets method)": [[162, "spdl.io.AudioPackets.clone", false]], "clone() (imageframes method)": [[176, "spdl.io.ImageFrames.clone", false]], "clone() (imagepackets method)": [[177, "spdl.io.ImagePackets.clone", false]], "clone() (videoframes method)": [[186, "spdl.io.VideoFrames.clone", false]], "clone() (videopackets method)": [[187, "spdl.io.VideoPackets.clone", false]], "close() (muxer method)": [[178, "spdl.io.Muxer.close", false]], "codec (audiopackets property)": [[162, "spdl.io.AudioPackets.codec", false]], "codec (imagepackets property)": [[177, "spdl.io.ImagePackets.codec", false]], "codec (videopackets property)": [[187, "spdl.io.VideoPackets.codec", false]], "convert_array() (in module spdl.io)": [[190, "spdl.io.convert_array", false]], "convert_frames() (in module spdl.io)": [[191, "spdl.io.convert_frames", false]], "cpu_storage() (in module spdl.io)": [[192, "spdl.io.cpu_storage", false]], "cpubuffer (class in spdl.io)": [[164, "spdl.io.CPUBuffer", false]], "cpustorage (class in spdl.io)": [[165, "spdl.io.CPUStorage", false]], "create_reference_audio_frame() (in module spdl.io)": [[193, "spdl.io.create_reference_audio_frame", false]], "create_reference_video_frame() (in module spdl.io)": [[194, "spdl.io.create_reference_video_frame", false]], "create_task() (in module spdl.pipeline)": [[253, "spdl.pipeline.create_task", false]], "cuda_config() (in module spdl.io)": [[195, "spdl.io.cuda_config", false]], "cudabuffer (class in spdl.io)": [[166, "spdl.io.CUDABuffer", false]], "cudaconfig (class in spdl.io)": [[167, "spdl.io.CUDAConfig", false]], "customqueue (class in performance_analysis)": [[150, "performance_analysis.CustomQueue", false]], "customtaskhook (class in performance_analysis)": [[150, "performance_analysis.CustomTaskHook", false]], "data_formats": [[8, "module-data_formats", false]], "dataloader (class in spdl.dataloader)": [[153, "spdl.dataloader.DataLoader", false]], "datasource (class in data_formats)": [[8, "data_formats.DataSource", false]], "decode() (audiodecoder method)": [[158, "spdl.io.AudioDecoder.decode", false]], "decode() (imagedecoder method)": [[175, "spdl.io.ImageDecoder.decode", false]], "decode() (in module performance_analysis)": [[150, "performance_analysis.decode", false]], "decode() (in module streaming_nvdec_decoding)": [[268, "streaming_nvdec_decoding.decode", false]], "decode() (nvdecdecoder method)": [[180, "spdl.io.NvDecDecoder.decode", false]], "decode() (videodecoder method)": [[183, "spdl.io.VideoDecoder.decode", false]], "decode_config() (in module spdl.io)": [[196, "spdl.io.decode_config", false]], "decode_image_nvjpeg() (in module spdl.io)": [[197, "spdl.io.decode_image_nvjpeg", false]], "decode_packets() (in module spdl.io)": [[198, "spdl.io.decode_packets", false]], "decode_packets_nvdec() (in module spdl.io)": [[199, "spdl.io.decode_packets_nvdec", false]], "decode_video() (in module video_dataloading)": [[270, "video_dataloading.decode_video", false]], "decode_video_nvdec() (in module video_dataloading)": [[270, "video_dataloading.decode_video_nvdec", false]], "decodeconfig (class in spdl.io)": [[168, "spdl.io.DecodeConfig", false]], "decoder() (in module spdl.io)": [[169, "spdl.io.Decoder", false]], "demux_audio() (demuxer method)": [[171, "spdl.io.Demuxer.demux_audio", false]], "demux_audio() (in module spdl.io)": [[200, "spdl.io.demux_audio", false]], "demux_config() (in module spdl.io)": [[201, "spdl.io.demux_config", false]], "demux_image() (demuxer method)": [[171, "spdl.io.Demuxer.demux_image", false]], "demux_image() (in module spdl.io)": [[202, "spdl.io.demux_image", false]], "demux_video() (demuxer method)": [[171, "spdl.io.Demuxer.demux_video", false]], "demux_video() (in module spdl.io)": [[203, "spdl.io.demux_video", false]], "demuxconfig (class in spdl.io)": [[170, "spdl.io.DemuxConfig", false]], "demuxer (class in spdl.io)": [[171, "spdl.io.Demuxer", false]], "device_index (cudabuffer property)": [[166, "spdl.io.CUDABuffer.device_index", false]], "disaggregate() (pipelinebuilder method)": [[245, "spdl.pipeline.PipelineBuilder.disaggregate", false]], "elapsed (perfresult attribute)": [[9, "image_dataloading.PerfResult.elapsed", false], [270, "video_dataloading.PerfResult.elapsed", false]], "elapsed (queueperfstats attribute)": [[247, "spdl.pipeline.QueuePerfStats.elapsed", false]], "embed_shuffle() (in module spdl.source.utils)": [[266, "spdl.source.utils.embed_shuffle", false]], "encode() (audioencoder method)": [[160, "spdl.io.AudioEncoder.encode", false]], "encode() (videoencoder method)": [[185, "spdl.io.VideoEncoder.encode", false]], "encode_image() (in module spdl.io)": [[204, "spdl.io.encode_image", false]], "entrypoint() (in module image_dataloading)": [[9, "image_dataloading.entrypoint", false]], "entrypoint() (in module imagenet_classification)": [[10, "imagenet_classification.entrypoint", false]], "entrypoint() (in module multi_thread_preprocessing)": [[149, "multi_thread_preprocessing.entrypoint", false]], "entrypoint() (in module video_dataloading)": [[270, "video_dataloading.entrypoint", false]], "exp_spdl() (in module multi_thread_preprocessing)": [[149, "multi_thread_preprocessing.exp_spdl", false]], "exp_torch() (in module multi_thread_preprocessing)": [[149, "multi_thread_preprocessing.exp_torch", false]], "filter() (bsf method)": [[163, "spdl.io.BSF.filter", false]], "filtergraph (class in spdl.io)": [[172, "spdl.io.FilterGraph", false]], "flush() (audiodecoder method)": [[158, "spdl.io.AudioDecoder.flush", false]], "flush() (audioencoder method)": [[160, "spdl.io.AudioEncoder.flush", false]], "flush() (bsf method)": [[163, "spdl.io.BSF.flush", false]], "flush() (filtergraph method)": [[172, "spdl.io.FilterGraph.flush", false]], "flush() (muxer method)": [[178, "spdl.io.Muxer.flush", false]], "flush() (nvdecdecoder method)": [[180, "spdl.io.NvDecDecoder.flush", false]], "flush() (videodecoder method)": [[183, "spdl.io.VideoDecoder.flush", false]], "flush() (videoencoder method)": [[185, "spdl.io.VideoEncoder.flush", false]], "forward() (classification method)": [[10, "imagenet_classification.Classification.forward", false]], "forward() (modelbundle method)": [[10, "imagenet_classification.ModelBundle.forward", false]], "forward() (preprocessing method)": [[10, "imagenet_classification.Preprocessing.forward", false]], "frame_rate (videocodec property)": [[182, "spdl.io.VideoCodec.frame_rate", false]], "frame_rate (videopackets property)": [[187, "spdl.io.VideoPackets.frame_rate", false]], "frame_size (audioencoder property)": [[160, "spdl.io.AudioEncoder.frame_size", false]], "frames (class in spdl.io)": [[173, "spdl.io.Frames", false]], "get() (statsqueue method)": [[248, "spdl.pipeline.StatsQueue.get", false]], "get_abuffer_desc() (in module spdl.io)": [[205, "spdl.io.get_abuffer_desc", false]], "get_audio_filter_desc() (in module spdl.io)": [[206, "spdl.io.get_audio_filter_desc", false]], "get_buffer_desc() (in module spdl.io)": [[207, "spdl.io.get_buffer_desc", false]], "get_dataloader() (in module imagenet_classification)": [[10, "imagenet_classification.get_dataloader", false]], "get_decode_func() (in module imagenet_classification)": [[10, "imagenet_classification.get_decode_func", false]], "get_ffmpeg_filters() (in module spdl.io.utils)": [[233, "spdl.io.utils.get_ffmpeg_filters", false]], "get_ffmpeg_log_level() (in module spdl.io.utils)": [[234, "spdl.io.utils.get_ffmpeg_log_level", false]], "get_ffmpeg_versions() (in module spdl.io.utils)": [[235, "spdl.io.utils.get_ffmpeg_versions", false]], "get_filter_desc() (in module spdl.io)": [[208, "spdl.io.get_filter_desc", false]], "get_filter_desc() (in module streaming_video_processing)": [[269, "streaming_video_processing.get_filter_desc", false]], "get_frames() (filtergraph method)": [[172, "spdl.io.FilterGraph.get_frames", false]], "get_item() (pipeline method)": [[244, "spdl.pipeline.Pipeline.get_item", false]], "get_iterator() (pipeline method)": [[244, "spdl.pipeline.Pipeline.get_iterator", false]], "get_mappings() (in module spdl.source.imagenet)": [[260, "spdl.source.imagenet.get_mappings", false]], "get_mock_data() (in module data_formats)": [[8, "data_formats.get_mock_data", false]], "get_model() (in module imagenet_classification)": [[10, "imagenet_classification.get_model", false]], "get_pipeline() (in module data_formats)": [[8, "data_formats.get_pipeline", false]], "get_pipeline() (in module image_dataloading)": [[9, "image_dataloading.get_pipeline", false]], "get_pipeline() (in module video_dataloading)": [[270, "video_dataloading.get_pipeline", false]], "get_pytorch_dataloader() (in module spdl.dataloader)": [[155, "spdl.dataloader.get_pytorch_dataloader", false]], "get_video_filter_desc() (in module spdl.io)": [[209, "spdl.io.get_video_filter_desc", false]], "has_audio() (demuxer method)": [[171, "spdl.io.Demuxer.has_audio", false]], "height (imagecodec property)": [[174, "spdl.io.ImageCodec.height", false]], "height (imageframes property)": [[176, "spdl.io.ImageFrames.height", false]], "height (imagepackets property)": [[177, "spdl.io.ImagePackets.height", false]], "height (videocodec property)": [[182, "spdl.io.VideoCodec.height", false]], "height (videoframes property)": [[186, "spdl.io.VideoFrames.height", false]], "height (videopackets property)": [[187, "spdl.io.VideoPackets.height", false]], "image_codec (demuxer property)": [[171, "spdl.io.Demuxer.image_codec", false]], "image_dataloading": [[9, "module-image_dataloading", false]], "imagecodec (class in spdl.io)": [[174, "spdl.io.ImageCodec", false]], "imagedecoder (class in spdl.io)": [[175, "spdl.io.ImageDecoder", false]], "imageframes (class in spdl.io)": [[176, "spdl.io.ImageFrames", false]], "imagenet (class in spdl.source.imagenet)": [[259, "spdl.source.imagenet.ImageNet", false]], "imagenet_classification": [[10, "module-imagenet_classification", false]], "imagepackets (class in spdl.io)": [[177, "spdl.io.ImagePackets", false]], "init() (nvdecdecoder method)": [[180, "spdl.io.NvDecDecoder.init", false]], "interval_stats_callback() (customqueue method)": [[150, "performance_analysis.CustomQueue.interval_stats_callback", false]], "interval_stats_callback() (customtaskhook method)": [[150, "performance_analysis.CustomTaskHook.interval_stats_callback", false]], "interval_stats_callback() (statsqueue method)": [[248, "spdl.pipeline.StatsQueue.interval_stats_callback", false]], "interval_stats_callback() (taskstatshook method)": [[251, "spdl.pipeline.TaskStatsHook.interval_stats_callback", false]], "iterablewithshuffle (class in spdl.source)": [[257, "spdl.source.IterableWithShuffle", false]], "iterate_in_subprocess() (in module spdl.pipeline)": [[254, "spdl.pipeline.iterate_in_subprocess", false]], "load_audio() (in module spdl.io)": [[210, "spdl.io.load_audio", false]], "load_image() (in module spdl.io)": [[211, "spdl.io.load_image", false]], "load_image_batch() (in module spdl.io)": [[212, "spdl.io.load_image_batch", false]], "load_image_batch_nvjpeg() (in module spdl.io)": [[213, "spdl.io.load_image_batch_nvjpeg", false]], "load_npy() (in module data_formats)": [[8, "data_formats.load_npy", false]], "load_npy() (in module spdl.io)": [[214, "spdl.io.load_npy", false]], "load_npy_spdl() (in module data_formats)": [[8, "data_formats.load_npy_spdl", false]], "load_npz() (in module spdl.io)": [[215, "spdl.io.load_npz", false]], "load_torch() (in module data_formats)": [[8, "data_formats.load_torch", false]], "load_video() (in module spdl.io)": [[216, "spdl.io.load_video", false]], "localdirectory (class in spdl.source.local_directory)": [[263, "spdl.source.local_directory.LocalDirectory", false]], "main() (in module data_formats)": [[8, "data_formats.main", false]], "main() (in module performance_analysis)": [[150, "performance_analysis.main", false]], "main() (in module streaming_nvdec_decoding)": [[268, "streaming_nvdec_decoding.main", false]], "main() (in module streaming_video_processing)": [[269, "streaming_video_processing.main", false]], "mergeiterator (class in spdl.source.utils)": [[265, "spdl.source.utils.MergeIterator", false]], "metadata (imageframes property)": [[176, "spdl.io.ImageFrames.metadata", false]], "modelbundle (class in imagenet_classification)": [[10, "imagenet_classification.ModelBundle", false]], "module": [[8, "module-data_formats", false], [9, "module-image_dataloading", false], [10, "module-imagenet_classification", false], [149, "module-multi_thread_preprocessing", false], [150, "module-performance_analysis", false], [151, "module-spdl.dataloader", false], [156, "module-spdl.io", false], [229, "module-spdl.io.utils", false], [242, "module-spdl.pipeline", false], [256, "module-spdl.source", false], [258, "module-spdl.source.imagenet", false], [262, "module-spdl.source.local_directory", false], [264, "module-spdl.source.utils", false], [268, "module-streaming_nvdec_decoding", false], [269, "module-streaming_video_processing", false], [270, "module-video_dataloading", false]], "multi_thread_preprocessing": [[149, "module-multi_thread_preprocessing", false]], "muxer (class in spdl.io)": [[178, "spdl.io.Muxer", false]], "name (audiocodec property)": [[157, "spdl.io.AudioCodec.name", false]], "name (imagecodec property)": [[174, "spdl.io.ImageCodec.name", false]], "name (videocodec property)": [[182, "spdl.io.VideoCodec.name", false]], "npzfile (class in spdl.io)": [[179, "spdl.io.NpzFile", false]], "num_batches (perfresult attribute)": [[9, "image_dataloading.PerfResult.num_batches", false], [270, "video_dataloading.PerfResult.num_batches", false]], "num_channels (audiocodec property)": [[157, "spdl.io.AudioCodec.num_channels", false]], "num_channels (audioframes property)": [[161, "spdl.io.AudioFrames.num_channels", false]], "num_channels (audiopackets property)": [[162, "spdl.io.AudioPackets.num_channels", false]], "num_failures (taskperfstats attribute)": [[250, "spdl.pipeline.TaskPerfStats.num_failures", false]], "num_frames (audioframes property)": [[161, "spdl.io.AudioFrames.num_frames", false]], "num_frames (perfresult attribute)": [[9, "image_dataloading.PerfResult.num_frames", false], [270, "video_dataloading.PerfResult.num_frames", false]], "num_frames (videoframes property)": [[186, "spdl.io.VideoFrames.num_frames", false]], "num_items (queueperfstats attribute)": [[247, "spdl.pipeline.QueuePerfStats.num_items", false]], "num_planes (imageframes property)": [[176, "spdl.io.ImageFrames.num_planes", false]], "num_planes (videoframes property)": [[186, "spdl.io.VideoFrames.num_planes", false]], "num_tasks (taskperfstats attribute)": [[250, "spdl.pipeline.TaskPerfStats.num_tasks", false]], "nv12_to_bgr() (in module spdl.io)": [[217, "spdl.io.nv12_to_bgr", false]], "nv12_to_rgb() (in module spdl.io)": [[218, "spdl.io.nv12_to_rgb", false]], "nvdec_decoder() (in module spdl.io)": [[219, "spdl.io.nvdec_decoder", false]], "nvdecdecoder (class in spdl.io)": [[180, "spdl.io.NvDecDecoder", false]], "occupancy_rate (queueperfstats attribute)": [[247, "spdl.pipeline.QueuePerfStats.occupancy_rate", false]], "open() (muxer method)": [[178, "spdl.io.Muxer.open", false]], "packets (class in spdl.io)": [[181, "spdl.io.Packets", false]], "parse_args() (in module performance_analysis)": [[150, "performance_analysis.parse_args", false]], "parse_args() (in module streaming_nvdec_decoding)": [[268, "streaming_nvdec_decoding.parse_args", false]], "parse_args() (in module streaming_video_processing)": [[269, "streaming_video_processing.parse_args", false]], "parse_wnid() (in module spdl.source.imagenet)": [[261, "spdl.source.imagenet.parse_wnid", false]], "performance_analysis": [[150, "module-performance_analysis", false]], "perfresult (class in image_dataloading)": [[9, "image_dataloading.PerfResult", false]], "perfresult (class in video_dataloading)": [[270, "video_dataloading.PerfResult", false]], "pipe() (pipelinebuilder method)": [[245, "spdl.pipeline.PipelineBuilder.pipe", false]], "pipeline (class in spdl.pipeline)": [[244, "spdl.pipeline.Pipeline", false]], "pipelinebuilder (class in spdl.pipeline)": [[245, "spdl.pipeline.PipelineBuilder", false]], "pipelinefailure": [[246, "spdl.pipeline.PipelineFailure", false]], "pix_fmt (imagecodec property)": [[174, "spdl.io.ImageCodec.pix_fmt", false]], "pix_fmt (imageframes property)": [[176, "spdl.io.ImageFrames.pix_fmt", false]], "pix_fmt (imagepackets property)": [[177, "spdl.io.ImagePackets.pix_fmt", false]], "pix_fmt (videocodec property)": [[182, "spdl.io.VideoCodec.pix_fmt", false]], "pix_fmt (videoframes property)": [[186, "spdl.io.VideoFrames.pix_fmt", false]], "pix_fmt (videopackets property)": [[187, "spdl.io.VideoPackets.pix_fmt", false]], "preprocessing (class in imagenet_classification)": [[10, "imagenet_classification.Preprocessing", false]], "process() (in module streaming_video_processing)": [[269, "streaming_video_processing.process", false]], "pts (imageframes property)": [[176, "spdl.io.ImageFrames.pts", false]], "put() (statsqueue method)": [[248, "spdl.pipeline.StatsQueue.put", false]], "pytorchdataloader (class in spdl.dataloader)": [[154, "spdl.dataloader.PyTorchDataLoader", false]], "qps (queueperfstats property)": [[247, "spdl.pipeline.QueuePerfStats.qps", false]], "queueperfstats (class in spdl.pipeline)": [[247, "spdl.pipeline.QueuePerfStats", false]], "repeat_source() (in module spdl.source.utils)": [[267, "spdl.source.utils.repeat_source", false]], "run() (in module streaming_nvdec_decoding)": [[268, "streaming_nvdec_decoding.run", false]], "run_dataloader() (in module multi_thread_preprocessing)": [[149, "multi_thread_preprocessing.run_dataloader", false]], "run_pipeline() (in module data_formats)": [[8, "data_formats.run_pipeline", false]], "run_pipeline_in_subprocess() (in module spdl.pipeline)": [[255, "spdl.pipeline.run_pipeline_in_subprocess", false]], "sample_aspect_ratio (imagecodec property)": [[174, "spdl.io.ImageCodec.sample_aspect_ratio", false]], "sample_aspect_ratio (videocodec property)": [[182, "spdl.io.VideoCodec.sample_aspect_ratio", false]], "sample_decode_video() (in module spdl.io)": [[220, "spdl.io.sample_decode_video", false]], "sample_fmt (audiocodec property)": [[157, "spdl.io.AudioCodec.sample_fmt", false]], "sample_fmt (audioframes property)": [[161, "spdl.io.AudioFrames.sample_fmt", false]], "sample_rate (audiocodec property)": [[157, "spdl.io.AudioCodec.sample_rate", false]], "sample_rate (audioframes property)": [[161, "spdl.io.AudioFrames.sample_rate", false]], "sample_rate (audiopackets property)": [[162, "spdl.io.AudioPackets.sample_rate", false]], "save_image() (in module spdl.io)": [[221, "spdl.io.save_image", false]], "set_ffmpeg_log_level() (in module spdl.io.utils)": [[236, "spdl.io.utils.set_ffmpeg_log_level", false]], "shuffle() (imagenet method)": [[259, "spdl.source.imagenet.ImageNet.shuffle", false]], "shuffle() (iterablewithshuffle method)": [[257, "spdl.source.IterableWithShuffle.shuffle", false]], "shuffle() (localdirectory method)": [[263, "spdl.source.local_directory.LocalDirectory.shuffle", false]], "source() (in module image_dataloading)": [[9, "image_dataloading.source", false]], "source() (in module video_dataloading)": [[270, "video_dataloading.source", false]], "spdl.dataloader": [[151, "module-spdl.dataloader", false]], "spdl.io": [[156, "module-spdl.io", false]], "spdl.io.utils": [[229, "module-spdl.io.utils", false]], "spdl.pipeline": [[242, "module-spdl.pipeline", false]], "spdl.source": [[256, "module-spdl.source", false]], "spdl.source.imagenet": [[258, "module-spdl.source.imagenet", false]], "spdl.source.local_directory": [[262, "module-spdl.source.local_directory", false]], "spdl.source.utils": [[264, "module-spdl.source.utils", false]], "spdl::core::anyframes (c++ type)": [[129, "_CPPv4N4spdl4core9AnyFramesE", false]], "spdl::core::anypackets (c++ type)": [[141, "_CPPv4N4spdl4core10AnyPacketsE", false]], "spdl::core::audiocodec (c++ type)": [[114, "_CPPv4N4spdl4core10AudioCodecE", false]], "spdl::core::audioencodeconfig (c++ type)": [[143, "_CPPv4N4spdl4core17AudioEncodeConfigE", false]], "spdl::core::audioencoder (c++ type)": [[122, "_CPPv4N4spdl4core12AudioEncoderE", false]], "spdl::core::audioencoderptr (c++ type)": [[119, "_CPPv4N4spdl4core15AudioEncoderPtrE", false]], "spdl::core::audioframes (c++ type)": [[127, "_CPPv4N4spdl4core11AudioFramesE", false]], "spdl::core::audioframesptr (c++ type)": [[128, "_CPPv4N4spdl4core14AudioFramesPtrE", false]], "spdl::core::audiopackets (c++ type)": [[137, "_CPPv4N4spdl4core12AudioPacketsE", false]], "spdl::core::audiopacketsptr (c++ type)": [[140, "_CPPv4N4spdl4core15AudioPacketsPtrE", false]], "spdl::core::bsf (c++ class)": [[11, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", false]], "spdl::core::bsf::bsf (c++ function)": [[11, "_CPPv4N4spdl4core3BSF3BSFERK3BSF", false], [11, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", false], [11, "_CPPv4N4spdl4core3BSF3BSFERR3BSF", false]], "spdl::core::bsf::filter (c++ function)": [[11, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", false]], "spdl::core::bsf::flush (c++ function)": [[11, "_CPPv4N4spdl4core3BSF5flushEv", false]], "spdl::core::bsf::get_codec (c++ function)": [[11, "_CPPv4NK4spdl4core3BSF9get_codecEv", false]], "spdl::core::bsf::operator= (c++ function)": [[11, "_CPPv4N4spdl4core3BSFaSERK3BSF", false], [11, "_CPPv4N4spdl4core3BSFaSERR3BSF", false]], "spdl::core::bsf::~bsf (c++ function)": [[11, "_CPPv4N4spdl4core3BSFD0Ev", false]], "spdl::core::bytesadaptor (c++ struct)": [[98, "_CPPv4N4spdl4core12BytesAdaptorE", false]], "spdl::core::bytesadaptor::get_interface (c++ function)": [[98, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", false]], "spdl::core::clone (c++ function)": [[60, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", false]], "spdl::core::codec (c++ class)": [[13, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", false]], "spdl::core::codec::codec (c++ function)": [[13, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", false], [13, "_CPPv4N4spdl4core5Codec5CodecERK5CodecI5mediaE", false], [13, "_CPPv4N4spdl4core5Codec5CodecERR5CodecI5mediaE", false], [13, "_CPPv4N4spdl4core5Codec5CodecEv", false]], "spdl::core::codec::get_bit_rate (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec12get_bit_rateEv", false]], "spdl::core::codec::get_bits_per_sample (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec19get_bits_per_sampleEv", false]], "spdl::core::codec::get_channel_layout (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec18get_channel_layoutEv", false]], "spdl::core::codec::get_codec_id (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec12get_codec_idEv", false]], "spdl::core::codec::get_frame_rate (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec14get_frame_rateEv", false]], "spdl::core::codec::get_height (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec10get_heightEv", false]], "spdl::core::codec::get_name (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec8get_nameEv", false]], "spdl::core::codec::get_num_channels (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec16get_num_channelsEv", false]], "spdl::core::codec::get_parameters (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec14get_parametersEv", false]], "spdl::core::codec::get_pix_fmt (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec11get_pix_fmtEv", false]], "spdl::core::codec::get_sample_aspect_ratio (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec23get_sample_aspect_ratioEv", false]], "spdl::core::codec::get_sample_fmt (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec14get_sample_fmtEv", false]], "spdl::core::codec::get_sample_rate (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec15get_sample_rateEv", false]], "spdl::core::codec::get_time_base (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec13get_time_baseEv", false]], "spdl::core::codec::get_width (c++ function)": [[13, "_CPPv4NK4spdl4core5Codec9get_widthEv", false]], "spdl::core::codec::operator= (c++ function)": [[13, "_CPPv4N4spdl4core5CodecaSERK5CodecI5mediaE", false], [13, "_CPPv4N4spdl4core5CodecaSERR5CodecI5mediaE", false]], "spdl::core::codec::~codec (c++ function)": [[13, "_CPPv4N4spdl4core5CodecD0Ev", false]], "spdl::core::codecid (c++ enum)": [[33, "_CPPv4N4spdl4core7CodecIDE", false]], "spdl::core::codecid::av1 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID3AV1E", false]], "spdl::core::codecid::h264 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID4H264E", false]], "spdl::core::codecid::hevc (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID4HEVCE", false]], "spdl::core::codecid::mjpeg (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID5MJPEGE", false]], "spdl::core::codecid::mpeg1video (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID10MPEG1VIDEOE", false]], "spdl::core::codecid::mpeg2video (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID10MPEG2VIDEOE", false]], "spdl::core::codecid::mpeg4 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID5MPEG4E", false]], "spdl::core::codecid::vc1 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID3VC1E", false]], "spdl::core::codecid::vp8 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID3VP8E", false]], "spdl::core::codecid::vp9 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID3VP9E", false]], "spdl::core::codecid::wmv3 (c++ enumerator)": [[33, "_CPPv4N4spdl4core7CodecID4WMV3E", false]], "spdl::core::convert_frames (c++ function)": [[54, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", false], [56, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", false]], "spdl::core::cpu_buffer (c++ function)": [[52, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", false]], "spdl::core::cpubuffer (c++ struct)": [[99, "_CPPv4N4spdl4core9CPUBufferE", false]], "spdl::core::cpubuffer::data (c++ function)": [[99, "_CPPv4N4spdl4core9CPUBuffer4dataEv", false]], "spdl::core::cpubuffer::depth (c++ member)": [[99, "_CPPv4N4spdl4core9CPUBuffer5depthE", false]], "spdl::core::cpubuffer::elem_class (c++ member)": [[99, "_CPPv4N4spdl4core9CPUBuffer10elem_classE", false]], "spdl::core::cpubuffer::shape (c++ member)": [[99, "_CPPv4N4spdl4core9CPUBuffer5shapeE", false]], "spdl::core::cpubuffer::storage (c++ member)": [[99, "_CPPv4N4spdl4core9CPUBuffer7storageE", false]], "spdl::core::cpubufferptr (c++ type)": [[112, "_CPPv4N4spdl4core12CPUBufferPtrE", false]], "spdl::core::cpustorage (c++ class)": [[12, "_CPPv4N4spdl4core10CPUStorageE", false]], "spdl::core::cpustorage::cpustorage (c++ function)": [[12, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", false], [12, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERK10CPUStorage", false], [12, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERR10CPUStorage", false], [12, "_CPPv4N4spdl4core10CPUStorage10CPUStorageEv", false]], "spdl::core::cpustorage::data (c++ function)": [[12, "_CPPv4NK4spdl4core10CPUStorage4dataEv", false]], "spdl::core::cpustorage::is_pinned (c++ function)": [[12, "_CPPv4NK4spdl4core10CPUStorage9is_pinnedEv", false]], "spdl::core::cpustorage::operator= (c++ function)": [[12, "_CPPv4N4spdl4core10CPUStorageaSERK10CPUStorage", false], [12, "_CPPv4N4spdl4core10CPUStorageaSERR10CPUStorage", false]], "spdl::core::cpustorage::size (c++ member)": [[12, "_CPPv4N4spdl4core10CPUStorage4sizeE", false]], "spdl::core::cpustorage::~cpustorage (c++ function)": [[12, "_CPPv4N4spdl4core10CPUStorageD0Ev", false]], "spdl::core::create_reference_audio_frame (c++ function)": [[53, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", false]], "spdl::core::create_reference_video_frame (c++ function)": [[55, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", false]], "spdl::core::datainterface (c++ struct)": [[100, "_CPPv4N4spdl4core13DataInterfaceE", false]], "spdl::core::datainterface::get_fmt_ctx (c++ function)": [[100, "_CPPv4N4spdl4core13DataInterface11get_fmt_ctxEv", false]], "spdl::core::datainterface::~datainterface (c++ function)": [[100, "_CPPv4N4spdl4core13DataInterfaceD0Ev", false]], "spdl::core::datainterfaceptr (c++ type)": [[110, "_CPPv4N4spdl4core16DataInterfacePtrE", false]], "spdl::core::decodeconfig (c++ struct)": [[101, "_CPPv4N4spdl4core12DecodeConfigE", false]], "spdl::core::decodeconfig::decoder (c++ member)": [[101, "_CPPv4N4spdl4core12DecodeConfig7decoderE", false]], "spdl::core::decodeconfig::decoder_options (c++ member)": [[101, "_CPPv4N4spdl4core12DecodeConfig15decoder_optionsE", false]], "spdl::core::decoder (c++ class)": [[14, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", false]], "spdl::core::decoder::decode (c++ function)": [[14, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", false]], "spdl::core::decoder::decode_and_flush (c++ function)": [[14, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", false]], "spdl::core::decoder::decoder (c++ function)": [[14, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", false], [14, "_CPPv4N4spdl4core7Decoder7DecoderERK7Decoder", false], [14, "_CPPv4N4spdl4core7Decoder7DecoderERR7Decoder", false]], "spdl::core::decoder::flush (c++ function)": [[14, "_CPPv4N4spdl4core7Decoder5flushEv", false]], "spdl::core::decoder::operator= (c++ function)": [[14, "_CPPv4N4spdl4core7DecoderaSERK7Decoder", false], [14, "_CPPv4N4spdl4core7DecoderaSERR7Decoder", false]], "spdl::core::decoder::~decoder (c++ function)": [[14, "_CPPv4N4spdl4core7DecoderD0Ev", false]], "spdl::core::decoderptr (c++ type)": [[116, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", false]], "spdl::core::demuxconfig (c++ struct)": [[102, "_CPPv4N4spdl4core11DemuxConfigE", false]], "spdl::core::demuxconfig::buffer_size (c++ member)": [[102, "_CPPv4N4spdl4core11DemuxConfig11buffer_sizeE", false]], "spdl::core::demuxconfig::format (c++ member)": [[102, "_CPPv4N4spdl4core11DemuxConfig6formatE", false]], "spdl::core::demuxconfig::format_options (c++ member)": [[102, "_CPPv4N4spdl4core11DemuxConfig14format_optionsE", false]], "spdl::core::demuxer (c++ class)": [[15, "_CPPv4N4spdl4core7DemuxerE", false]], "spdl::core::demuxer::demux_window (c++ function)": [[15, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", false]], "spdl::core::demuxer::demuxer (c++ function)": [[15, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", false]], "spdl::core::demuxer::get_default_codec (c++ function)": [[15, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", false]], "spdl::core::demuxer::get_default_stream_index (c++ function)": [[15, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", false]], "spdl::core::demuxer::has_audio (c++ function)": [[15, "_CPPv4NK4spdl4core7Demuxer9has_audioEv", false]], "spdl::core::demuxer::streaming_demux (c++ function)": [[15, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", false]], "spdl::core::demuxer::~demuxer (c++ function)": [[15, "_CPPv4N4spdl4core7DemuxerD0Ev", false]], "spdl::core::demuxerptr (c++ type)": [[118, "_CPPv4N4spdl4core10DemuxerPtrE", false]], "spdl::core::detail::decoderimpl (c++ class)": [[24, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", false]], "spdl::core::detail::encoderimpl (c++ class)": [[25, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", false]], "spdl::core::elemclass (c++ enum)": [[35, "_CPPv4N4spdl4core9ElemClassE", false]], "spdl::core::elemclass::float (c++ enumerator)": [[35, "_CPPv4N4spdl4core9ElemClass5FloatE", false]], "spdl::core::elemclass::int (c++ enumerator)": [[35, "_CPPv4N4spdl4core9ElemClass3IntE", false]], "spdl::core::elemclass::uint (c++ enumerator)": [[35, "_CPPv4N4spdl4core9ElemClass4UIntE", false]], "spdl::core::encodeconfigbase (c++ struct)": [[103, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", false]], "spdl::core::encoder (c++ class)": [[16, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", false]], "spdl::core::encoder::encode (c++ function)": [[16, "_CPPv4N4spdl4core7Encoder6encodeERRK9FramesPtrI5mediaE", false]], "spdl::core::encoder::encoder (c++ function)": [[16, "_CPPv4N4spdl4core7Encoder7EncoderEPN6detail11EncoderImplI5mediaEE", false], [16, "_CPPv4N4spdl4core7Encoder7EncoderERK7EncoderI5mediaE", false], [16, "_CPPv4N4spdl4core7Encoder7EncoderERR7EncoderI5mediaE", false]], "spdl::core::encoder::flush (c++ function)": [[16, "_CPPv4N4spdl4core7Encoder5flushEv", false]], "spdl::core::encoder::get_frame_size (c++ function)": [[16, "_CPPv4NK4spdl4core7Encoder14get_frame_sizeEv", false]], "spdl::core::encoder::operator= (c++ function)": [[16, "_CPPv4N4spdl4core7EncoderaSERK7EncoderI5mediaE", false], [16, "_CPPv4N4spdl4core7EncoderaSERR7EncoderI5mediaE", false]], "spdl::core::encoder::~encoder (c++ function)": [[16, "_CPPv4N4spdl4core7EncoderD0Ev", false]], "spdl::core::encoderptr (c++ type)": [[123, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", false]], "spdl::core::extract_packets_at_indices (c++ function)": [[62, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", false]], "spdl::core::filtergraph (c++ class)": [[17, "_CPPv4N4spdl4core11FilterGraphE", false]], "spdl::core::filtergraph::add_frames (c++ function)": [[17, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", false]], "spdl::core::filtergraph::dump (c++ function)": [[17, "_CPPv4NK4spdl4core11FilterGraph4dumpEv", false]], "spdl::core::filtergraph::filtergraph (c++ function)": [[17, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERK11FilterGraph", false], [17, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", false], [17, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERR11FilterGraph", false]], "spdl::core::filtergraph::flush (c++ function)": [[17, "_CPPv4N4spdl4core11FilterGraph5flushEv", false]], "spdl::core::filtergraph::get_frames (c++ function)": [[17, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", false]], "spdl::core::filtergraph::operator= (c++ function)": [[17, "_CPPv4N4spdl4core11FilterGraphaSERK11FilterGraph", false], [17, "_CPPv4N4spdl4core11FilterGraphaSERR11FilterGraph", false]], "spdl::core::filtergraph::~filtergraph (c++ function)": [[17, "_CPPv4N4spdl4core11FilterGraphD0Ev", false]], "spdl::core::filtergraphptr (c++ type)": [[124, "_CPPv4N4spdl4core14FilterGraphPtrE", false]], "spdl::core::frames (c++ class)": [[18, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", false]], "spdl::core::framesptr (c++ type)": [[131, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", false]], "spdl::core::generator (c++ struct)": [[104, "_CPPv4I0EN4spdl4core9GeneratorE", false]], "spdl::core::generator::generator (c++ function)": [[104, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", false], [104, "_CPPv4N4spdl4core9Generator9GeneratorERK9Generator", false], [104, "_CPPv4N4spdl4core9Generator9GeneratorERR9Generator", false]], "spdl::core::generator::h_ (c++ member)": [[104, "_CPPv4N4spdl4core9Generator2h_E", false]], "spdl::core::generator::handle_type (c++ type)": [[104, "_CPPv4N4spdl4core9Generator11handle_typeE", false]], "spdl::core::generator::operator bool (c++ function)": [[104, "_CPPv4N4spdl4core9GeneratorcvbEv", false]], "spdl::core::generator::operator() (c++ function)": [[104, "_CPPv4N4spdl4core9GeneratorclEv", false]], "spdl::core::generator::operator= (c++ function)": [[104, "_CPPv4N4spdl4core9GeneratoraSERK9Generator", false], [104, "_CPPv4N4spdl4core9GeneratoraSERR9Generator", false]], "spdl::core::generator::promise_type (c++ struct)": [[104, "_CPPv4N4spdl4core9Generator12promise_typeE", false], [105, "_CPPv4N4spdl4core9Generator12promise_typeE", false]], "spdl::core::generator::promise_type::exception (c++ member)": [[104, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", false], [105, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", false]], "spdl::core::generator::promise_type::final_suspend (c++ function)": [[104, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", false], [105, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", false]], "spdl::core::generator::promise_type::get_return_object (c++ function)": [[104, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", false], [105, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", false]], "spdl::core::generator::promise_type::initial_suspend (c++ function)": [[104, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", false], [105, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", false]], "spdl::core::generator::promise_type::return_void (c++ function)": [[104, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", false], [105, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", false]], "spdl::core::generator::promise_type::unhandled_exception (c++ function)": [[104, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", false], [105, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", false]], "spdl::core::generator::promise_type::value (c++ member)": [[104, "_CPPv4N4spdl4core9Generator12promise_type5valueE", false], [105, "_CPPv4N4spdl4core9Generator12promise_type5valueE", false]], "spdl::core::generator::promise_type::yield_value (c++ function)": [[104, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", false], [105, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", false]], "spdl::core::generator::~generator (c++ function)": [[104, "_CPPv4N4spdl4core9GeneratorD0Ev", false]], "spdl::core::get_ffmpeg_filters (c++ function)": [[63, "_CPPv4N4spdl4core18get_ffmpeg_filtersEv", false]], "spdl::core::get_ffmpeg_log_level (c++ function)": [[70, "_CPPv4N4spdl4core20get_ffmpeg_log_levelEv", false]], "spdl::core::get_ffmpeg_versions (c++ function)": [[64, "_CPPv4N4spdl4core19get_ffmpeg_versionsEv", false]], "spdl::core::get_pts (c++ function)": [[61, "_CPPv4I_9MediaTypeEN4spdl4core7get_ptsENSt8optionalINSt5tupleIddEEEERK7PacketsI5mediaE", false]], "spdl::core::imagecodec (c++ type)": [[113, "_CPPv4N4spdl4core10ImageCodecE", false]], "spdl::core::imageframes (c++ type)": [[126, "_CPPv4N4spdl4core11ImageFramesE", false]], "spdl::core::imageframesptr (c++ type)": [[125, "_CPPv4N4spdl4core14ImageFramesPtrE", false]], "spdl::core::imagepackets (c++ type)": [[142, "_CPPv4N4spdl4core12ImagePacketsE", false]], "spdl::core::imagepacketsptr (c++ type)": [[136, "_CPPv4N4spdl4core15ImagePacketsPtrE", false]], "spdl::core::init_glog (c++ function)": [[72, "_CPPv4N4spdl4core9init_glogEPKc", false]], "spdl::core::init_tracing (c++ function)": [[69, "_CPPv4N4spdl4core12init_tracingEv", false]], "spdl::core::internalerror (c++ class)": [[19, "_CPPv4N4spdl4core13InternalErrorE", false]], "spdl::core::make_demuxer (c++ function)": [[57, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", false], [58, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", false]], "spdl::core::make_filter_graph (c++ function)": [[59, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", false]], "spdl::core::mediatype (c++ enum)": [[34, "_CPPv4N4spdl4core9MediaTypeE", false]], "spdl::core::mediatype::audio (c++ enumerator)": [[34, "_CPPv4N4spdl4core9MediaType5AudioE", false]], "spdl::core::mediatype::image (c++ enumerator)": [[34, "_CPPv4N4spdl4core9MediaType5ImageE", false]], "spdl::core::mediatype::video (c++ enumerator)": [[34, "_CPPv4N4spdl4core9MediaType5VideoE", false]], "spdl::core::muxer (c++ class)": [[20, "_CPPv4N4spdl4core5MuxerE", false]], "spdl::core::muxer::add_encode_stream (c++ function)": [[20, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", false]], "spdl::core::muxer::add_remux_stream (c++ function)": [[20, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", false]], "spdl::core::muxer::close (c++ function)": [[20, "_CPPv4N4spdl4core5Muxer5closeEv", false]], "spdl::core::muxer::flush (c++ function)": [[20, "_CPPv4N4spdl4core5Muxer5flushEv", false]], "spdl::core::muxer::muxer (c++ function)": [[20, "_CPPv4N4spdl4core5Muxer5MuxerERK5Muxer", false], [20, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", false], [20, "_CPPv4N4spdl4core5Muxer5MuxerERR5Muxer", false]], "spdl::core::muxer::open (c++ function)": [[20, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", false]], "spdl::core::muxer::operator= (c++ function)": [[20, "_CPPv4N4spdl4core5MuxeraSERK5Muxer", false], [20, "_CPPv4N4spdl4core5MuxeraSERR5Muxer", false]], "spdl::core::muxer::write (c++ function)": [[20, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", false]], "spdl::core::muxer::~muxer (c++ function)": [[20, "_CPPv4N4spdl4core5MuxerD0Ev", false]], "spdl::core::muxerptr (c++ type)": [[133, "_CPPv4N4spdl4core8MuxerPtrE", false]], "spdl::core::optiondict (c++ type)": [[147, "_CPPv4N4spdl4core10OptionDictE", false]], "spdl::core::packets (c++ struct)": [[106, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", false]], "spdl::core::packets::codec (c++ member)": [[106, "_CPPv4N4spdl4core7Packets5codecE", false]], "spdl::core::packets::id (c++ member)": [[106, "_CPPv4N4spdl4core7Packets2idE", false]], "spdl::core::packets::operator= (c++ function)": [[106, "_CPPv4N4spdl4core7PacketsaSERK7PacketsI5mediaE", false], [106, "_CPPv4N4spdl4core7PacketsaSERR7PacketsI5mediaE", false]], "spdl::core::packets::packets (c++ function)": [[106, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", false], [106, "_CPPv4N4spdl4core7Packets7PacketsERK7PacketsI5mediaE", false], [106, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", false], [106, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", false], [106, "_CPPv4N4spdl4core7Packets7PacketsERR7PacketsI5mediaE", false], [106, "_CPPv4N4spdl4core7Packets7PacketsEv", false]], "spdl::core::packets::pkts (c++ member)": [[106, "_CPPv4N4spdl4core7Packets4pktsE", false]], "spdl::core::packets::src (c++ member)": [[106, "_CPPv4N4spdl4core7Packets3srcE", false]], "spdl::core::packets::stream_index (c++ member)": [[106, "_CPPv4N4spdl4core7Packets12stream_indexE", false]], "spdl::core::packets::time_base (c++ member)": [[106, "_CPPv4N4spdl4core7Packets9time_baseE", false]], "spdl::core::packets::timestamp (c++ member)": [[106, "_CPPv4N4spdl4core7Packets9timestampE", false]], "spdl::core::packets::~packets (c++ function)": [[106, "_CPPv4N4spdl4core7PacketsD0Ev", false]], "spdl::core::packetseries (c++ class)": [[21, "_CPPv4N4spdl4core12PacketSeriesE", false]], "spdl::core::packetseries::get_packets (c++ function)": [[21, "_CPPv4NK4spdl4core12PacketSeries11get_packetsEv", false]], "spdl::core::packetseries::iter_data (c++ function)": [[21, "_CPPv4NK4spdl4core12PacketSeries9iter_dataEv", false]], "spdl::core::packetseries::operator= (c++ function)": [[21, "_CPPv4N4spdl4core12PacketSeriesaSERK12PacketSeries", false], [21, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", false]], "spdl::core::packetseries::packetseries (c++ function)": [[21, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERK12PacketSeries", false], [21, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", false], [21, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesEv", false]], "spdl::core::packetseries::push (c++ function)": [[21, "_CPPv4N4spdl4core12PacketSeries4pushEP8AVPacket", false]], "spdl::core::packetseries::~packetseries (c++ function)": [[21, "_CPPv4N4spdl4core12PacketSeriesD0Ev", false]], "spdl::core::packetseriesptr (c++ type)": [[134, "_CPPv4N4spdl4core15PacketSeriesPtrE", false]], "spdl::core::packetsptr (c++ type)": [[139, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", false]], "spdl::core::rational (c++ type)": [[146, "_CPPv4N4spdl4core8RationalE", false]], "spdl::core::rawpacketdata (c++ struct)": [[107, "_CPPv4N4spdl4core13RawPacketDataE", false]], "spdl::core::rawpacketdata::data (c++ member)": [[107, "_CPPv4N4spdl4core13RawPacketData4dataE", false]], "spdl::core::rawpacketdata::pts (c++ member)": [[107, "_CPPv4N4spdl4core13RawPacketData3ptsE", false]], "spdl::core::rawpacketdata::size (c++ member)": [[107, "_CPPv4N4spdl4core13RawPacketData4sizeE", false]], "spdl::core::register_avdevices (c++ function)": [[68, "_CPPv4N4spdl4core18register_avdevicesEv", false]], "spdl::core::set_ffmpeg_log_level (c++ function)": [[67, "_CPPv4N4spdl4core20set_ffmpeg_log_levelEi", false]], "spdl::core::sourceadaptor (c++ struct)": [[108, "_CPPv4N4spdl4core13SourceAdaptorE", false]], "spdl::core::sourceadaptor::get_interface (c++ function)": [[108, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", false]], "spdl::core::sourceadaptor::~sourceadaptor (c++ function)": [[108, "_CPPv4N4spdl4core13SourceAdaptorD0Ev", false]], "spdl::core::sourceadaptorptr (c++ type)": [[111, "_CPPv4N4spdl4core16SourceAdaptorPtrE", false]], "spdl::core::storage (c++ struct)": [[109, "_CPPv4N4spdl4core7StorageE", false]], "spdl::core::storage::data (c++ function)": [[109, "_CPPv4NK4spdl4core7Storage4dataEv", false]], "spdl::core::storage::~storage (c++ function)": [[109, "_CPPv4N4spdl4core7StorageD0Ev", false]], "spdl::core::streamingdemuxer (c++ class)": [[22, "_CPPv4N4spdl4core16StreamingDemuxerE", false]], "spdl::core::streamingdemuxer::done (c++ function)": [[22, "_CPPv4N4spdl4core16StreamingDemuxer4doneEv", false]], "spdl::core::streamingdemuxer::next (c++ function)": [[22, "_CPPv4N4spdl4core16StreamingDemuxer4nextEv", false]], "spdl::core::streamingdemuxer::streamingdemuxer (c++ function)": [[22, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", false]], "spdl::core::streamingdemuxerptr (c++ type)": [[117, "_CPPv4N4spdl4core19StreamingDemuxerPtrE", false]], "spdl::core::trace_counter (c++ function)": [[65, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", false]], "spdl::core::trace_event_begin (c++ function)": [[71, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", false]], "spdl::core::trace_event_end (c++ function)": [[66, "_CPPv4N4spdl4core15trace_event_endEv", false]], "spdl::core::tracingsession (c++ class)": [[23, "_CPPv4N4spdl4core14TracingSessionE", false]], "spdl::core::tracingsession::config (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", false]], "spdl::core::tracingsession::init (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSession4initEv", false]], "spdl::core::tracingsession::operator= (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSessionaSERK14TracingSession", false], [23, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", false]], "spdl::core::tracingsession::start (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSession5startEii", false]], "spdl::core::tracingsession::stop (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSession4stopEv", false]], "spdl::core::tracingsession::tracingsession (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", false], [23, "_CPPv4N4spdl4core14TracingSession14TracingSessionERK14TracingSession", false], [23, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", false]], "spdl::core::tracingsession::~tracingsession (c++ function)": [[23, "_CPPv4N4spdl4core14TracingSessionD0Ev", false]], "spdl::core::videocodec (c++ type)": [[115, "_CPPv4N4spdl4core10VideoCodecE", false]], "spdl::core::videoencodeconfig (c++ type)": [[145, "_CPPv4N4spdl4core17VideoEncodeConfigE", false]], "spdl::core::videoencoder (c++ type)": [[120, "_CPPv4N4spdl4core12VideoEncoderE", false]], "spdl::core::videoencoderptr (c++ type)": [[121, "_CPPv4N4spdl4core15VideoEncoderPtrE", false]], "spdl::core::videoframes (c++ type)": [[132, "_CPPv4N4spdl4core11VideoFramesE", false]], "spdl::core::videoframesptr (c++ type)": [[130, "_CPPv4N4spdl4core14VideoFramesPtrE", false]], "spdl::core::videopackets (c++ type)": [[135, "_CPPv4N4spdl4core12VideoPacketsE", false]], "spdl::core::videopacketsptr (c++ type)": [[138, "_CPPv4N4spdl4core15VideoPacketsPtrE", false]], "spdl_default_buffer_size (c macro)": [[29, "c.SPDL_DEFAULT_BUFFER_SIZE", false]], "stage_hook() (asyncqueue method)": [[243, "spdl.pipeline.AsyncQueue.stage_hook", false]], "stage_hook() (statsqueue method)": [[248, "spdl.pipeline.StatsQueue.stage_hook", false]], "stage_hook() (taskhook method)": [[249, "spdl.pipeline.TaskHook.stage_hook", false]], "stage_hook() (taskstatshook method)": [[251, "spdl.pipeline.TaskStatsHook.stage_hook", false]], "start() (pipeline method)": [[244, "spdl.pipeline.Pipeline.start", false]], "statsqueue (class in spdl.pipeline)": [[248, "spdl.pipeline.StatsQueue", false]], "stop() (pipeline method)": [[244, "spdl.pipeline.Pipeline.stop", false]], "streaming_demux() (demuxer method)": [[171, "spdl.io.Demuxer.streaming_demux", false]], "streaming_load_video_nvdec() (in module spdl.io)": [[222, "spdl.io.streaming_load_video_nvdec", false]], "streaming_nvdec_decoding": [[268, "module-streaming_nvdec_decoding", false]], "streaming_video_processing": [[269, "module-streaming_video_processing", false]], "task_hook() (taskhook method)": [[249, "spdl.pipeline.TaskHook.task_hook", false]], "task_hook() (taskstatshook method)": [[251, "spdl.pipeline.TaskStatsHook.task_hook", false]], "taskhook (class in spdl.pipeline)": [[249, "spdl.pipeline.TaskHook", false]], "taskperfstats (class in spdl.pipeline)": [[250, "spdl.pipeline.TaskPerfStats", false]], "taskstatshook (class in spdl.pipeline)": [[251, "spdl.pipeline.TaskStatsHook", false]], "time_base (audiocodec property)": [[157, "spdl.io.AudioCodec.time_base", false]], "time_base (imagecodec property)": [[174, "spdl.io.ImageCodec.time_base", false]], "time_base (videocodec property)": [[182, "spdl.io.VideoCodec.time_base", false]], "timestamp (audiopackets property)": [[162, "spdl.io.AudioPackets.timestamp", false]], "timestamp (videopackets property)": [[187, "spdl.io.VideoPackets.timestamp", false]], "to_jax() (in module spdl.io)": [[223, "spdl.io.to_jax", false]], "to_numba() (in module spdl.io)": [[224, "spdl.io.to_numba", false]], "to_numpy() (in module spdl.io)": [[225, "spdl.io.to_numpy", false]], "to_torch() (in module spdl.io)": [[226, "spdl.io.to_torch", false]], "torch_cuda_warmup() (in module streaming_nvdec_decoding)": [[268, "streaming_nvdec_decoding.torch_cuda_warmup", false]], "trace_counter() (in module spdl.io.utils)": [[237, "spdl.io.utils.trace_counter", false]], "trace_event() (in module spdl.io.utils)": [[238, "spdl.io.utils.trace_event", false]], "trace_gc() (in module spdl.io.utils)": [[239, "spdl.io.utils.trace_gc", false]], "tracing() (in module spdl.io.utils)": [[240, "spdl.io.utils.tracing", false]], "transfer_buffer() (in module spdl.io)": [[227, "spdl.io.transfer_buffer", false]], "transfer_buffer_cpu() (in module spdl.io)": [[228, "spdl.io.transfer_buffer_cpu", false]], "video_codec (demuxer property)": [[171, "spdl.io.Demuxer.video_codec", false]], "video_dataloading": [[270, "module-video_dataloading", false]], "video_encode_config() (in module spdl.io)": [[241, "spdl.io.video_encode_config", false]], "video_stream_index (demuxer property)": [[171, "spdl.io.Demuxer.video_stream_index", false]], "videocodec (class in spdl.io)": [[182, "spdl.io.VideoCodec", false]], "videodecoder (class in spdl.io)": [[183, "spdl.io.VideoDecoder", false]], "videoencodeconfig (class in spdl.io)": [[184, "spdl.io.VideoEncodeConfig", false]], "videoencoder (class in spdl.io)": [[185, "spdl.io.VideoEncoder", false]], "videoframes (class in spdl.io)": [[186, "spdl.io.VideoFrames", false]], "videopackets (class in spdl.io)": [[187, "spdl.io.VideoPackets", false]], "width (imagecodec property)": [[174, "spdl.io.ImageCodec.width", false]], "width (imageframes property)": [[176, "spdl.io.ImageFrames.width", false]], "width (imagepackets property)": [[177, "spdl.io.ImagePackets.width", false]], "width (videocodec property)": [[182, "spdl.io.VideoCodec.width", false]], "width (videoframes property)": [[186, "spdl.io.VideoFrames.width", false]], "width (videopackets property)": [[187, "spdl.io.VideoPackets.width", false]], "worker_entrypoint() (in module image_dataloading)": [[9, "image_dataloading.worker_entrypoint", false]], "worker_entrypoint() (in module video_dataloading)": [[270, "video_dataloading.worker_entrypoint", false]], "write() (muxer method)": [[178, "spdl.io.Muxer.write", false]]}, "objects": {"": [[29, 0, 1, "c.SPDL_DEFAULT_BUFFER_SIZE", "SPDL_DEFAULT_BUFFER_SIZE"], [27, 0, 1, "c._IS_AUDIO", "_IS_AUDIO"], [28, 0, 1, "c._IS_IMAGE", "_IS_IMAGE"], [26, 0, 1, "c._IS_VIDEO", "_IS_VIDEO"], [97, 1, 1, "_CPPv410AVRational", "AVRational"], [144, 2, 1, "_CPPv410AVRational", "AVRational"], [97, 3, 1, "_CPPv4N10AVRational3denE", "AVRational::den"], [97, 3, 1, "_CPPv4N10AVRational3numE", "AVRational::num"], [129, 2, 1, "_CPPv4N4spdl4core9AnyFramesE", "spdl::core::AnyFrames"], [141, 2, 1, "_CPPv4N4spdl4core10AnyPacketsE", "spdl::core::AnyPackets"], [114, 2, 1, "_CPPv4N4spdl4core10AudioCodecE", "spdl::core::AudioCodec"], [143, 2, 1, "_CPPv4N4spdl4core17AudioEncodeConfigE", "spdl::core::AudioEncodeConfig"], [122, 2, 1, "_CPPv4N4spdl4core12AudioEncoderE", "spdl::core::AudioEncoder"], [119, 2, 1, "_CPPv4N4spdl4core15AudioEncoderPtrE", "spdl::core::AudioEncoderPtr"], [127, 2, 1, "_CPPv4N4spdl4core11AudioFramesE", "spdl::core::AudioFrames"], [128, 2, 1, "_CPPv4N4spdl4core14AudioFramesPtrE", "spdl::core::AudioFramesPtr"], [137, 2, 1, "_CPPv4N4spdl4core12AudioPacketsE", "spdl::core::AudioPackets"], [140, 2, 1, "_CPPv4N4spdl4core15AudioPacketsPtrE", "spdl::core::AudioPacketsPtr"], [11, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", "spdl::core::BSF"], [11, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERK3BSF", "spdl::core::BSF::BSF"], [11, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF"], [11, 4, 1, "_CPPv4N4spdl4core3BSF3BSFERR3BSF", "spdl::core::BSF::BSF"], [11, 5, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF::bsf"], [11, 5, 1, "_CPPv4N4spdl4core3BSF3BSFERK5CodecI5mediaERKNSt6stringE", "spdl::core::BSF::BSF::codec"], [11, 4, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter"], [11, 5, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter::flush"], [11, 5, 1, "_CPPv4N4spdl4core3BSF6filterE10PacketsPtrI5mediaEb", "spdl::core::BSF::filter::packets"], [11, 4, 1, "_CPPv4N4spdl4core3BSF5flushEv", "spdl::core::BSF::flush"], [11, 4, 1, "_CPPv4NK4spdl4core3BSF9get_codecEv", "spdl::core::BSF::get_codec"], [11, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core3BSFE", "spdl::core::BSF::media"], [11, 4, 1, "_CPPv4N4spdl4core3BSFaSERK3BSF", "spdl::core::BSF::operator="], [11, 4, 1, "_CPPv4N4spdl4core3BSFaSERR3BSF", "spdl::core::BSF::operator="], [11, 4, 1, "_CPPv4N4spdl4core3BSFD0Ev", "spdl::core::BSF::~BSF"], [98, 1, 1, "_CPPv4N4spdl4core12BytesAdaptorE", "spdl::core::BytesAdaptor"], [98, 4, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface"], [98, 5, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface::data"], [98, 5, 1, "_CPPv4NK4spdl4core12BytesAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::BytesAdaptor::get_interface::dmx_cfg"], [99, 1, 1, "_CPPv4N4spdl4core9CPUBufferE", "spdl::core::CPUBuffer"], [99, 4, 1, "_CPPv4N4spdl4core9CPUBuffer4dataEv", "spdl::core::CPUBuffer::data"], [99, 3, 1, "_CPPv4N4spdl4core9CPUBuffer5depthE", "spdl::core::CPUBuffer::depth"], [99, 3, 1, "_CPPv4N4spdl4core9CPUBuffer10elem_classE", "spdl::core::CPUBuffer::elem_class"], [99, 3, 1, "_CPPv4N4spdl4core9CPUBuffer5shapeE", "spdl::core::CPUBuffer::shape"], [99, 3, 1, "_CPPv4N4spdl4core9CPUBuffer7storageE", "spdl::core::CPUBuffer::storage"], [112, 2, 1, "_CPPv4N4spdl4core12CPUBufferPtrE", "spdl::core::CPUBufferPtr"], [12, 1, 1, "_CPPv4N4spdl4core10CPUStorageE", "spdl::core::CPUStorage"], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage"], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERK10CPUStorage", "spdl::core::CPUStorage::CPUStorage"], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageERR10CPUStorage", "spdl::core::CPUStorage::CPUStorage"], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageEv", "spdl::core::CPUStorage::CPUStorage"], [12, 5, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage::pin_memory"], [12, 5, 1, "_CPPv4N4spdl4core10CPUStorage10CPUStorageE6size_t14allocator_type16deallocator_typeb", "spdl::core::CPUStorage::CPUStorage::size"], [12, 4, 1, "_CPPv4NK4spdl4core10CPUStorage4dataEv", "spdl::core::CPUStorage::data"], [12, 4, 1, "_CPPv4NK4spdl4core10CPUStorage9is_pinnedEv", "spdl::core::CPUStorage::is_pinned"], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorageaSERK10CPUStorage", "spdl::core::CPUStorage::operator="], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorageaSERR10CPUStorage", "spdl::core::CPUStorage::operator="], [12, 3, 1, "_CPPv4N4spdl4core10CPUStorage4sizeE", "spdl::core::CPUStorage::size"], [12, 4, 1, "_CPPv4N4spdl4core10CPUStorageD0Ev", "spdl::core::CPUStorage::~CPUStorage"], [13, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", "spdl::core::Codec"], [13, 4, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec"], [13, 4, 1, "_CPPv4N4spdl4core5Codec5CodecERK5CodecI5mediaE", "spdl::core::Codec::Codec"], [13, 4, 1, "_CPPv4N4spdl4core5Codec5CodecERR5CodecI5mediaE", "spdl::core::Codec::Codec"], [13, 4, 1, "_CPPv4N4spdl4core5Codec5CodecEv", "spdl::core::Codec::Codec"], [13, 5, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec::frame_rate"], [13, 5, 1, "_CPPv4N4spdl4core5Codec5CodecEPK17AVCodecParameters8Rational8Rational", "spdl::core::Codec::Codec::time_base"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec12get_bit_rateEv", "spdl::core::Codec::get_bit_rate"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec19get_bits_per_sampleEv", "spdl::core::Codec::get_bits_per_sample"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec18get_channel_layoutEv", "spdl::core::Codec::get_channel_layout"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec12get_codec_idEv", "spdl::core::Codec::get_codec_id"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec14get_frame_rateEv", "spdl::core::Codec::get_frame_rate"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec10get_heightEv", "spdl::core::Codec::get_height"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec8get_nameEv", "spdl::core::Codec::get_name"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec16get_num_channelsEv", "spdl::core::Codec::get_num_channels"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec14get_parametersEv", "spdl::core::Codec::get_parameters"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec11get_pix_fmtEv", "spdl::core::Codec::get_pix_fmt"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec23get_sample_aspect_ratioEv", "spdl::core::Codec::get_sample_aspect_ratio"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec14get_sample_fmtEv", "spdl::core::Codec::get_sample_fmt"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec15get_sample_rateEv", "spdl::core::Codec::get_sample_rate"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec13get_time_baseEv", "spdl::core::Codec::get_time_base"], [13, 4, 1, "_CPPv4NK4spdl4core5Codec9get_widthEv", "spdl::core::Codec::get_width"], [13, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5CodecE", "spdl::core::Codec::media"], [13, 4, 1, "_CPPv4N4spdl4core5CodecaSERK5CodecI5mediaE", "spdl::core::Codec::operator="], [13, 4, 1, "_CPPv4N4spdl4core5CodecaSERR5CodecI5mediaE", "spdl::core::Codec::operator="], [13, 4, 1, "_CPPv4N4spdl4core5CodecD0Ev", "spdl::core::Codec::~Codec"], [33, 7, 1, "_CPPv4N4spdl4core7CodecIDE", "spdl::core::CodecID"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID3AV1E", "spdl::core::CodecID::AV1"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID4H264E", "spdl::core::CodecID::H264"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID4HEVCE", "spdl::core::CodecID::HEVC"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID5MJPEGE", "spdl::core::CodecID::MJPEG"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID10MPEG1VIDEOE", "spdl::core::CodecID::MPEG1VIDEO"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID10MPEG2VIDEOE", "spdl::core::CodecID::MPEG2VIDEO"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID5MPEG4E", "spdl::core::CodecID::MPEG4"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID3VC1E", "spdl::core::CodecID::VC1"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID3VP8E", "spdl::core::CodecID::VP8"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID3VP9E", "spdl::core::CodecID::VP9"], [33, 8, 1, "_CPPv4N4spdl4core7CodecID4WMV3E", "spdl::core::CodecID::WMV3"], [100, 1, 1, "_CPPv4N4spdl4core13DataInterfaceE", "spdl::core::DataInterface"], [100, 4, 1, "_CPPv4N4spdl4core13DataInterface11get_fmt_ctxEv", "spdl::core::DataInterface::get_fmt_ctx"], [100, 4, 1, "_CPPv4N4spdl4core13DataInterfaceD0Ev", "spdl::core::DataInterface::~DataInterface"], [110, 2, 1, "_CPPv4N4spdl4core16DataInterfacePtrE", "spdl::core::DataInterfacePtr"], [101, 1, 1, "_CPPv4N4spdl4core12DecodeConfigE", "spdl::core::DecodeConfig"], [101, 3, 1, "_CPPv4N4spdl4core12DecodeConfig7decoderE", "spdl::core::DecodeConfig::decoder"], [101, 3, 1, "_CPPv4N4spdl4core12DecodeConfig15decoder_optionsE", "spdl::core::DecodeConfig::decoder_options"], [14, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", "spdl::core::Decoder"], [14, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder"], [14, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK7Decoder", "spdl::core::Decoder::Decoder"], [14, 4, 1, "_CPPv4N4spdl4core7Decoder7DecoderERR7Decoder", "spdl::core::Decoder::Decoder"], [14, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::cfg"], [14, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::codec"], [14, 5, 1, "_CPPv4N4spdl4core7Decoder7DecoderERK5CodecI5mediaERKNSt8optionalI12DecodeConfigEERKNSt8optionalINSt6stringEEE", "spdl::core::Decoder::Decoder::filter_desc"], [14, 4, 1, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", "spdl::core::Decoder::decode"], [14, 5, 1, "_CPPv4N4spdl4core7Decoder6decodeE10PacketsPtrI5mediaE", "spdl::core::Decoder::decode::packets"], [14, 4, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush"], [14, 5, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush::num_frames"], [14, 5, 1, "_CPPv4N4spdl4core7Decoder16decode_and_flushE10PacketsPtrI5mediaEi", "spdl::core::Decoder::decode_and_flush::packets"], [14, 4, 1, "_CPPv4N4spdl4core7Decoder5flushEv", "spdl::core::Decoder::flush"], [14, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7DecoderE", "spdl::core::Decoder::media"], [14, 4, 1, "_CPPv4N4spdl4core7DecoderaSERK7Decoder", "spdl::core::Decoder::operator="], [14, 4, 1, "_CPPv4N4spdl4core7DecoderaSERR7Decoder", "spdl::core::Decoder::operator="], [14, 4, 1, "_CPPv4N4spdl4core7DecoderD0Ev", "spdl::core::Decoder::~Decoder"], [116, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", "spdl::core::DecoderPtr"], [116, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10DecoderPtrE", "spdl::core::DecoderPtr::media"], [102, 1, 1, "_CPPv4N4spdl4core11DemuxConfigE", "spdl::core::DemuxConfig"], [102, 3, 1, "_CPPv4N4spdl4core11DemuxConfig11buffer_sizeE", "spdl::core::DemuxConfig::buffer_size"], [102, 3, 1, "_CPPv4N4spdl4core11DemuxConfig6formatE", "spdl::core::DemuxConfig::format"], [102, 3, 1, "_CPPv4N4spdl4core11DemuxConfig14format_optionsE", "spdl::core::DemuxConfig::format_options"], [15, 1, 1, "_CPPv4N4spdl4core7DemuxerE", "spdl::core::Demuxer"], [15, 4, 1, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", "spdl::core::Demuxer::Demuxer"], [15, 5, 1, "_CPPv4N4spdl4core7Demuxer7DemuxerE16DataInterfacePtr", "spdl::core::Demuxer::Demuxer::di"], [15, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window"], [15, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::bsf"], [15, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::media"], [15, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core7Demuxer12demux_windowE10PacketsPtrI5mediaERKNSt8optionalINSt5tupleIddEEEERKNSt8optionalINSt6stringEEE", "spdl::core::Demuxer::demux_window::window"], [15, 4, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", "spdl::core::Demuxer::get_default_codec"], [15, 6, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer17get_default_codecE5CodecI5mediaEv", "spdl::core::Demuxer::get_default_codec::media"], [15, 4, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", "spdl::core::Demuxer::get_default_stream_index"], [15, 6, 1, "_CPPv4I_9MediaTypeENK4spdl4core7Demuxer24get_default_stream_indexEiv", "spdl::core::Demuxer::get_default_stream_index::media"], [15, 4, 1, "_CPPv4NK4spdl4core7Demuxer9has_audioEv", "spdl::core::Demuxer::has_audio"], [15, 4, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux"], [15, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::duration"], [15, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::indices"], [15, 5, 1, "_CPPv4N4spdl4core7Demuxer15streaming_demuxERKNSt3setIiEEid", "spdl::core::Demuxer::streaming_demux::num_packets"], [15, 4, 1, "_CPPv4N4spdl4core7DemuxerD0Ev", "spdl::core::Demuxer::~Demuxer"], [118, 2, 1, "_CPPv4N4spdl4core10DemuxerPtrE", "spdl::core::DemuxerPtr"], [35, 7, 1, "_CPPv4N4spdl4core9ElemClassE", "spdl::core::ElemClass"], [35, 8, 1, "_CPPv4N4spdl4core9ElemClass5FloatE", "spdl::core::ElemClass::Float"], [35, 8, 1, "_CPPv4N4spdl4core9ElemClass3IntE", "spdl::core::ElemClass::Int"], [35, 8, 1, "_CPPv4N4spdl4core9ElemClass4UIntE", "spdl::core::ElemClass::UInt"], [103, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", "spdl::core::EncodeConfigBase"], [103, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core16EncodeConfigBaseE", "spdl::core::EncodeConfigBase::media"], [16, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", "spdl::core::Encoder"], [16, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderEPN6detail11EncoderImplI5mediaEE", "spdl::core::Encoder::Encoder"], [16, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderERK7EncoderI5mediaE", "spdl::core::Encoder::Encoder"], [16, 4, 1, "_CPPv4N4spdl4core7Encoder7EncoderERR7EncoderI5mediaE", "spdl::core::Encoder::Encoder"], [16, 4, 1, "_CPPv4N4spdl4core7Encoder6encodeERRK9FramesPtrI5mediaE", "spdl::core::Encoder::encode"], [16, 4, 1, "_CPPv4N4spdl4core7Encoder5flushEv", "spdl::core::Encoder::flush"], [16, 4, 1, "_CPPv4NK4spdl4core7Encoder14get_frame_sizeEv", "spdl::core::Encoder::get_frame_size"], [16, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7EncoderE", "spdl::core::Encoder::media"], [16, 4, 1, "_CPPv4N4spdl4core7EncoderaSERK7EncoderI5mediaE", "spdl::core::Encoder::operator="], [16, 4, 1, "_CPPv4N4spdl4core7EncoderaSERR7EncoderI5mediaE", "spdl::core::Encoder::operator="], [16, 4, 1, "_CPPv4N4spdl4core7EncoderD0Ev", "spdl::core::Encoder::~Encoder"], [123, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", "spdl::core::EncoderPtr"], [123, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10EncoderPtrE", "spdl::core::EncoderPtr::media"], [17, 1, 1, "_CPPv4N4spdl4core11FilterGraphE", "spdl::core::FilterGraph"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERK11FilterGraph", "spdl::core::FilterGraph::FilterGraph"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", "spdl::core::FilterGraph::FilterGraph"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERR11FilterGraph", "spdl::core::FilterGraph::FilterGraph"], [17, 5, 1, "_CPPv4N4spdl4core11FilterGraph11FilterGraphERKNSt6stringE", "spdl::core::FilterGraph::FilterGraph::filter_desc"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames"], [17, 5, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames::frames"], [17, 5, 1, "_CPPv4N4spdl4core11FilterGraph10add_framesERK9AnyFramesRKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::add_frames::name"], [17, 4, 1, "_CPPv4NK4spdl4core11FilterGraph4dumpEv", "spdl::core::FilterGraph::dump"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraph5flushEv", "spdl::core::FilterGraph::flush"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::get_frames"], [17, 5, 1, "_CPPv4N4spdl4core11FilterGraph10get_framesERKNSt8optionalINSt6stringEEE", "spdl::core::FilterGraph::get_frames::name"], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraphaSERK11FilterGraph", "spdl::core::FilterGraph::operator="], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraphaSERR11FilterGraph", "spdl::core::FilterGraph::operator="], [17, 4, 1, "_CPPv4N4spdl4core11FilterGraphD0Ev", "spdl::core::FilterGraph::~FilterGraph"], [124, 2, 1, "_CPPv4N4spdl4core14FilterGraphPtrE", "spdl::core::FilterGraphPtr"], [18, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", "spdl::core::Frames"], [18, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6FramesE", "spdl::core::Frames::media"], [131, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", "spdl::core::FramesPtr"], [131, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core9FramesPtrE", "spdl::core::FramesPtr::media"], [104, 1, 1, "_CPPv4I0EN4spdl4core9GeneratorE", "spdl::core::Generator"], [104, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", "spdl::core::Generator::Generator"], [104, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorERK9Generator", "spdl::core::Generator::Generator"], [104, 4, 1, "_CPPv4N4spdl4core9Generator9GeneratorERR9Generator", "spdl::core::Generator::Generator"], [104, 5, 1, "_CPPv4N4spdl4core9Generator9GeneratorE11handle_type", "spdl::core::Generator::Generator::h"], [104, 6, 1, "_CPPv4I0EN4spdl4core9GeneratorE", "spdl::core::Generator::T"], [104, 3, 1, "_CPPv4N4spdl4core9Generator2h_E", "spdl::core::Generator::h_"], [104, 2, 1, "_CPPv4N4spdl4core9Generator11handle_typeE", "spdl::core::Generator::handle_type"], [104, 4, 1, "_CPPv4N4spdl4core9GeneratorcvbEv", "spdl::core::Generator::operator bool"], [104, 4, 1, "_CPPv4N4spdl4core9GeneratorclEv", "spdl::core::Generator::operator()"], [104, 4, 1, "_CPPv4N4spdl4core9GeneratoraSERK9Generator", "spdl::core::Generator::operator="], [104, 4, 1, "_CPPv4N4spdl4core9GeneratoraSERR9Generator", "spdl::core::Generator::operator="], [104, 1, 1, "_CPPv4N4spdl4core9Generator12promise_typeE", "spdl::core::Generator::promise_type"], [105, 1, 1, "_CPPv4N4spdl4core9Generator12promise_typeE", "spdl::core::Generator::promise_type"], [104, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", "spdl::core::Generator::promise_type::exception"], [105, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type9exceptionE", "spdl::core::Generator::promise_type::exception"], [104, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", "spdl::core::Generator::promise_type::final_suspend"], [105, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type13final_suspendEv", "spdl::core::Generator::promise_type::final_suspend"], [104, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", "spdl::core::Generator::promise_type::get_return_object"], [105, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type17get_return_objectEv", "spdl::core::Generator::promise_type::get_return_object"], [104, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", "spdl::core::Generator::promise_type::initial_suspend"], [105, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type15initial_suspendEv", "spdl::core::Generator::promise_type::initial_suspend"], [104, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", "spdl::core::Generator::promise_type::return_void"], [105, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type11return_voidEv", "spdl::core::Generator::promise_type::return_void"], [104, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", "spdl::core::Generator::promise_type::unhandled_exception"], [105, 4, 1, "_CPPv4N4spdl4core9Generator12promise_type19unhandled_exceptionEv", "spdl::core::Generator::promise_type::unhandled_exception"], [104, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type5valueE", "spdl::core::Generator::promise_type::value"], [105, 3, 1, "_CPPv4N4spdl4core9Generator12promise_type5valueE", "spdl::core::Generator::promise_type::value"], [104, 4, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value"], [105, 4, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value"], [104, 6, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::From"], [105, 6, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::From"], [104, 5, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::from"], [105, 5, 1, "_CPPv4I_NSt14convertible_toI1TEEEN4spdl4core9Generator12promise_type11yield_valueENSt14suspend_alwaysERR4From", "spdl::core::Generator::promise_type::yield_value::from"], [104, 4, 1, "_CPPv4N4spdl4core9GeneratorD0Ev", "spdl::core::Generator::~Generator"], [113, 2, 1, "_CPPv4N4spdl4core10ImageCodecE", "spdl::core::ImageCodec"], [126, 2, 1, "_CPPv4N4spdl4core11ImageFramesE", "spdl::core::ImageFrames"], [125, 2, 1, "_CPPv4N4spdl4core14ImageFramesPtrE", "spdl::core::ImageFramesPtr"], [142, 2, 1, "_CPPv4N4spdl4core12ImagePacketsE", "spdl::core::ImagePackets"], [136, 2, 1, "_CPPv4N4spdl4core15ImagePacketsPtrE", "spdl::core::ImagePacketsPtr"], [19, 1, 1, "_CPPv4N4spdl4core13InternalErrorE", "spdl::core::InternalError"], [34, 7, 1, "_CPPv4N4spdl4core9MediaTypeE", "spdl::core::MediaType"], [34, 8, 1, "_CPPv4N4spdl4core9MediaType5AudioE", "spdl::core::MediaType::Audio"], [34, 8, 1, "_CPPv4N4spdl4core9MediaType5ImageE", "spdl::core::MediaType::Image"], [34, 8, 1, "_CPPv4N4spdl4core9MediaType5VideoE", "spdl::core::MediaType::Video"], [20, 1, 1, "_CPPv4N4spdl4core5MuxerE", "spdl::core::Muxer"], [20, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERK5Muxer", "spdl::core::Muxer::Muxer"], [20, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer"], [20, 4, 1, "_CPPv4N4spdl4core5Muxer5MuxerERR5Muxer", "spdl::core::Muxer::Muxer"], [20, 5, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer::muxer"], [20, 5, 1, "_CPPv4N4spdl4core5Muxer5MuxerERKNSt6stringERKNSt8optionalINSt6stringEEE", "spdl::core::Muxer::Muxer::uri"], [20, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::codec_config"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::encoder"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::encoder_config"], [20, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer17add_encode_streamE10EncoderPtrI5mediaERK16EncodeConfigBaseI5mediaERKNSt8optionalINSt6stringEEERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::add_encode_stream::media"], [20, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream::codec"], [20, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer16add_remux_streamEvRK5CodecI5mediaE", "spdl::core::Muxer::add_remux_stream::media"], [20, 4, 1, "_CPPv4N4spdl4core5Muxer5closeEv", "spdl::core::Muxer::close"], [20, 4, 1, "_CPPv4N4spdl4core5Muxer5flushEv", "spdl::core::Muxer::flush"], [20, 4, 1, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::open"], [20, 5, 1, "_CPPv4N4spdl4core5Muxer4openERKNSt8optionalI10OptionDictEE", "spdl::core::Muxer::open::muxer_config"], [20, 4, 1, "_CPPv4N4spdl4core5MuxeraSERK5Muxer", "spdl::core::Muxer::operator="], [20, 4, 1, "_CPPv4N4spdl4core5MuxeraSERR5Muxer", "spdl::core::Muxer::operator="], [20, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::i"], [20, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::media"], [20, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5Muxer5writeEviR7PacketsI5mediaE", "spdl::core::Muxer::write::packets"], [20, 4, 1, "_CPPv4N4spdl4core5MuxerD0Ev", "spdl::core::Muxer::~Muxer"], [133, 2, 1, "_CPPv4N4spdl4core8MuxerPtrE", "spdl::core::MuxerPtr"], [147, 2, 1, "_CPPv4N4spdl4core10OptionDictE", "spdl::core::OptionDict"], [21, 1, 1, "_CPPv4N4spdl4core12PacketSeriesE", "spdl::core::PacketSeries"], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERK12PacketSeries", "spdl::core::PacketSeries::PacketSeries"], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", "spdl::core::PacketSeries::PacketSeries"], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesEv", "spdl::core::PacketSeries::PacketSeries"], [21, 5, 1, "_CPPv4N4spdl4core12PacketSeries12PacketSeriesERR12PacketSeries", "spdl::core::PacketSeries::PacketSeries::other"], [21, 4, 1, "_CPPv4NK4spdl4core12PacketSeries11get_packetsEv", "spdl::core::PacketSeries::get_packets"], [21, 4, 1, "_CPPv4NK4spdl4core12PacketSeries9iter_dataEv", "spdl::core::PacketSeries::iter_data"], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeriesaSERK12PacketSeries", "spdl::core::PacketSeries::operator="], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", "spdl::core::PacketSeries::operator="], [21, 5, 1, "_CPPv4N4spdl4core12PacketSeriesaSERR12PacketSeries", "spdl::core::PacketSeries::operator=::other"], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeries4pushEP8AVPacket", "spdl::core::PacketSeries::push"], [21, 4, 1, "_CPPv4N4spdl4core12PacketSeriesD0Ev", "spdl::core::PacketSeries::~PacketSeries"], [134, 2, 1, "_CPPv4N4spdl4core15PacketSeriesPtrE", "spdl::core::PacketSeriesPtr"], [106, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", "spdl::core::Packets"], [106, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets"], [106, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERK7PacketsI5mediaE", "spdl::core::Packets::Packets"], [106, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets"], [106, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets"], [106, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsERR7PacketsI5mediaE", "spdl::core::Packets::Packets"], [106, 4, 1, "_CPPv4N4spdl4core7Packets7PacketsEv", "spdl::core::Packets::Packets"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::codec"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::id"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::index"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::index"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::src"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::src"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::stream_index"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsE9uintptr_ti8Rational", "spdl::core::Packets::Packets::time_base"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::time_base"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRK8RationalRKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::timestamp"], [106, 5, 1, "_CPPv4N4spdl4core7Packets7PacketsERKNSt6stringEiRR5CodecI5mediaERKNSt8optionalINSt5tupleIddEEEE", "spdl::core::Packets::Packets::timestamp"], [106, 3, 1, "_CPPv4N4spdl4core7Packets5codecE", "spdl::core::Packets::codec"], [106, 3, 1, "_CPPv4N4spdl4core7Packets2idE", "spdl::core::Packets::id"], [106, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7PacketsE", "spdl::core::Packets::media"], [106, 4, 1, "_CPPv4N4spdl4core7PacketsaSERK7PacketsI5mediaE", "spdl::core::Packets::operator="], [106, 4, 1, "_CPPv4N4spdl4core7PacketsaSERR7PacketsI5mediaE", "spdl::core::Packets::operator="], [106, 3, 1, "_CPPv4N4spdl4core7Packets4pktsE", "spdl::core::Packets::pkts"], [106, 3, 1, "_CPPv4N4spdl4core7Packets3srcE", "spdl::core::Packets::src"], [106, 3, 1, "_CPPv4N4spdl4core7Packets12stream_indexE", "spdl::core::Packets::stream_index"], [106, 3, 1, "_CPPv4N4spdl4core7Packets9time_baseE", "spdl::core::Packets::time_base"], [106, 3, 1, "_CPPv4N4spdl4core7Packets9timestampE", "spdl::core::Packets::timestamp"], [106, 4, 1, "_CPPv4N4spdl4core7PacketsD0Ev", "spdl::core::Packets::~Packets"], [139, 2, 1, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", "spdl::core::PacketsPtr"], [139, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core10PacketsPtrE", "spdl::core::PacketsPtr::media"], [146, 2, 1, "_CPPv4N4spdl4core8RationalE", "spdl::core::Rational"], [107, 1, 1, "_CPPv4N4spdl4core13RawPacketDataE", "spdl::core::RawPacketData"], [107, 3, 1, "_CPPv4N4spdl4core13RawPacketData4dataE", "spdl::core::RawPacketData::data"], [107, 3, 1, "_CPPv4N4spdl4core13RawPacketData3ptsE", "spdl::core::RawPacketData::pts"], [107, 3, 1, "_CPPv4N4spdl4core13RawPacketData4sizeE", "spdl::core::RawPacketData::size"], [108, 1, 1, "_CPPv4N4spdl4core13SourceAdaptorE", "spdl::core::SourceAdaptor"], [108, 4, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface"], [108, 5, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface::dmx_cfg"], [108, 5, 1, "_CPPv4NK4spdl4core13SourceAdaptor13get_interfaceENSt11string_viewERK11DemuxConfig", "spdl::core::SourceAdaptor::get_interface::url"], [108, 4, 1, "_CPPv4N4spdl4core13SourceAdaptorD0Ev", "spdl::core::SourceAdaptor::~SourceAdaptor"], [111, 2, 1, "_CPPv4N4spdl4core16SourceAdaptorPtrE", "spdl::core::SourceAdaptorPtr"], [109, 1, 1, "_CPPv4N4spdl4core7StorageE", "spdl::core::Storage"], [109, 4, 1, "_CPPv4NK4spdl4core7Storage4dataEv", "spdl::core::Storage::data"], [109, 4, 1, "_CPPv4N4spdl4core7StorageD0Ev", "spdl::core::Storage::~Storage"], [22, 1, 1, "_CPPv4N4spdl4core16StreamingDemuxerE", "spdl::core::StreamingDemuxer"], [22, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer"], [22, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::duration"], [22, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::num_packets"], [22, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::p"], [22, 5, 1, "_CPPv4N4spdl4core16StreamingDemuxer16StreamingDemuxerEPN6detail11DemuxerImplERKNSt3setIiEEid", "spdl::core::StreamingDemuxer::StreamingDemuxer::stream_index"], [22, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer4doneEv", "spdl::core::StreamingDemuxer::done"], [22, 4, 1, "_CPPv4N4spdl4core16StreamingDemuxer4nextEv", "spdl::core::StreamingDemuxer::next"], [117, 2, 1, "_CPPv4N4spdl4core19StreamingDemuxerPtrE", "spdl::core::StreamingDemuxerPtr"], [23, 1, 1, "_CPPv4N4spdl4core14TracingSessionE", "spdl::core::TracingSession"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", "spdl::core::TracingSession::TracingSession"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERK14TracingSession", "spdl::core::TracingSession::TracingSession"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", "spdl::core::TracingSession::TracingSession"], [23, 5, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionERR14TracingSession", "spdl::core::TracingSession::TracingSession::other"], [23, 5, 1, "_CPPv4N4spdl4core14TracingSession14TracingSessionEPv", "spdl::core::TracingSession::TracingSession::sess"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", "spdl::core::TracingSession::config"], [23, 5, 1, "_CPPv4N4spdl4core14TracingSession6configERKNSt6stringE", "spdl::core::TracingSession::config::process_name"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession4initEv", "spdl::core::TracingSession::init"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSessionaSERK14TracingSession", "spdl::core::TracingSession::operator="], [23, 4, 1, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", "spdl::core::TracingSession::operator="], [23, 5, 1, "_CPPv4N4spdl4core14TracingSessionaSERR14TracingSession", "spdl::core::TracingSession::operator=::other"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start"], [23, 5, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start::buffer_size_in_kb"], [23, 5, 1, "_CPPv4N4spdl4core14TracingSession5startEii", "spdl::core::TracingSession::start::fd"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSession4stopEv", "spdl::core::TracingSession::stop"], [23, 4, 1, "_CPPv4N4spdl4core14TracingSessionD0Ev", "spdl::core::TracingSession::~TracingSession"], [115, 2, 1, "_CPPv4N4spdl4core10VideoCodecE", "spdl::core::VideoCodec"], [145, 2, 1, "_CPPv4N4spdl4core17VideoEncodeConfigE", "spdl::core::VideoEncodeConfig"], [120, 2, 1, "_CPPv4N4spdl4core12VideoEncoderE", "spdl::core::VideoEncoder"], [121, 2, 1, "_CPPv4N4spdl4core15VideoEncoderPtrE", "spdl::core::VideoEncoderPtr"], [132, 2, 1, "_CPPv4N4spdl4core11VideoFramesE", "spdl::core::VideoFrames"], [130, 2, 1, "_CPPv4N4spdl4core14VideoFramesPtrE", "spdl::core::VideoFramesPtr"], [135, 2, 1, "_CPPv4N4spdl4core12VideoPacketsE", "spdl::core::VideoPackets"], [138, 2, 1, "_CPPv4N4spdl4core15VideoPacketsPtrE", "spdl::core::VideoPacketsPtr"], [60, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone"], [60, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone::media"], [60, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core5cloneE9FramesPtrI5mediaERK6FramesI5mediaE", "spdl::core::clone::src"], [54, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames"], [56, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames"], [54, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::batch"], [56, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::frames"], [54, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::media"], [56, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::media"], [54, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrRKNSt6vectorIPK6FramesI5mediaEEENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::storage"], [56, 5, 1, "_CPPv4I_9MediaTypeEN4spdl4core14convert_framesE12CPUBufferPtrPK6FramesI5mediaENSt10shared_ptrI10CPUStorageEE", "spdl::core::convert_frames::storage"], [52, 4, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer"], [52, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::depth"], [52, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::elem_class"], [52, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::shape"], [52, 5, 1, "_CPPv4N4spdl4core10cpu_bufferERKNSt6vectorI6size_tEE9ElemClass6size_tNSt10shared_ptrI10CPUStorageEE", "spdl::core::cpu_buffer::storage"], [53, 4, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::bits"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::data"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::pts"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::sample_fmt"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::sample_rate"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::shape"], [53, 5, 1, "_CPPv4N4spdl4core28create_reference_audio_frameERKNSt6stringEPKviRKNSt5arrayI6size_tXL2EEEERKNSt5arrayI7int64_tXL2EEEEi7int64_t", "spdl::core::create_reference_audio_frame::stride"], [55, 4, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::bits"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::data"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::frame_rate"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::pts"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::sample_fmt"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::shape"], [55, 5, 1, "_CPPv4N4spdl4core28create_reference_video_frameERKNSt6stringEPKviRKNSt6vectorI6size_tEERKNSt6vectorI7int64_tEE8Rational7int64_t", "spdl::core::create_reference_video_frame::stride"], [24, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", "spdl::core::detail::DecoderImpl"], [24, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11DecoderImplE", "spdl::core::detail::DecoderImpl::media"], [25, 1, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", "spdl::core::detail::EncoderImpl"], [25, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core6detail11EncoderImplE", "spdl::core::detail::EncoderImpl::media"], [62, 4, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices"], [62, 5, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices::indices"], [62, 5, 1, "_CPPv4N4spdl4core26extract_packets_at_indicesERK15VideoPacketsPtrNSt6vectorI6size_tEE", "spdl::core::extract_packets_at_indices::src"], [63, 4, 1, "_CPPv4N4spdl4core18get_ffmpeg_filtersEv", "spdl::core::get_ffmpeg_filters"], [70, 4, 1, "_CPPv4N4spdl4core20get_ffmpeg_log_levelEv", "spdl::core::get_ffmpeg_log_level"], [64, 4, 1, "_CPPv4N4spdl4core19get_ffmpeg_versionsEv", "spdl::core::get_ffmpeg_versions"], [61, 4, 1, "_CPPv4I_9MediaTypeEN4spdl4core7get_ptsENSt8optionalINSt5tupleIddEEEERK7PacketsI5mediaE", "spdl::core::get_pts"], [61, 6, 1, "_CPPv4I_9MediaTypeEN4spdl4core7get_ptsENSt8optionalINSt5tupleIddEEEERK7PacketsI5mediaE", "spdl::core::get_pts::media"], [72, 4, 1, "_CPPv4N4spdl4core9init_glogEPKc", "spdl::core::init_glog"], [72, 5, 1, "_CPPv4N4spdl4core9init_glogEPKc", "spdl::core::init_glog::name"], [69, 4, 1, "_CPPv4N4spdl4core12init_tracingEv", "spdl::core::init_tracing"], [57, 4, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer"], [58, 4, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer"], [58, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::adaptor"], [57, 5, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::data"], [57, 5, 1, "_CPPv4N4spdl4core12make_demuxerEKNSt11string_viewERKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::dmx_cfg"], [58, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::dmx_cfg"], [58, 5, 1, "_CPPv4N4spdl4core12make_demuxerERKNSt6stringERK16SourceAdaptorPtrRKNSt8optionalI11DemuxConfigEE", "spdl::core::make_demuxer::src"], [59, 4, 1, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", "spdl::core::make_filter_graph"], [59, 5, 1, "_CPPv4N4spdl4core17make_filter_graphERKNSt6stringE", "spdl::core::make_filter_graph::filter_desc"], [68, 4, 1, "_CPPv4N4spdl4core18register_avdevicesEv", "spdl::core::register_avdevices"], [67, 4, 1, "_CPPv4N4spdl4core20set_ffmpeg_log_levelEi", "spdl::core::set_ffmpeg_log_level"], [65, 4, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter"], [65, 6, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::Number"], [65, 5, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::counter"], [65, 5, 1, "_CPPv4I0EN4spdl4core13trace_counterEvi6Number", "spdl::core::trace_counter::i"], [71, 4, 1, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", "spdl::core::trace_event_begin"], [71, 5, 1, "_CPPv4N4spdl4core17trace_event_beginERKNSt6stringE", "spdl::core::trace_event_begin::name"], [66, 4, 1, "_CPPv4N4spdl4core15trace_event_endEv", "spdl::core::trace_event_end"], [8, 9, 0, "-", "data_formats"], [9, 9, 0, "-", "image_dataloading"], [10, 9, 0, "-", "imagenet_classification"], [149, 9, 0, "-", "multi_thread_preprocessing"], [150, 9, 0, "-", "performance_analysis"], [268, 9, 0, "-", "streaming_nvdec_decoding"], [269, 9, 0, "-", "streaming_video_processing"], [270, 9, 0, "-", "video_dataloading"]], "data_formats": [[8, 10, 1, "", "DataSource"], [8, 12, 1, "", "get_mock_data"], [8, 12, 1, "", "get_pipeline"], [8, 12, 1, "", "load_npy"], [8, 12, 1, "", "load_npy_spdl"], [8, 12, 1, "", "load_torch"], [8, 12, 1, "", "main"], [8, 12, 1, "", "run_pipeline"]], "data_formats.DataSource": [[8, 11, 1, "", "__iter__"]], "image_dataloading": [[9, 10, 1, "", "PerfResult"], [9, 12, 1, "", "batch_decode"], [9, 12, 1, "", "benchmark"], [9, 12, 1, "", "entrypoint"], [9, 12, 1, "", "get_pipeline"], [9, 12, 1, "", "source"], [9, 12, 1, "", "worker_entrypoint"]], "image_dataloading.PerfResult": [[9, 13, 1, "", "elapsed"], [9, 13, 1, "", "num_batches"], [9, 13, 1, "", "num_frames"]], "imagenet_classification": [[10, 10, 1, "", "Classification"], [10, 10, 1, "", "ModelBundle"], [10, 10, 1, "", "Preprocessing"], [10, 12, 1, "", "benchmark"], [10, 12, 1, "", "entrypoint"], [10, 12, 1, "", "get_dataloader"], [10, 12, 1, "", "get_decode_func"], [10, 12, 1, "", "get_model"]], "imagenet_classification.Classification": [[10, 11, 1, "", "forward"]], "imagenet_classification.ModelBundle": [[10, 11, 1, "", "forward"]], "imagenet_classification.Preprocessing": [[10, 11, 1, "", "forward"]], "multi_thread_preprocessing": [[149, 12, 1, "", "entrypoint"], [149, 12, 1, "", "exp_spdl"], [149, 12, 1, "", "exp_torch"], [149, 12, 1, "", "run_dataloader"]], "performance_analysis": [[150, 10, 1, "", "CustomQueue"], [150, 10, 1, "", "CustomTaskHook"], [150, 12, 1, "", "build_pipeline"], [150, 12, 1, "", "decode"], [150, 12, 1, "", "main"], [150, 12, 1, "", "parse_args"]], "performance_analysis.CustomQueue": [[150, 11, 1, "", "interval_stats_callback"]], "performance_analysis.CustomTaskHook": [[150, 11, 1, "", "interval_stats_callback"]], "spdl": [[151, 9, 0, "-", "dataloader"], [156, 9, 0, "-", "io"], [242, 9, 0, "-", "pipeline"], [256, 9, 0, "-", "source"]], "spdl.dataloader": [[152, 10, 1, "", "CacheDataLoader"], [153, 10, 1, "", "DataLoader"], [154, 10, 1, "", "PyTorchDataLoader"], [155, 12, 1, "", "get_pytorch_dataloader"]], "spdl.dataloader.CacheDataLoader": [[152, 11, 1, "", "__iter__"], [152, 11, 1, "", "__len__"]], "spdl.dataloader.DataLoader": [[153, 11, 1, "", "__iter__"]], "spdl.dataloader.PyTorchDataLoader": [[154, 11, 1, "", "__iter__"], [154, 11, 1, "", "__len__"]], "spdl.io": [[157, 10, 1, "", "AudioCodec"], [158, 10, 1, "", "AudioDecoder"], [159, 10, 1, "", "AudioEncodeConfig"], [160, 10, 1, "", "AudioEncoder"], [161, 10, 1, "", "AudioFrames"], [162, 10, 1, "", "AudioPackets"], [163, 10, 1, "", "BSF"], [164, 10, 1, "", "CPUBuffer"], [165, 10, 1, "", "CPUStorage"], [166, 10, 1, "", "CUDABuffer"], [167, 10, 1, "", "CUDAConfig"], [168, 10, 1, "", "DecodeConfig"], [169, 12, 1, "", "Decoder"], [170, 10, 1, "", "DemuxConfig"], [171, 10, 1, "", "Demuxer"], [172, 10, 1, "", "FilterGraph"], [173, 10, 1, "", "Frames"], [174, 10, 1, "", "ImageCodec"], [175, 10, 1, "", "ImageDecoder"], [176, 10, 1, "", "ImageFrames"], [177, 10, 1, "", "ImagePackets"], [178, 10, 1, "", "Muxer"], [179, 10, 1, "", "NpzFile"], [180, 10, 1, "", "NvDecDecoder"], [181, 10, 1, "", "Packets"], [182, 10, 1, "", "VideoCodec"], [183, 10, 1, "", "VideoDecoder"], [184, 10, 1, "", "VideoEncodeConfig"], [185, 10, 1, "", "VideoEncoder"], [186, 10, 1, "", "VideoFrames"], [187, 10, 1, "", "VideoPackets"], [188, 12, 1, "", "apply_bsf"], [189, 12, 1, "", "audio_encode_config"], [190, 12, 1, "", "convert_array"], [191, 12, 1, "", "convert_frames"], [192, 12, 1, "", "cpu_storage"], [193, 12, 1, "", "create_reference_audio_frame"], [194, 12, 1, "", "create_reference_video_frame"], [195, 12, 1, "", "cuda_config"], [196, 12, 1, "", "decode_config"], [197, 12, 1, "", "decode_image_nvjpeg"], [198, 12, 1, "", "decode_packets"], [199, 12, 1, "", "decode_packets_nvdec"], [200, 12, 1, "", "demux_audio"], [201, 12, 1, "", "demux_config"], [202, 12, 1, "", "demux_image"], [203, 12, 1, "", "demux_video"], [204, 12, 1, "", "encode_image"], [205, 12, 1, "", "get_abuffer_desc"], [206, 12, 1, "", "get_audio_filter_desc"], [207, 12, 1, "", "get_buffer_desc"], [208, 12, 1, "", "get_filter_desc"], [209, 12, 1, "", "get_video_filter_desc"], [210, 12, 1, "", "load_audio"], [211, 12, 1, "", "load_image"], [212, 12, 1, "", "load_image_batch"], [213, 12, 1, "", "load_image_batch_nvjpeg"], [214, 12, 1, "", "load_npy"], [215, 12, 1, "", "load_npz"], [216, 12, 1, "", "load_video"], [217, 12, 1, "", "nv12_to_bgr"], [218, 12, 1, "", "nv12_to_rgb"], [219, 12, 1, "", "nvdec_decoder"], [220, 12, 1, "", "sample_decode_video"], [221, 12, 1, "", "save_image"], [222, 12, 1, "", "streaming_load_video_nvdec"], [223, 12, 1, "", "to_jax"], [224, 12, 1, "", "to_numba"], [225, 12, 1, "", "to_numpy"], [226, 12, 1, "", "to_torch"], [227, 12, 1, "", "transfer_buffer"], [228, 12, 1, "", "transfer_buffer_cpu"], [229, 9, 0, "-", "utils"], [241, 12, 1, "", "video_encode_config"]], "spdl.io.AudioCodec": [[157, 14, 1, "", "channel_layout"], [157, 14, 1, "", "name"], [157, 14, 1, "", "num_channels"], [157, 14, 1, "", "sample_fmt"], [157, 14, 1, "", "sample_rate"], [157, 14, 1, "", "time_base"]], "spdl.io.AudioDecoder": [[158, 11, 1, "", "decode"], [158, 11, 1, "", "flush"]], "spdl.io.AudioEncoder": [[160, 11, 1, "", "encode"], [160, 11, 1, "", "flush"], [160, 14, 1, "", "frame_size"]], "spdl.io.AudioFrames": [[161, 11, 1, "", "__len__"], [161, 11, 1, "", "clone"], [161, 14, 1, "", "num_channels"], [161, 14, 1, "", "num_frames"], [161, 14, 1, "", "sample_fmt"], [161, 14, 1, "", "sample_rate"]], "spdl.io.AudioPackets": [[162, 11, 1, "", "clone"], [162, 14, 1, "", "codec"], [162, 14, 1, "", "num_channels"], [162, 14, 1, "", "sample_rate"], [162, 14, 1, "", "timestamp"]], "spdl.io.BSF": [[163, 11, 1, "", "filter"], [163, 11, 1, "", "flush"]], "spdl.io.CUDABuffer": [[166, 14, 1, "", "device_index"]], "spdl.io.Demuxer": [[171, 14, 1, "", "audio_codec"], [171, 14, 1, "", "audio_stream_index"], [171, 11, 1, "", "demux_audio"], [171, 11, 1, "", "demux_image"], [171, 11, 1, "", "demux_video"], [171, 11, 1, "", "has_audio"], [171, 14, 1, "", "image_codec"], [171, 11, 1, "", "streaming_demux"], [171, 14, 1, "", "video_codec"], [171, 14, 1, "", "video_stream_index"]], "spdl.io.FilterGraph": [[172, 11, 1, "", "add_frames"], [172, 11, 1, "", "flush"], [172, 11, 1, "", "get_frames"]], "spdl.io.ImageCodec": [[174, 14, 1, "", "height"], [174, 14, 1, "", "name"], [174, 14, 1, "", "pix_fmt"], [174, 14, 1, "", "sample_aspect_ratio"], [174, 14, 1, "", "time_base"], [174, 14, 1, "", "width"]], "spdl.io.ImageDecoder": [[175, 11, 1, "", "decode"]], "spdl.io.ImageFrames": [[176, 11, 1, "", "clone"], [176, 14, 1, "", "height"], [176, 14, 1, "", "metadata"], [176, 14, 1, "", "num_planes"], [176, 14, 1, "", "pix_fmt"], [176, 14, 1, "", "pts"], [176, 14, 1, "", "width"]], "spdl.io.ImagePackets": [[177, 11, 1, "", "clone"], [177, 14, 1, "", "codec"], [177, 14, 1, "", "height"], [177, 14, 1, "", "pix_fmt"], [177, 14, 1, "", "width"]], "spdl.io.Muxer": [[178, 11, 1, "", "add_encode_stream"], [178, 11, 1, "", "add_remux_stream"], [178, 11, 1, "", "close"], [178, 11, 1, "", "flush"], [178, 11, 1, "", "open"], [178, 11, 1, "", "write"]], "spdl.io.NpzFile": [[179, 11, 1, "", "__getitem__"], [179, 11, 1, "", "__iter__"], [179, 11, 1, "", "__len__"]], "spdl.io.NvDecDecoder": [[180, 11, 1, "", "decode"], [180, 11, 1, "", "flush"], [180, 11, 1, "", "init"]], "spdl.io.VideoCodec": [[182, 14, 1, "", "frame_rate"], [182, 14, 1, "", "height"], [182, 14, 1, "", "name"], [182, 14, 1, "", "pix_fmt"], [182, 14, 1, "", "sample_aspect_ratio"], [182, 14, 1, "", "time_base"], [182, 14, 1, "", "width"]], "spdl.io.VideoDecoder": [[183, 11, 1, "", "decode"], [183, 11, 1, "", "flush"]], "spdl.io.VideoEncoder": [[185, 11, 1, "", "encode"], [185, 11, 1, "", "flush"]], "spdl.io.VideoFrames": [[186, 11, 1, "", "__getitem__"], [186, 11, 1, "", "__len__"], [186, 11, 1, "", "clone"], [186, 14, 1, "", "height"], [186, 14, 1, "", "num_frames"], [186, 14, 1, "", "num_planes"], [186, 14, 1, "", "pix_fmt"], [186, 14, 1, "", "width"]], "spdl.io.VideoPackets": [[187, 11, 1, "", "__len__"], [187, 11, 1, "", "clone"], [187, 14, 1, "", "codec"], [187, 14, 1, "", "frame_rate"], [187, 14, 1, "", "height"], [187, 14, 1, "", "pix_fmt"], [187, 14, 1, "", "timestamp"], [187, 14, 1, "", "width"]], "spdl.io.utils": [[230, 12, 1, "", "built_with_cuda"], [231, 12, 1, "", "built_with_nvcodec"], [232, 12, 1, "", "built_with_nvjpeg"], [233, 12, 1, "", "get_ffmpeg_filters"], [234, 12, 1, "", "get_ffmpeg_log_level"], [235, 12, 1, "", "get_ffmpeg_versions"], [236, 12, 1, "", "set_ffmpeg_log_level"], [237, 12, 1, "", "trace_counter"], [238, 12, 1, "", "trace_event"], [239, 12, 1, "", "trace_gc"], [240, 12, 1, "", "tracing"]], "spdl.pipeline": [[243, 10, 1, "", "AsyncQueue"], [244, 10, 1, "", "Pipeline"], [245, 10, 1, "", "PipelineBuilder"], [246, 15, 1, "", "PipelineFailure"], [247, 10, 1, "", "QueuePerfStats"], [248, 10, 1, "", "StatsQueue"], [249, 10, 1, "", "TaskHook"], [250, 10, 1, "", "TaskPerfStats"], [251, 10, 1, "", "TaskStatsHook"], [252, 12, 1, "", "cache_iterator"], [253, 12, 1, "", "create_task"], [254, 12, 1, "", "iterate_in_subprocess"], [255, 12, 1, "", "run_pipeline_in_subprocess"]], "spdl.pipeline.AsyncQueue": [[243, 11, 1, "", "stage_hook"]], "spdl.pipeline.Pipeline": [[244, 11, 1, "", "__iter__"], [244, 11, 1, "", "auto_stop"], [244, 11, 1, "", "get_item"], [244, 11, 1, "", "get_iterator"], [244, 11, 1, "", "start"], [244, 11, 1, "", "stop"]], "spdl.pipeline.PipelineBuilder": [[245, 11, 1, "", "add_sink"], [245, 11, 1, "", "add_source"], [245, 11, 1, "", "aggregate"], [245, 11, 1, "", "build"], [245, 11, 1, "", "disaggregate"], [245, 11, 1, "", "pipe"]], "spdl.pipeline.QueuePerfStats": [[247, 13, 1, "", "ave_get_time"], [247, 13, 1, "", "ave_put_time"], [247, 13, 1, "", "elapsed"], [247, 13, 1, "", "num_items"], [247, 13, 1, "", "occupancy_rate"], [247, 14, 1, "", "qps"]], "spdl.pipeline.StatsQueue": [[248, 11, 1, "", "get"], [248, 11, 1, "", "interval_stats_callback"], [248, 11, 1, "", "put"], [248, 11, 1, "", "stage_hook"]], "spdl.pipeline.TaskHook": [[249, 11, 1, "", "stage_hook"], [249, 11, 1, "", "task_hook"]], "spdl.pipeline.TaskPerfStats": [[250, 13, 1, "", "ave_time"], [250, 13, 1, "", "num_failures"], [250, 13, 1, "", "num_tasks"]], "spdl.pipeline.TaskStatsHook": [[251, 11, 1, "", "interval_stats_callback"], [251, 11, 1, "", "stage_hook"], [251, 11, 1, "", "task_hook"]], "spdl.source": [[257, 10, 1, "", "IterableWithShuffle"], [258, 9, 0, "-", "imagenet"], [262, 9, 0, "-", "local_directory"], [264, 9, 0, "-", "utils"]], "spdl.source.IterableWithShuffle": [[257, 11, 1, "", "__iter__"], [257, 11, 1, "", "shuffle"]], "spdl.source.imagenet": [[259, 10, 1, "", "ImageNet"], [260, 12, 1, "", "get_mappings"], [261, 12, 1, "", "parse_wnid"]], "spdl.source.imagenet.ImageNet": [[259, 11, 1, "", "__iter__"], [259, 11, 1, "", "shuffle"]], "spdl.source.local_directory": [[263, 10, 1, "", "LocalDirectory"]], "spdl.source.local_directory.LocalDirectory": [[263, 11, 1, "", "__iter__"], [263, 11, 1, "", "shuffle"]], "spdl.source.utils": [[265, 10, 1, "", "MergeIterator"], [266, 12, 1, "", "embed_shuffle"], [267, 12, 1, "", "repeat_source"]], "spdl.source.utils.MergeIterator": [[265, 11, 1, "", "__iter__"]], "streaming_nvdec_decoding": [[268, 12, 1, "", "decode"], [268, 12, 1, "", "main"], [268, 12, 1, "", "parse_args"], [268, 12, 1, "", "run"], [268, 12, 1, "", "torch_cuda_warmup"]], "streaming_video_processing": [[269, 12, 1, "", "build_components"], [269, 12, 1, "", "get_filter_desc"], [269, 12, 1, "", "main"], [269, 12, 1, "", "parse_args"], [269, 12, 1, "", "process"]], "video_dataloading": [[270, 10, 1, "", "PerfResult"], [270, 12, 1, "", "benchmark"], [270, 12, 1, "", "decode_video"], [270, 12, 1, "", "decode_video_nvdec"], [270, 12, 1, "", "entrypoint"], [270, 12, 1, "", "get_pipeline"], [270, 12, 1, "", "source"], [270, 12, 1, "", "worker_entrypoint"]], "video_dataloading.PerfResult": [[270, 13, 1, "", "elapsed"], [270, 13, 1, "", "num_batches"], [270, 13, 1, "", "num_frames"]]}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "class", "C++ class"], "2": ["cpp", "type", "C++ type"], "3": ["cpp", "member", "C++ member"], "4": ["cpp", "function", "C++ function"], "5": ["cpp", "functionParam", "C++ function parameter"], "6": ["cpp", "templateParam", "C++ template parameter"], "7": ["cpp", "enum", "C++ enum"], "8": ["cpp", "enumerator", "C++ enumerator"], "9": ["py", "module", "Python module"], "10": ["py", "class", "Python class"], "11": ["py", "method", "Python method"], "12": ["py", "function", "Python function"], "13": ["py", "attribute", "Python attribute"], "14": ["py", "property", "Python property"], "15": ["py", "exception", "Python exception"]}, "objtypes": {"0": "c:macro", "1": "cpp:class", "2": "cpp:type", "3": "cpp:member", "4": "cpp:function", "5": "cpp:functionParam", "6": "cpp:templateParam", "7": "cpp:enum", "8": "cpp:enumerator", "9": "py:module", "10": "py:class", "11": "py:method", "12": "py:function", "13": "py:attribute", "14": "py:property", "15": "py:exception"}, "terms": {"": [1, 2, 4, 9, 10, 83, 92, 93, 94, 150, 153, 154, 161, 173, 181, 195, 218, 236, 254, 261, 269, 270, 271, 273, 274, 275, 281, 282, 284, 286, 287, 290, 291, 292], "0": [8, 9, 10, 80, 89, 93, 94, 100, 109, 149, 150, 153, 178, 180, 181, 192, 196, 199, 209, 214, 215, 236, 237, 245, 247, 265, 266, 267, 268, 269, 270, 275, 276, 278, 281, 285, 286], "04": 281, "05d": 268, "1": [4, 7, 8, 9, 10, 14, 80, 83, 85, 94, 149, 150, 155, 171, 172, 178, 180, 181, 189, 205, 206, 207, 209, 217, 218, 235, 241, 243, 245, 247, 248, 251, 255, 265, 266, 267, 268, 269, 270, 271, 273, 275, 278, 281, 285, 286, 287], "10": [180, 199, 215, 218, 244, 265, 278, 287], "100": [2, 149, 235, 253, 285, 287, 289], "1000": [8, 260], "1080": 268, "11": [265, 273, 278], "12": [265, 273, 281, 285], "120": 150, "1234": 178, "128": [150, 218], "12800": 172, "13": [181, 273, 278, 287], "15": [9, 181, 270, 273, 278, 286], "16": [8, 9, 10, 149, 161, 189, 193, 194, 204, 218, 221, 236, 270, 281, 286], "17": 273, "19": [273, 286], "1920": 268, "198": 204, "1c": 172, "1f": 268, "2": [4, 8, 10, 53, 80, 83, 84, 94, 149, 150, 155, 218, 222, 235, 237, 253, 265, 268, 269, 270, 271, 273, 278, 281, 286], "20": [4, 10, 214, 265, 278, 286], "200": 287, "20067": [277, 292], "2025": 277, "20mb": 281, "21": [265, 273], "22": 265, "222": 270, "224": [9, 10, 149, 153, 276, 281], "2240": 10, "224x224": 281, "224x224x3": 281, "225": 149, "2250": 10, "229": 149, "2290": 10, "23": [273, 286], "24": [236, 281], "240": [181, 268], "2504": [277, 292], "255": [10, 149, 204], "256": [8, 10, 281], "26": 4, "2d": 193, "2f": [9, 10, 149, 270], "2x": 149, "2x4": 281, "3": [1, 7, 8, 10, 94, 149, 150, 153, 171, 181, 192, 194, 197, 201, 204, 218, 221, 235, 237, 244, 245, 254, 268, 269, 270, 271, 273, 278, 281, 286], "30": [244, 286], "300m": 180, "30m": 287, "32": [1, 8, 9, 10, 149, 153, 161, 189, 193, 204, 206, 236, 268, 276, 281], "320": [181, 268, 270], "320x240": 172, "320x480": 172, "32bit": 189, "32x0": 281, "3670924": 7, "3d": 194, "3x3": 218, "4": [1, 2, 4, 7, 8, 94, 149, 218, 269, 271, 276, 278, 281, 285, 290, 291], "40": [9, 236, 289, 291], "406": 149, "4060": 10, "4096": 240, "4147200": 281, "44100": 172, "44100hz": 172, "456": 149, "4560": 10, "48": 236, "480": 8, "485": 149, "4850": 10, "4d": 194, "5": [10, 94, 149, 178, 181, 218, 237, 265, 269, 273, 278, 291, 292], "500": 268, "52": 281, "56": 236, "58": 235, "6": [8, 94, 218, 269, 278, 292], "60": [4, 10, 235], "600x240": 172, "63": 189, "636": 260, "64": [161, 193], "640": 8, "68783184": 7, "7": [94, 181, 218, 237, 269, 273, 278, 286, 287], "720x480": 281, "720x480x12": 281, "7x": 149, "8": [1, 8, 9, 149, 150, 153, 161, 189, 193, 218, 221, 236, 269, 270, 281, 285, 286, 290], "8096": [94, 102], "85": 285, "8bit": 194, "9": [181, 218, 235, 265, 269, 273], "96": 204, "99": 285, "A": [1, 9, 10, 150, 153, 154, 161, 162, 171, 172, 176, 177, 179, 186, 187, 188, 190, 191, 195, 197, 199, 212, 213, 218, 223, 224, 225, 226, 245, 249, 254, 257, 270, 271, 276, 286, 290], "And": 281, "As": [2, 281, 282, 284, 285, 287, 290, 291, 292], "At": [243, 289, 290], "But": [270, 284, 285], "By": [148, 181, 195, 196, 218, 252, 254, 265, 268, 278, 281, 286, 287], "For": [1, 2, 89, 150, 172, 174, 178, 186, 189, 195, 236, 269, 270, 271, 274, 275, 276, 281, 284, 285, 290, 291], "If": [1, 2, 4, 7, 8, 93, 153, 161, 163, 171, 180, 186, 192, 198, 205, 207, 209, 212, 213, 218, 219, 220, 221, 241, 244, 245, 249, 252, 254, 261, 265, 266, 268, 274, 275, 276, 281, 284, 285, 286, 287, 292], "In": [2, 3, 7, 149, 150, 160, 161, 254, 269, 273, 274, 275, 280, 281, 284, 285, 288, 289], "It": [2, 4, 9, 80, 94, 152, 153, 179, 195, 214, 215, 244, 245, 247, 249, 269, 270, 273, 274, 276, 280, 281, 285, 287, 289, 290, 292], "Its": [2, 292], "NOT": [273, 277], "No": [92, 153], "On": [149, 285], "One": [8, 179, 201, 243, 254, 275, 278, 281, 284, 288], "Or": 271, "Such": [1, 80], "TO": 273, "That": [1, 273, 281], "The": [3, 4, 7, 8, 9, 10, 80, 84, 149, 150, 152, 153, 154, 157, 160, 161, 162, 163, 166, 169, 171, 172, 174, 176, 177, 178, 180, 181, 182, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 218, 220, 221, 222, 236, 237, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 259, 260, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292], "Then": [2, 269, 275, 281], "There": [2, 214, 254, 271, 273, 274, 275, 276, 281, 284, 286, 287, 290], "These": [2, 80, 95, 278, 286, 291, 292], "To": [2, 4, 7, 9, 10, 150, 153, 163, 164, 166, 180, 181, 198, 245, 249, 269, 273, 275, 278, 281, 284, 285, 289], "With": [2, 4, 290], "_": [8, 10, 149, 150, 180, 268], "__all__": [8, 9, 10, 149, 150, 268, 269, 270], "__doc__": [9, 10, 150, 268, 269, 270], "__getitem__": [1, 149, 179, 186, 281], "__getstate__": 275, "__has_includ": 94, "__init__": [1, 8, 10, 150], "__iter__": [8, 152, 153, 154, 179, 244, 254, 257, 259, 263, 265, 266, 273, 291], "__len__": [152, 154, 161, 179, 186, 187], "__main__": [8, 9, 10, 149, 150, 268, 269, 270], "__name__": [8, 9, 10, 149, 150, 268, 269, 270], "__placeholder__": 220, "__repr__": 181, "__setstate__": 275, "_arg": 149, "_batch_decod": 9, "_cmd": 254, "_decode_func": 270, "_dump_np": 8, "_dump_torch": 8, "_enter_iteration_mod": 254, "_execute_iter": 254, "_expand": 10, "_filter_desc_default": [169, 198, 210, 211, 212, 216], "_frame": [9, 270], "_get_dataload": 10, "_get_decode_fn": 270, "_get_experimental_nvjpeg_decode_funct": 10, "_get_load_fn": 8, "_get_pipelin": [9, 270], "_get_threadlocal_stream": 275, "_init": [9, 270], "_init_log": [9, 10, 270], "_is_audio": [5, 45, 73, 89, 96], "_is_imag": [5, 45, 73, 89, 96], "_is_video": [5, 45, 73, 89, 96], "_iterate_result": 254, "_lg": [9, 10, 270], "_log": 150, "_mp4toannexb": 180, "_parse_arg": [9, 10, 149, 270], "_parse_process_arg": [9, 270], "_print": 149, "_read_arrai": 214, "_read_array_head": 214, "_scalart": [8, 179, 214], "_signum": [9, 270], "_spdl_ffmpeg6": 181, "_src": 1, "_static": 150, "_statu": 254, "_step": 150, "_subprocessiter": 254, "_writer": 150, "aac": 178, "ab": [277, 292], "abc": [8, 9, 10, 149, 150, 179, 270], "abhinandan": 277, "abl": [285, 287], "abort": [249, 254], "about": [4, 83, 180, 181, 274, 281, 285, 287, 292], "abov": [1, 4, 204, 284, 285, 286, 290], "absorb": [245, 249], "absort": 249, "abstract": [80, 83, 93, 153, 249, 281, 282, 284, 291, 292], "abuff": [172, 205, 207], "abuffersink": [172, 205], "acc1": 10, "acc5": 10, "acceler": 180, "access": [2, 150, 178, 179, 181, 192, 274, 281, 284], "accessor": 284, "accommod": [270, 271], "accordingli": 160, "accumul": 276, "accuraci": [10, 287], "achiev": [2, 7, 152, 252, 275, 280, 281, 282, 287, 288, 289, 292], "acknowledg": 254, "acquisit": 281, "across": [275, 277, 285, 288], "act": [178, 271], "action": [9, 10, 249, 270, 286], "activ": 290, "actual": [80, 84, 174, 254, 278, 284, 287], "ad": [93, 95, 149], "adaptor": [32, 42, 50, 58, 75, 86, 96, 98, 100, 108, 110, 111, 148], "add": [92, 93, 150, 172, 178, 249, 253, 269, 278, 281, 289], "add_argu": [9, 10, 149, 150, 268, 269, 270], "add_encode_stream": [5, 20, 73, 91, 96, 160, 178, 185, 269], "add_fram": [5, 17, 73, 88, 96, 172, 205, 207, 269], "add_pointer_t": 93, "add_remux_stream": [5, 20, 73, 91, 96, 178, 269], "add_scalar": 150, "add_sink": [1, 7, 8, 9, 149, 150, 244, 245, 270, 271, 273, 275, 276, 281, 285, 291], "add_sourc": [1, 7, 8, 9, 149, 150, 244, 245, 270, 271, 273, 275, 276, 281, 285, 291], "addit": [1, 2, 80, 149, 276, 281, 284, 291, 292], "address": 195, "adjust": [209, 270, 281, 282, 288], "admonit": 269, "adopt": [280, 281, 282, 292], "advantag": [7, 275], "advis": [1, 7], "affect": [2, 8, 236, 271, 285, 286], "affili": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270], "after": [4, 150, 152, 180, 181, 198, 199, 209, 218, 244, 249, 252, 265, 273, 281, 284, 285, 286, 289], "afterward": 291, "against": [149, 278, 280], "aggerg": 153, "aggreg": [1, 9, 10, 149, 153, 245, 270, 273, 275, 276, 281, 282, 285, 291], "ai": [269, 277, 288, 292], "aim": 292, "alex": 277, "algorithm": 209, "align": 80, "aliv": [193, 194, 284], "all": [2, 4, 7, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 172, 178, 186, 236, 265, 268, 269, 270, 271, 273, 275, 281, 286, 290], "all_reduc": 286, "alloc": [9, 10, 153, 165, 180, 192, 195, 268, 270, 281, 287], "allocator_typ": [12, 93], "allow": [1, 7, 92, 172, 178, 244, 254, 274, 282, 285, 286, 287, 288, 290, 292], "allow_pickl": [2, 8], "almost": [149, 154, 215, 286], "along": [7, 282], "alongsid": 254, "alpha": 199, "alreadi": 245, "also": [1, 2, 4, 7, 179, 181, 275, 276, 281, 284, 285, 289, 290, 292], "alt": 150, "altern": [2, 181, 269, 271], "although": [282, 290], "alwai": [186, 247, 273, 275, 285, 286], "am": 286, "among": 7, "amount": [7, 254], "an": [1, 2, 7, 8, 10, 86, 150, 153, 172, 175, 177, 178, 181, 186, 193, 194, 195, 205, 207, 212, 213, 219, 220, 236, 238, 241, 244, 245, 246, 248, 249, 254, 255, 259, 261, 266, 267, 269, 271, 272, 273, 274, 276, 281, 284, 285, 286, 287, 289, 290, 292], "analogi": 286, "analys": 288, "analysi": [2, 4, 274, 277, 281, 282, 285, 288], "analyz": [2, 247, 248, 250, 251, 274, 277, 288, 290], "andrei": 277, "ani": [4, 8, 163, 179, 212, 213, 214, 220, 244, 253, 254, 255, 271, 275, 282, 287], "annex": [163, 180, 188], "annot": 290, "anoth": [269, 271, 275, 284, 286, 287, 289, 290], "answer": [2, 281, 287], "anti": [244, 245, 273, 289, 290], "anul": [172, 205], "anyfram": [5, 17, 45, 73, 77, 88, 89, 96], "anypacket": [5, 22, 48, 73, 77, 86, 92, 96], "anyth": 249, "anywher": 274, "aoption": 292, "apach": 278, "api": [7, 174, 195, 197, 199, 284, 290], "app": 178, "appar": 284, "appear": 4, "append": 149, "appli": [4, 149, 150, 153, 163, 180, 188, 198, 221, 245, 257, 259, 263, 269, 274, 276, 281, 286, 287, 291], "applic": [149, 273, 275, 278, 287, 292], "apply_bsf": [163, 180], "approach": [181, 275, 280, 287, 288, 290], "approxim": 4, "ar": [1, 2, 4, 7, 8, 9, 10, 80, 92, 93, 95, 149, 150, 153, 154, 160, 161, 171, 173, 178, 180, 181, 186, 195, 197, 204, 206, 209, 213, 218, 221, 230, 231, 232, 236, 243, 244, 245, 247, 248, 252, 254, 259, 260, 265, 268, 269, 270, 271, 273, 274, 275, 276, 278, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292], "arang": [214, 215], "architectur": [4, 154, 285], "archiv": [179, 215], "archiveprefix": 277, "arg": [7, 8, 9, 10, 149, 150, 208, 268, 269, 270], "argpars": [9, 10, 149, 150, 268, 269, 270], "args_set": [9, 270], "argset": 149, "argument": [7, 150, 178, 181, 195, 205, 207, 209, 210, 211, 212, 216, 218, 221, 244, 245, 254, 268, 269, 271, 275, 276], "argumentpars": [9, 10, 149, 150, 268, 269, 270], "argv": 268, "aris": 282, "around": [4, 83, 149, 152, 179, 245, 253, 273, 275, 277, 286, 291], "arr": 8, "arrai": [2, 8, 40, 53, 84, 94, 99, 153, 160, 164, 166, 171, 178, 179, 185, 186, 190, 193, 194, 204, 214, 223, 224, 225, 226, 241, 269, 275, 281], "array_equ": [214, 215], "arxiv": [277, 292], "asctim": [9, 10, 270], "asfract": 194, "ask": [92, 277, 282, 287], "aspect": [174, 182, 209], "assert": [214, 215, 268, 269], "assess": 287, "assign": [243, 248, 249, 273], "async": [1, 9, 10, 150, 153, 244, 245, 248, 249, 251, 271, 273, 275, 276, 277, 283, 290, 292], "async_convert_fram": 1, "async_decode_packet": [1, 196], "async_demux_audio": 201, "async_demux_imag": 1, "async_demux_media": [196, 201], "async_demux_video": 196, "async_load_image_batch": [1, 9, 10], "async_load_image_batch_nvjpeg": 10, "async_preprocess": 271, "asynccontextmanag": 249, "asynchron": [7, 245, 271, 275, 276, 290], "asynchronous_my_func": 275, "asyncio": [150, 201, 243, 244, 245, 253, 275, 284, 290], "asynciter": [153, 243, 245, 248, 249, 251, 276], "asyncqueu": [245, 248, 255], "attach": [150, 176, 205, 207, 239, 245, 276, 285], "attempt": [4, 181, 247, 282, 284, 285], "attribut": [157, 160, 161, 162, 166, 171, 174, 176, 177, 182, 186, 187, 243, 247, 248, 250, 273], "audio": [5, 34, 73, 83, 87, 89, 92, 94, 96, 114, 119, 122, 127, 128, 137, 140, 143, 157, 158, 159, 160, 161, 162, 178, 181, 185, 188, 191, 193, 200, 205, 206, 210, 244, 269, 282, 285, 292], "audio_codec": [171, 178, 205, 269], "audio_decod": 171, "audio_encode_config": [159, 178], "audio_fram": 172, "audio_index": 269, "audio_packet": 269, "audio_stream_index": [171, 269], "audiocodec": [5, 39, 73, 77, 83, 96, 162, 169, 171, 178, 205], "audiodecod": 169, "audioencod": [5, 43, 73, 77, 87, 96, 178], "audioencodeconfig": [5, 50, 73, 77, 94, 96, 178, 189], "audioencoderptr": [5, 43, 73, 77, 87, 96], "audiofram": [5, 45, 73, 77, 89, 96, 158, 160, 172, 191, 193, 198], "audioframesptr": [5, 45, 53, 73, 77, 84, 89, 96, 129], "audiopacket": [5, 48, 73, 77, 92, 96, 158, 160, 171, 178, 188, 198, 200, 206, 208, 269], "audiopacketsptr": [5, 48, 73, 77, 92, 96, 141], "author": [277, 292], "auto": 84, "auto_stop": [8, 9, 149, 150, 244, 270, 273, 281, 291], "autograd": 268, "automag": 292, "automat": [1, 7, 178, 244, 273, 278], "autotun": 10, "av": 178, "av1": [5, 33, 73, 94, 96], "avail": [1, 92, 153, 163, 178, 188, 209, 233, 244, 247, 260, 265, 268, 270, 271, 278, 281, 282, 285, 286, 289, 291], "avcodecid": 94, "avcodecparamet": [13, 83], "ave_get_tim": [150, 247], "ave_put_tim": [150, 247], "ave_tim": [9, 150, 250, 270, 285], "averag": [4, 247, 250, 288], "avformatcontext": [80, 100], "avfram": [89, 92, 173], "aviocontext": 80, "avmediatyp": 94, "avoid": [2, 7, 277, 281, 291], "avpacket": [21, 92, 181], "avrat": [5, 50, 73, 74, 94, 96, 146], "awai": [80, 83, 284], "await": [9, 10, 150, 153, 196, 244, 245, 275, 284], "awar": [7, 278, 281, 290], "b": [163, 180, 188, 191, 218, 241], "back": [254, 269, 275, 281, 285], "backbon": 10, "background": [2, 153, 181, 244, 273, 275, 276, 278, 281, 284], "backward": [4, 287], "bandwidth": [282, 290], "base": [2, 4, 5, 7, 18, 73, 92, 96, 151, 178, 197, 199, 249, 257, 259, 263, 265, 271, 277, 280, 281, 282, 292], "basecontext": 155, "baselin": [2, 4, 149], "bash": 9, "basic": [3, 215, 244, 245, 281], "basicconfig": [9, 10, 150, 268, 270], "batch": [1, 4, 9, 10, 54, 84, 149, 153, 154, 180, 191, 212, 213, 218, 252, 270, 275, 276, 279, 285, 286, 287, 289, 291], "batch_decod": 9, "batch_sampl": 155, "batch_siz": [9, 10, 149, 153, 155, 275, 281, 291], "batchifi": [1, 153], "becaus": [2, 281, 284, 285, 286, 292], "becom": [2, 4, 153, 244, 247, 281, 282, 284, 285, 286, 287, 289], "bed": 292, "been": [2, 254], "befor": [2, 10, 149, 153, 180, 241, 245, 247, 249, 252, 254, 265, 266, 269, 275, 281, 284, 285, 286, 287, 289, 291], "begin": [84, 266, 270], "behavior": [4, 7, 89, 153, 179, 189, 196, 201, 209, 241, 248, 251, 265, 271], "behind": 266, "being": [244, 249, 273, 276, 290], "believ": 282, "bellow": [2, 149, 180], "below": 286, "benchmark": [2, 8, 9, 10, 149, 268, 270, 281, 292], "benefit": 282, "best": [277, 282], "better": [93, 280], "between": [80, 248, 275, 276, 281, 284, 285], "beyond": [281, 290], "bf": [163, 188], "bf16": 10, "bfloat16": 10, "bgr": [194, 197, 199, 217], "bgr24": [194, 221], "bgra": 199, "bibtex": 277, "bicub": 209, "bigger": 271, "bin": [8, 9, 149, 150, 269], "binari": [8, 278], "bind": [275, 278], "bit": [2, 53, 55, 84, 161, 180, 188, 189, 193, 194, 206, 221, 241, 281, 284], "bit_rat": [94, 181, 189, 241], "bits_per_sampl": 181, "bitstream": [92, 163, 188], "blob": 94, "block": [9, 10, 165, 192, 245, 247, 248, 266, 270, 273, 276, 284, 285, 286], "blog": 277, "bool": [5, 8, 10, 11, 12, 15, 22, 73, 81, 86, 90, 93, 96, 104, 149, 153, 155, 163, 171, 212, 214, 217, 218, 219, 230, 231, 232, 240, 245, 252, 253, 254, 266], "boost": [2, 281], "both": [149, 254, 275, 281, 285], "bottleneck": [2, 7, 152, 243, 252, 274, 277, 282, 285, 286, 287, 288, 292], "bottom": 222, "bound": [1, 289, 290], "boundari": 2, "box": 292, "bp": [9, 270], "branch": [2, 214], "break": [1, 9, 10, 149, 268, 270], "breakdown": 4, "bsd": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270, 278], "bsf": [5, 15, 32, 39, 48, 73, 75, 77, 86, 96, 148, 180, 188], "bsfimpl": 81, "bsftemplat": [74, 96], "bt2020": 218, "bt2020c": 218, "bt470": 218, "bt601": 218, "bt709": [218, 241, 269], "bucket": 276, "buf": 8, "buffer": [1, 9, 10, 32, 40, 45, 49, 50, 52, 75, 84, 89, 94, 96, 99, 112, 148, 149, 150, 153, 158, 160, 161, 163, 164, 171, 172, 176, 180, 183, 185, 186, 190, 191, 192, 197, 199, 201, 204, 207, 210, 211, 212, 213, 214, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 240, 243, 244, 245, 248, 254, 268, 269, 270, 273, 276, 281, 283, 285, 286], "buffer_arg": 269, "buffer_s": [5, 8, 9, 10, 73, 94, 96, 102, 150, 153, 201, 240, 243, 245, 248, 254, 270], "buffer_size_in_kb": [23, 95], "buffersink": [172, 207, 269], "build": [1, 7, 8, 9, 10, 94, 149, 150, 178, 205, 207, 244, 245, 255, 269, 270, 271, 272, 274, 275, 276, 277, 281, 285, 291, 292], "build_compon": 269, "build_pipelin": 150, "builder": [149, 255, 275], "built": [270, 278, 285], "bulk": [2, 92], "bundl": [2, 8, 10], "byte": [1, 2, 8, 80, 171, 192, 197, 200, 202, 203, 210, 211, 212, 213, 214, 215, 216, 222, 240, 270, 275, 276, 281, 291], "bytearrai": 214, "bytesadaptor": [5, 36, 73, 77, 80, 96, 108], "bytesadaptorstruct": [74, 96], "bytesio": [2, 8, 214], "c": [2, 7, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 180, 191, 194, 197, 201, 215, 268, 269, 270, 271, 277, 278], "cabl": 290, "cach": [152, 219, 252, 275, 278, 288, 289], "cache_iter": [152, 287], "cachedataload": [2, 4, 287], "caching_allocator_alloc": [9, 10, 195, 268, 270], "caching_allocator_delet": [9, 10, 195, 268, 270], "calcul": 281, "call": [2, 178, 180, 181, 214, 243, 244, 245, 248, 249, 251, 252, 266, 269, 284, 290, 291], "callabl": [8, 10, 153, 155, 195, 245, 254, 255, 270, 275, 276], "callback": [150, 248, 251, 253, 276], "can": [1, 2, 4, 7, 9, 80, 94, 149, 150, 152, 154, 160, 161, 162, 169, 171, 172, 176, 177, 178, 180, 186, 187, 192, 195, 201, 205, 206, 207, 209, 214, 218, 237, 244, 245, 248, 249, 251, 252, 254, 271, 273, 274, 275, 276, 278, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292], "cancel": [244, 276, 284], "cannot": [2, 4, 7, 236, 273, 281, 284, 285], "capac": [271, 282], "captur": 243, "care": 290, "carefulli": 284, "carri": [83, 92, 274], "case": [4, 7, 8, 83, 160, 178, 180, 215, 254, 270, 271, 275, 277, 281, 284, 285, 286, 287, 288, 290], "case_studi": 8, "cast": [153, 164, 166], "caught": 249, "caus": [94, 181, 244, 245, 273, 286, 290], "caveat": [176, 244, 245, 272], "cd": [9, 270], "center": 209, "certain": [2, 181, 275, 287], "cfg": [14, 85, 196, 201], "chain": 286, "chanc": [281, 282], "chang": [3, 4, 94, 149, 197, 199, 206, 209, 213, 218, 221, 271, 278, 280, 281, 282, 285, 287], "channel": [157, 160, 161, 162, 186, 189, 191, 193, 194, 199, 204, 206, 217, 221, 270], "channel_layout": [157, 172], "char": [72, 89, 95], "characterist": 241, "check": [230, 231, 232, 274, 278, 281, 286, 290], "chip": 180, "choic": [2, 10, 181, 259, 284], "choos": [249, 265, 278, 284, 292], "chose": 196, "christian": 277, "chunk": [2, 222, 269], "cite": 277, "cl": [1, 149], "clang": 278, "class": [2, 5, 7, 33, 34, 35, 81, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 109, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 242, 243, 244, 245, 247, 248, 249, 250, 251, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 269, 273, 274, 275, 277, 280, 281, 285, 291], "class_map": 260, "classif": [1, 277, 281, 289], "classifi": 10, "cleanli": 284, "clearli": 286, "cli": [8, 9, 10, 94, 149, 268, 270], "click": [8, 9, 10, 149, 150, 268, 269, 270], "client": 276, "clone": [5, 10, 45, 73, 77, 89, 96, 161, 162, 176, 177, 186, 187], "close": [5, 20, 73, 91, 96, 150, 178, 247, 284, 285], "closur": 7, "cloud": 291, "clss": 281, "cmake": 278, "code": [2, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 181, 266, 267, 268, 269, 270, 271, 273, 275, 278, 281, 282, 284, 285], "codec": [5, 11, 14, 15, 20, 32, 37, 41, 42, 48, 50, 73, 75, 77, 81, 85, 86, 91, 92, 96, 106, 113, 114, 115, 148, 157, 162, 163, 169, 171, 174, 177, 178, 180, 181, 182, 187, 205, 207, 278], "codec_config": [20, 91], "codecclass": [74, 96], "codecid": [5, 13, 50, 73, 77, 83, 94, 96], "codecidenum": [74, 96], "codecpar": 83, "coeff": [217, 218], "coeffici": 218, "collat": [149, 154, 275, 281, 285, 291], "collate_fn": [149, 155], "collect": [2, 8, 9, 10, 149, 150, 179, 181, 239, 247, 248, 250, 251, 270, 272, 273, 277, 285, 290], "collector": 273, "color": [186, 191, 198, 209, 217, 218, 241], "color_primari": [94, 241, 269], "color_primmari": 241, "color_trc": [94, 241, 269], "colorspac": [94, 241, 269], "com": [7, 94, 270], "combin": [1, 2, 210, 211, 212, 216, 236, 244, 245, 272], "come": [281, 282], "command": [150, 178, 254, 268, 269, 278], "common": [4, 83, 89, 186, 198, 236, 280, 286, 290], "commonli": 281, "commun": [2, 154, 281, 286], "compar": [149, 152, 252, 280, 285], "comparison": 149, "compat": [1, 2, 174], "compil": [10, 230, 231, 232, 237, 278, 287], "complet": [153, 218, 245, 249, 252, 254, 271, 274, 281, 284, 285, 287, 289], "complex": 7, "compon": [1, 186, 278, 281, 284, 292], "comport": 275, "compos": [149, 153, 276, 277, 281, 284, 286, 290], "composit": [1, 277, 281, 282, 288], "compress": [2, 8, 187, 189, 241], "compression_level": [94, 189, 241], "compris": 186, "comput": [4, 10, 192, 282, 286, 287, 289, 292], "computation": 291, "con": 279, "conceptu": 281, "concurr": [1, 2, 7, 8, 9, 10, 149, 150, 153, 244, 245, 247, 270, 272, 275, 277, 279, 281, 282, 285, 288, 291, 292], "condit": [214, 275, 278], "conduct": [289, 292], "config": [5, 8, 23, 73, 95, 96, 171, 178, 196, 198, 201, 220, 222, 269], "configur": [9, 149, 159, 168, 170, 178, 180, 184, 212, 227, 244, 268, 269, 271, 281, 282], "confus": 4, "connect": [245, 276], "consequ": [284, 285], "consid": [282, 284], "consider": 284, "consist": [1, 4, 244, 249, 270, 275, 281, 285, 286], "consol": [248, 251], "const": [5, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 40, 42, 52, 53, 55, 59, 60, 61, 62, 71, 72, 73, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 104, 106, 108, 109], "constrain": 7, "constraint": [271, 275, 284, 291, 292], "construct": [7, 92, 94, 172, 205, 206, 207, 209, 221, 270, 273, 275, 290, 291, 292], "constructor": 7, "consum": [4, 80, 193, 194, 247, 273, 281, 285, 286, 289, 290, 291], "consumpt": [154, 285], "contain": [9, 92, 162, 171, 177, 187, 201, 214, 222, 259, 261, 270, 273, 278, 281, 285], "content": 209, "context": [83, 178, 243, 244, 248, 249, 254, 255, 268, 271, 273, 275, 284, 285, 292], "contextlib": [10, 150, 249, 268], "contextmanag": 249, "contigu": [99, 173, 281], "continu": [265, 269, 270, 274], "control": [254, 284, 290], "convent": [1, 273, 275], "convers": [2, 10, 32, 38, 45, 50, 53, 54, 55, 56, 75, 96, 148, 186, 198, 218, 221, 269, 281, 285], "convert": [1, 7, 94, 149, 153, 160, 161, 163, 172, 176, 180, 185, 186, 188, 190, 191, 206, 218, 222, 223, 224, 225, 226, 241, 245, 266, 267, 269, 275, 276, 281], "convert_fram": [1, 5, 40, 73, 77, 84, 96, 149, 150, 153, 171, 192, 210, 211, 212, 216, 269, 270, 281], "convertible_to": [90, 104, 105], "convin": 178, "convolut": 284, "cooper": 284, "copi": [2, 94, 154, 181, 214, 275, 281], "copyright": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270], "core": [4, 5, 12, 31, 33, 34, 35, 73, 74, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 108, 109, 148, 156, 275, 290], "corefil": [75, 96], "corenamespac": [74, 96], "coro": 253, "coroutin": [46, 90, 253, 275, 284], "coroutine_handl": [90, 104], "coroutinu": 284, "corpor": 278, "correct": 236, "correspond": [9, 94, 178, 186, 189, 193, 194, 195, 236, 260, 284, 285], "cost": [2, 282, 287], "could": [4, 94, 276, 289], "count": [181, 273, 285], "counter": [65, 95, 237], "coupl": [2, 281], "cours": 285, "cover": [3, 162, 187, 209, 244, 245, 278, 282], "cpp": 84, "cpu": [2, 4, 99, 165, 192, 204, 227, 228, 268, 270, 282, 289, 290, 291, 292], "cpu_buff": [5, 38, 73, 77, 82, 96, 153], "cpu_storag": [153, 165, 190, 191], "cpubuff": [5, 38, 52, 73, 77, 82, 96, 112, 153, 190, 191, 210, 211, 212, 216, 223, 224, 225, 226, 227, 228, 281], "cpubufferptr": [5, 38, 52, 54, 56, 73, 77, 82, 84, 96], "cpubufferstruct": [74, 96], "cpustorag": [5, 40, 49, 52, 73, 77, 82, 84, 93, 96, 99, 109, 190, 191, 192, 212], "cpustoragetempl": [74, 96], "crash": 236, "creat": [2, 9, 52, 80, 83, 86, 149, 150, 153, 154, 176, 178, 180, 181, 193, 194, 214, 219, 245, 254, 255, 269, 270, 273, 274, 275, 277, 281, 290, 291, 292], "create_model": 10, "create_reference_audio_fram": [5, 40, 73, 77, 84, 96, 160], "create_reference_video_fram": [5, 40, 73, 77, 84, 96, 185, 269], "creation": [1, 180, 254, 281, 289], "criteria": 265, "critic": 181, "crop": [180, 199, 209], "crop_bottom": [180, 199], "crop_height": [10, 209], "crop_left": [180, 199], "crop_right": [180, 199], "crop_top": [180, 199], "crop_width": [10, 209], "cstddef": [38, 49, 82, 93], "cstdint": [49, 50, 93, 94], "cuda": [9, 10, 149, 153, 166, 167, 180, 197, 204, 210, 211, 212, 213, 216, 218, 222, 224, 226, 227, 228, 230, 268, 270, 275, 278, 287], "cuda_array_interfac": 224, "cuda_buff": 153, "cuda_config": [9, 10, 153, 167, 180, 192, 199, 268, 270, 276], "cuda_device_index": 153, "cuda_index": 268, "cuda_stream": [153, 192, 195, 268], "cudabuff": [153, 180, 197, 199, 210, 211, 212, 213, 216, 217, 218, 222, 224, 226, 227, 228], "cudaconfig": [9, 180, 195, 197, 199, 210, 212, 213, 216, 217, 218, 222, 227, 268], "cudastorag": 93, "cum": 277, "current": [221, 234, 281, 289, 292], "current_except": 90, "currentmodul": 150, "custom": [95, 150, 171, 189, 195, 196, 198, 201, 204, 238, 241, 245, 249, 272, 278], "customqueu": 150, "customtaskhook": 150, "cuviddec": 278, "cvdfoundat": 270, "cycl": 284, "d": [9, 10, 270], "d_empti": 285, "d_measur": 285, "daemon": 254, "data": [1, 3, 4, 5, 7, 9, 10, 12, 53, 55, 57, 73, 80, 82, 84, 86, 92, 93, 96, 98, 99, 107, 109, 149, 150, 151, 152, 153, 154, 160, 161, 162, 171, 176, 177, 178, 179, 181, 186, 187, 189, 192, 193, 194, 195, 197, 204, 206, 214, 215, 221, 227, 228, 236, 241, 243, 244, 245, 247, 249, 252, 257, 263, 269, 270, 271, 273, 274, 275, 276, 278, 280, 281, 282, 284, 287, 288, 289, 290, 291, 292], "data_": 93, "data_format": [2, 8], "data_readi": 285, "databas": 274, "dataclass": [9, 245, 270, 276], "datainterfac": [5, 36, 73, 77, 80, 96, 110], "datainterfaceptr": [5, 15, 36, 73, 77, 80, 86, 96, 98, 108], "datainterfacestruct": [74, 96], "dataload": [4, 10, 149, 273, 275, 276, 277, 279, 282, 286, 287], "dataset": [2, 10, 149, 150, 154, 155, 256, 258, 259, 270, 277, 280, 281, 285, 291], "dataset_dir": 150, "dataset_directori": 281, "datasourc": 8, "date": 278, "dbl": [161, 189, 193, 206], "dblp": [193, 206], "dc": 277, "dead": 273, "deadlock": [244, 245, 273], "deal": 4, "dealloc": 93, "deallocator_typ": [12, 93], "debug": [9, 10, 92, 236, 254, 270], "decai": 2, "decid": [249, 281, 284, 288], "decod": [1, 5, 9, 10, 18, 24, 32, 39, 45, 48, 50, 73, 75, 77, 83, 92, 94, 96, 101, 116, 148, 149, 150, 153, 158, 162, 163, 168, 173, 175, 177, 178, 181, 183, 186, 187, 188, 191, 197, 198, 199, 205, 207, 212, 213, 219, 220, 222, 244, 269, 275, 276, 277, 278, 279, 285, 290, 291, 292], "decode_": 268, "decode_and_flush": [5, 14, 73, 85, 96], "decode_and_preprocess": 1, "decode_concurr": 270, "decode_config": [168, 169, 198, 210, 211, 212, 216, 220], "decode_fn": 270, "decode_func": 10, "decode_imag": [1, 10, 149, 153, 281], "decode_images_nvjpeg": 10, "decode_packet": [149, 150, 153, 169, 181, 192, 210, 211, 212, 216, 220, 270, 281], "decode_packets_nvdec": [180, 270], "decode_video": 270, "decode_video_nvdec": 270, "decodeconfig": [5, 14, 50, 73, 77, 85, 94, 96, 169, 196, 198, 210, 211, 212, 216, 220], "decodeconfigstruct": [74, 96], "decoder_opt": [5, 73, 94, 96, 101, 196], "decoderclass": [74, 96], "decoderimpl": [5, 41, 73, 78, 85, 96], "decoderimpltempl": [74, 96], "decoderptr": [5, 41, 73, 77, 85, 96], "decomposit": 1, "decompress": 286, "decor": 249, "decord": 7, "decreas": [2, 149], "dedic": [4, 275], "deduc": 281, "def": [1, 7, 8, 9, 10, 149, 150, 153, 204, 244, 249, 268, 269, 270, 271, 273, 275, 276, 281, 291], "default": [7, 9, 10, 12, 13, 80, 83, 86, 90, 92, 93, 100, 104, 106, 108, 109, 149, 150, 153, 171, 172, 186, 196, 198, 199, 206, 209, 214, 218, 219, 241, 244, 245, 248, 251, 252, 254, 265, 268, 270, 271, 272, 278, 281, 292], "default_alloc": [12, 93], "default_col": [149, 281], "default_dealloc": [12, 93], "defin": [5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 33, 34, 35, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 89, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 152, 154, 245, 275, 276, 285, 290], "definit": [94, 148, 255], "degrad": [2, 4, 274, 292], "degre": [2, 149, 287], "del": 252, "delai": 273, "deleg": [7, 245], "delet": [11, 12, 14, 16, 17, 20, 23, 81, 85, 87, 88, 89, 90, 91, 93, 95, 104, 181, 195, 273], "delete_src": 252, "delta": [248, 251], "demand": [282, 285], "demonstr": [180, 222, 273], "demux": [1, 5, 22, 32, 36, 39, 46, 48, 50, 57, 58, 73, 75, 77, 80, 83, 92, 96, 117, 118, 148, 162, 163, 169, 170, 178, 180, 181, 187, 200, 201, 202, 203, 205, 206, 207, 209, 212, 222, 269], "demux_audio": [171, 210], "demux_config": [170, 171, 200, 202, 203, 210, 211, 212, 216], "demux_imag": [149, 153, 171, 181, 192, 211, 212, 281], "demux_video": [150, 171, 180, 181, 188, 211, 216, 270], "demux_window": [5, 15, 73, 86, 92, 96], "demuxconfig": [5, 42, 50, 73, 77, 80, 86, 94, 96, 98, 108, 171, 200, 201, 202, 203, 210, 211, 212, 216], "demuxconfigtempl": [74, 96], "demuxerimpl": [22, 86], "demuxerptr": [5, 42, 57, 58, 73, 77, 86, 96], "demuxertempl": [74, 96], "den": [5, 73, 94, 96, 97], "denomin": [97, 157, 174, 182, 187, 194], "denot": [162, 187], "depend": [2, 236, 277, 284, 287], "deploi": 275, "depth": [5, 52, 73, 82, 96, 99], "deriv": [5, 73, 96], "desc": 198, "describ": [1, 2, 149, 291], "descript": [9, 10, 150, 153, 172, 188, 198, 205, 206, 207, 209, 212, 220, 236, 268, 269, 270], "descriptor": 240, "deseri": [2, 281], "design": [181, 274, 281, 284, 292], "dest": 10, "destin": [178, 248, 251, 274], "destroi": [90, 290], "destruct": 290, "destructor": 92, "detach": 284, "detail": [2, 4, 5, 8, 16, 22, 37, 41, 42, 43, 44, 47, 73, 77, 81, 84, 85, 86, 87, 88, 91, 96, 152, 158, 175, 178, 183, 190, 214, 220, 222, 236, 244, 245, 249, 270, 271, 274, 277, 281, 283, 287], "detailtempl": [74, 96], "determin": [1, 265, 271, 274, 287, 288], "develop": [236, 270, 282, 288, 292], "deviat": 10, "devic": [9, 10, 153, 166, 167, 180, 192, 195, 197, 199, 204, 210, 211, 212, 213, 216, 218, 222, 227, 268, 270, 275], "device_config": [9, 10, 197, 199, 210, 211, 212, 213, 216, 217, 218, 222, 227, 268, 270], "device_count": 268, "device_index": [9, 10, 153, 166, 180, 192, 195, 268, 270, 276], "devicendarrai": 224, "devx": 292, "di": [15, 86], "diagram": [149, 244, 249, 254, 269, 271, 276, 284, 285], "dict": [8, 150, 171, 176, 178, 196, 201, 222, 235, 255, 260, 268], "dictionari": [2, 179], "did": 4, "differ": [1, 2, 4, 8, 80, 89, 149, 154, 161, 178, 179, 180, 186, 209, 214, 275, 280, 281, 282, 284, 285, 286, 287, 290], "difficult": [280, 289], "dim": [10, 84], "dimension": 171, "dir": [10, 149, 150, 268], "direct": 278, "directli": [1, 2, 92, 197, 199, 269, 281, 282, 285], "directori": [8, 9, 10, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 149, 150, 153, 259, 262, 268, 269, 270, 276], "disabl": [186, 198, 245, 268], "disaggreg": [245, 276, 282, 285, 291], "discard": [1, 281], "discret": [193, 194], "discuss": [2, 288], "dispatch": 275, "disrupt": 286, "distil": 80, "distinguish": 281, "distribut": [278, 286, 287], "divid": 290, "divis": [153, 209], "dl": 152, "dmx_cfg": [57, 58, 80, 86, 98, 108], "do": [2, 4, 7, 94, 153, 180, 244, 249, 269, 273, 278, 281, 282, 286, 291], "do_oper": 240, "doc": [225, 278], "document": [5, 73, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 178, 205, 207, 254, 278], "doe": [2, 153, 163, 181, 186, 193, 194, 201, 205, 207, 214, 236, 245, 254, 271, 273, 274, 275, 277, 281, 282, 286, 287, 291, 292], "domain": 2, "done": [5, 22, 73, 86, 90, 96, 180, 199, 244, 270], "doubl": [15, 22, 61, 86, 92, 106], "down": [1, 2, 290], "download": [1, 270, 271, 276, 278, 285, 288, 290, 291], "download_from_remot": 2, "downsid": 275, "downstream": [245, 247, 248, 285], "doxygen": 94, "drain": 269, "drawback": 282, "driven": 274, "drop": [4, 153, 154, 206, 209, 215, 245, 249, 275, 281, 285, 289, 291, 292], "drop_last": [10, 153, 155, 245], "dry": 268, "dst": 178, "dtype": [8, 10, 94, 179, 190, 193, 194, 204, 214, 221, 270], "dual": 278, "due": [1, 4, 154, 180, 181, 237, 275, 285, 291], "dump": [5, 17, 73, 88, 96], "durat": [15, 22, 86, 171, 201, 205, 207, 244, 247, 269, 285, 287], "dure": [186, 243, 278, 284, 285], "dynam": 278, "e": [7, 8, 178, 189, 193, 206, 247, 249, 268, 278, 284, 285], "each": [1, 2, 9, 80, 149, 154, 176, 180, 186, 187, 189, 199, 222, 243, 244, 245, 249, 265, 266, 269, 270, 275, 280, 285, 286, 290], "earlier": 276, "eas": 290, "easi": [2, 205, 207, 273, 275, 282, 284, 285, 287], "easier": [282, 287], "easili": 7, "effect": [4, 245, 275, 287, 289, 290], "effici": [1, 214, 215, 275, 282, 289, 291], "effort": [2, 4, 282], "either": [8, 204, 275, 276], "elabor": [254, 292], "elaps": [8, 9, 10, 149, 247, 268, 270, 285], "elast": 285, "elem_class": [5, 52, 73, 82, 96, 99], "elemclass": [5, 50, 52, 73, 77, 82, 94, 96, 99], "elemclassenum": [74, 96], "element": 99, "elimin": 289, "els": [2, 8, 9, 10, 94, 149, 268, 270], "embed": 266, "emploi": 181, "employe": 274, "empti": [180, 245, 247, 268, 285], "en": 224, "enabl": [9, 10, 240, 248, 251, 270, 278, 281, 290, 292], "enc_height": 269, "enc_pix_fmt": 269, "enc_width": 269, "encapsul": [80, 275, 284], "encod": [5, 20, 25, 32, 45, 47, 48, 50, 73, 75, 77, 83, 91, 92, 94, 96, 119, 120, 121, 122, 123, 148, 159, 160, 178, 184, 185, 189, 193, 194, 204, 241, 269, 270], "encode_config": 204, "encodeconfig": 204, "encodeconfigbas": [5, 20, 50, 73, 77, 91, 94, 96, 143, 145], "encodeconfigbasetempl": [74, 96], "encoder_config": [20, 91, 178], "encoderclass": [74, 96], "encoderimpl": [5, 16, 43, 73, 78, 87, 96], "encoderimplstruct": [74, 96], "encoderptr": [5, 20, 43, 73, 77, 87, 91, 96, 119, 121], "encount": [3, 4, 246, 284], "encourag": 284, "end": [158, 160, 162, 163, 172, 180, 183, 185, 187, 206, 209, 243, 245, 266, 269, 270, 273, 278, 292], "endif": 94, "engin": [2, 180, 242, 277, 292], "enhanc": 289, "enough": [4, 285, 290], "ensur": [2, 181, 274, 275, 281, 290], "enter": 254, "enter_context": 268, "entir": [2, 7, 171, 209, 245, 266, 280], "entri": 150, "entrypoint": [8, 9, 10, 149, 268, 269, 270], "enum": [5, 94, 148], "enumer": [9, 10, 33, 34, 35, 149, 270], "env": [8, 9, 149, 150, 269], "envelop": 281, "environ": [278, 281, 282, 292], "eoferror": 244, "epoch": [266, 267], "eprint": 277, "equip": 286, "equival": [214, 266, 267, 275, 280, 281], "eras": 84, "error": [9, 10, 80, 94, 149, 181, 212, 213, 220, 236, 246, 254, 270, 273, 275], "especi": 290, "essenti": 282, "estim": [2, 152, 252, 288, 289], "etc": 86, "eula": 278, "ev": [9, 270], "eval": 10, "even": [2, 4, 7, 181, 214, 249, 273, 281, 292], "event": [7, 9, 245, 270, 271, 273, 275, 276, 284, 290, 292], "ever": 94, "everi": [245, 282], "exactli": [245, 276], "examin": [285, 288], "examlpl": 150, "exampl": [1, 3, 7, 8, 9, 94, 149, 150, 153, 186, 195, 204, 214, 215, 236, 241, 249, 260, 265, 268, 269, 270, 271, 274, 275, 276, 277, 281, 285, 286, 290], "example_performance_analysis_tensorboard": 150, "exceed": [206, 209], "except": [5, 46, 73, 90, 96, 104, 105, 242, 246, 249, 261], "exception_ptr": [90, 104, 105], "excess": 209, "execut": [4, 7, 149, 153, 154, 181, 190, 214, 242, 243, 244, 245, 249, 250, 254, 266, 268, 271, 273, 275, 276, 281, 282, 284, 288, 290, 292], "executor": [7, 8, 245, 272, 292], "exhaust": [244, 245, 254, 265], "exhibit": [2, 285], "exist": [181, 276, 281, 287, 290, 292], "exit": [254, 273, 285], "exitstack": 268, "exmperiment": [197, 199], "exot": 2, "exp_spdl": 149, "exp_spdl_": 149, "exp_torch": 149, "exp_torch_": 149, "exp_torch_thread": 149, "expand": 10, "expect": [2, 10, 152, 160, 218, 252, 282, 292], "expens": 180, "experi": [4, 275, 286, 289, 292], "experienc": 285, "experiment": [197, 199, 213, 215, 254, 266], "explain": [244, 245, 247, 248, 250, 251, 274, 284], "explicit": [12, 13, 15, 16, 17, 21, 23, 83, 86, 87, 88, 90, 92, 93, 95, 104, 106, 284], "explicitli": [281, 284], "explor": 2, "export": [247, 248, 250, 251, 268, 274, 288, 292], "export_chrome_trac": [10, 268], "expos": [92, 150, 281, 285], "express": [157, 174, 182, 194, 205, 206, 207, 208, 209], "ext": 276, "extend": [150, 243, 248], "extens": [2, 7, 178, 278], "extern": [86, 94, 285], "extra": [2, 221, 275, 281], "extract": 269, "extract_packets_at_indic": [5, 48, 73, 77, 92, 96], "extrem": [236, 287], "f": [8, 9, 10, 149, 153, 178, 180, 201, 205, 207, 215, 244, 268, 269, 270, 275, 276], "facilit": [244, 270], "factor": [1, 285, 286, 287, 289, 290], "factori": [82, 150, 159, 165, 167, 168, 170, 178, 184, 198, 274], "fail": [1, 4, 212, 213, 220, 249, 250, 254, 275, 284], "failur": [245, 249, 254, 285], "fals": [2, 8, 9, 10, 11, 12, 81, 90, 93, 149, 153, 155, 163, 214, 217, 218, 245, 253, 254, 270], "famili": 278, "far": [93, 271], "fashion": [163, 180, 268, 269], "fast": [154, 285, 289, 292], "faster": [2, 4, 154, 214, 247, 271, 275, 277, 281, 285, 286, 292], "fastest": 292, "fatal": 236, "fcc": 218, "fd": [23, 95], "feasibl": [2, 291], "featur": [2, 10, 292], "fed": 241, "feed": 180, "feedback": 292, "fetch": [92, 160, 180, 185, 195, 247, 254, 269, 276, 278, 281, 284, 285], "few": [7, 281, 290], "fewer": 281, "ffmpeg": [18, 83, 84, 89, 94, 95, 163, 173, 178, 181, 188, 197, 199, 201, 205, 206, 207, 209, 234, 235, 236, 241, 278, 281], "ffmpeg_opt": 94, "fftool": 94, "field": [150, 274], "figur": [2, 4, 281, 285, 286, 287, 290, 292], "file": [2, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 153, 171, 178, 181, 186, 197, 204, 214, 215, 240, 244, 259, 262, 268, 269, 270, 274, 276, 277, 278, 281], "filenam": [9, 10], "fill": [90, 285, 286], "filter": [5, 11, 73, 81, 92, 96, 153, 163, 173, 180, 188, 193, 194, 198, 205, 206, 207, 208, 209, 212, 220, 233, 269], "filter_arg": [208, 269], "filter_desc": [10, 14, 17, 59, 85, 88, 149, 150, 153, 169, 172, 198, 205, 206, 207, 209, 210, 211, 212, 216, 220, 269, 270, 281], "filter_graph": [17, 32, 45, 59, 75, 96, 124, 148, 172, 205, 207, 269], "filtergraph": [5, 44, 73, 77, 88, 96, 124, 205, 207, 221, 269], "filtergraphimpl": 88, "filtergraphptr": [5, 44, 59, 73, 77, 88, 96], "filtergraphtempl": [74, 96], "final": [9, 10, 149, 180, 243, 248, 249, 269, 270, 273, 281], "final_suspend": [5, 73, 90, 96, 104, 105], "find": [9, 153, 270, 274, 277, 285, 290], "find_fil": 276, "fine": [275, 281], "finish": [254, 271, 289], "first": [89, 161, 180, 189, 193, 194, 209, 244, 261, 269, 273, 278, 281, 287], "fit": [280, 282, 292], "fix": [206, 209, 237, 285], "flamegraph": 290, "flexibl": [275, 282, 292], "flist": [9, 270], "float": [2, 5, 8, 9, 10, 35, 73, 94, 96, 149, 150, 153, 155, 161, 162, 171, 176, 187, 189, 193, 200, 203, 206, 209, 210, 216, 237, 244, 245, 247, 248, 250, 251, 254, 255, 265, 270], "flow": [273, 274, 284], "flt": [161, 189, 193, 206], "fltp": [189, 193, 206], "flush": [5, 11, 14, 16, 17, 20, 73, 81, 85, 87, 88, 91, 96, 158, 160, 163, 169, 172, 178, 180, 183, 185, 269], "flv": 178, "fmt": [9, 10, 270, 278], "fn": [153, 254], "focu": 287, "follos": 254, "follow": [1, 2, 4, 7, 9, 10, 149, 150, 154, 181, 189, 193, 194, 195, 204, 218, 221, 236, 244, 249, 254, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 281, 284, 285, 286, 287, 289, 290, 291, 292], "foo": [163, 169, 171, 181, 188, 204, 205], "footprint": 281, "foreground": [10, 284, 285], "forev": [249, 252], "forget": 273, "fork": 149, "form": 187, "format": [3, 5, 7, 9, 10, 73, 94, 96, 102, 153, 157, 161, 174, 176, 177, 178, 180, 182, 186, 187, 189, 193, 194, 197, 198, 199, 201, 204, 205, 206, 207, 209, 212, 213, 214, 218, 221, 222, 236, 241, 269, 270, 275, 277, 281, 285], "format_opt": [5, 73, 94, 96, 102, 201], "formatter_class": [9, 10], "formula": 218, "forth": 275, "fortran": 214, "forward": [4, 10, 90, 287], "found": [2, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 214, 236, 254, 259, 261, 268, 269, 270, 275], "four": 285, "fp": [9, 10, 270], "fraction": [157, 174, 182], "frame": [1, 5, 9, 17, 26, 27, 28, 32, 38, 40, 41, 43, 44, 50, 60, 73, 75, 77, 84, 85, 87, 88, 92, 96, 125, 126, 127, 128, 129, 130, 131, 132, 148, 149, 150, 153, 158, 160, 161, 169, 171, 172, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 191, 192, 193, 194, 196, 198, 199, 205, 206, 207, 209, 212, 213, 220, 222, 241, 268, 269, 270, 276, 281], "frame_r": [13, 55, 81, 83, 84, 94, 182, 187, 194, 209, 241, 269], "frame_s": 160, "frames0": 172, "frames1": 172, "framesclass": [74, 96], "framesptr": [5, 14, 16, 45, 60, 73, 77, 85, 87, 89, 96, 125, 128, 130], "free": [4, 195, 275, 277, 281, 282, 292], "free_thread": 278, "frequent": 277, "friend": 92, "from": [1, 3, 4, 7, 8, 9, 10, 80, 83, 86, 90, 92, 104, 105, 149, 150, 152, 153, 163, 171, 172, 173, 176, 178, 179, 180, 181, 190, 192, 199, 200, 202, 203, 206, 209, 210, 211, 212, 214, 216, 220, 222, 235, 244, 245, 247, 248, 249, 252, 254, 255, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 279, 282, 284, 285, 286, 287, 291, 292], "from_numpi": 8, "from_promis": 90, "fromarrai": 268, "fromfil": 214, "front": 278, "ft": 278, "fulfil": 284, "full": [90, 273, 285], "fullscreen": 178, "func": [8, 9, 10, 149, 268, 269, 270], "function": [1, 4, 5, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 80, 82, 98, 99, 100, 104, 105, 106, 108, 109, 148, 151, 152, 153, 154, 156, 159, 164, 165, 166, 167, 168, 170, 172, 173, 178, 180, 181, 184, 190, 192, 193, 194, 195, 198, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 229, 241, 242, 245, 252, 255, 258, 259, 264, 271, 273, 274, 275, 276, 277, 281, 282, 284, 285, 288, 289, 292], "functool": [150, 254, 275, 276], "further": [1, 193, 194], "futur": [7, 8, 236, 245, 282], "g": [7, 178, 189, 218, 268], "gael": 277, "gain": [152, 252, 288, 289], "garbag": [181, 239, 273], "gather": 285, "gcc": 278, "gen": 86, "geneartor": 245, "gener": [2, 5, 8, 9, 21, 32, 42, 48, 73, 74, 75, 77, 86, 92, 96, 148, 152, 153, 154, 155, 160, 181, 185, 190, 198, 201, 214, 242, 244, 245, 249, 253, 254, 265, 270, 275, 281, 284, 285], "generatorstruct": [74, 96], "get": [2, 4, 10, 86, 89, 149, 172, 208, 233, 234, 235, 243, 244, 247, 248, 260, 265, 269, 273, 277, 281, 284, 288], "get_abuffer_desc": 172, "get_audio_filter_desc": [198, 208], "get_bit_r": [5, 13, 73, 83, 96], "get_bits_per_sampl": [5, 13, 73, 83, 96], "get_buffer_desc": 172, "get_channel_layout": [5, 13, 73, 83, 96], "get_codec": [5, 11, 73, 81, 96], "get_codec_id": [5, 13, 73, 83, 96], "get_dataload": 10, "get_decode_func": 10, "get_default_codec": [5, 15, 73, 86, 96], "get_default_stream_index": [5, 15, 73, 86, 96], "get_ffmpeg_filt": [5, 51, 73, 77, 95, 96], "get_ffmpeg_log_level": [5, 51, 73, 77, 95, 96], "get_ffmpeg_vers": [5, 51, 73, 77, 95, 96], "get_filter_desc": [150, 153, 198, 269, 270], "get_fmt_ctx": [5, 73, 80, 96, 100], "get_fram": [5, 17, 73, 88, 89, 96, 172, 205, 207, 269], "get_frame_r": [5, 13, 73, 83, 96], "get_frame_s": [5, 16, 73, 87, 96], "get_handle_for_remot": 2, "get_height": [5, 13, 73, 83, 89, 96], "get_id": 89, "get_interfac": [5, 73, 80, 96, 98, 108], "get_item": [244, 284], "get_iter": [9, 244, 270, 273, 291], "get_map": 259, "get_media_format_nam": 89, "get_metadata": 89, "get_mock_data": 8, "get_model": 10, "get_nam": [5, 13, 73, 83, 96], "get_nowait": 284, "get_num_channel": [5, 13, 73, 83, 89, 96], "get_num_fram": 89, "get_num_plan": 89, "get_packet": [5, 21, 73, 92, 96], "get_paramet": [5, 13, 73, 83, 96], "get_pipelin": [8, 9, 270, 273], "get_pix_fmt": [5, 13, 73, 83, 96], "get_pt": [5, 48, 73, 77, 89, 92, 96], "get_pytorch_dataload": 154, "get_return_object": [5, 73, 90, 96, 104, 105], "get_running_loop": [150, 275], "get_sample_aspect_ratio": [5, 13, 73, 83, 96], "get_sample_fmt": [5, 13, 73, 83, 96], "get_sample_r": [5, 13, 73, 83, 89, 96], "get_siz": 93, "get_time_bas": [5, 13, 73, 83, 89, 96], "get_video_filter_desc": [10, 149, 198, 208, 281], "get_width": [5, 13, 73, 83, 89, 96], "getlogg": [9, 10, 149, 270], "getter": 83, "getvalu": 214, "gflag": 278, "gil": [2, 4, 215, 274, 275, 277, 281, 282, 292], "github": [94, 270], "give": [2, 180, 245, 266, 281, 282, 290, 292], "given": [8, 9, 10, 86, 149, 150, 152, 158, 175, 180, 183, 190, 193, 194, 199, 204, 208, 209, 218, 221, 227, 228, 244, 245, 249, 252, 254, 255, 265, 268, 270, 271, 275, 276], "glob": [153, 276], "global": [7, 254], "global_step": 150, "glog": [95, 278], "go": [1, 254, 274, 281, 282, 286, 290], "goal": [285, 288, 289, 292], "goe": 273, "gokul": 277, "good": [4, 273, 281, 282, 287], "gop": 241, "gop_siz": [94, 241], "govern": [2, 286], "gpl": 278, "gpu": [2, 4, 9, 10, 149, 153, 180, 190, 192, 197, 199, 227, 268, 275, 276, 278, 281, 285, 286, 289, 290, 291, 292], "gpu_transf": [285, 291], "grai": 221, "granular": 290, "graph": [172, 193, 194, 205, 207, 269, 287], "gray16": 194, "gray16b": 221, "gray16l": 221, "gray8": [194, 204, 209], "grayscal": 194, "great": 4, "group": 292, "grow": 281, "guarante": [187, 292], "guid": [3, 150, 274, 277], "gunasekaran": 277, "gz": 268, "h": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 178, 191, 194, 197, 218, 269, 270, 278], "h264": [5, 33, 73, 94, 96, 163, 180, 188], "h_": [5, 73, 90, 96, 104], "ha": [2, 154, 171, 172, 180, 198, 206, 209, 245, 247, 249, 254, 275, 281, 284, 285], "had": [247, 286], "halt": 245, "hand": [149, 285], "handi": 92, "handl": [2, 4, 7, 10, 160, 209, 243, 248, 275], "handle_typ": [5, 73, 90, 96, 104], "handler_stop_sign": [9, 270], "handrol": 10, "hang": 273, "happen": [94, 180, 273, 281, 286, 290], "hard": 278, "hardwar": [178, 180, 270, 275, 278, 291], "has_audio": [5, 15, 73, 86, 96, 171], "hasattr": [267, 275], "have": [1, 4, 163, 198, 201, 245, 254, 271, 275, 282, 284, 286, 287, 290], "head": 10, "header": [83, 92, 94, 201, 214, 236, 278], "headspac": [2, 4, 277, 288], "height": [9, 10, 94, 150, 153, 174, 176, 177, 181, 182, 186, 187, 191, 192, 199, 204, 209, 212, 213, 218, 221, 222, 241, 268, 269, 270, 276], "held": 2, "help": [2, 149, 192, 243, 254, 268, 275, 281, 285, 286, 287, 292], "helper": [1, 92, 152, 172], "here": [8, 9, 10, 149, 150, 160, 180, 249, 254, 268, 269, 270, 273, 281, 282, 285], "hevc": [5, 33, 73, 94, 96, 180], "hfile": [75, 96], "hide": [266, 278], "high": [2, 7, 281, 282, 289, 292], "higher": [149, 270, 280, 281, 285, 286], "highest": 2, "highli": [4, 292], "hira": 277, "hira2025scalableperformantdataload": 277, "hit": 289, "hold": [2, 18, 163, 173, 181, 274, 277, 281], "home": [30, 31, 32, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 148, 149], "hook": [245, 249], "hook_factori": 150, "hour": 287, "how": [2, 8, 149, 150, 180, 209, 222, 244, 245, 247, 248, 249, 250, 251, 268, 269, 271, 273, 274, 275, 276, 277, 280, 281, 282, 284, 287, 288, 289, 290], "howev": [2, 4, 7, 154, 181, 186, 214, 236, 249, 278, 284, 289, 291], "html": [8, 94, 150, 163, 178, 188, 205, 207, 209, 224, 225], "http": [7, 86, 94, 163, 178, 188, 205, 207, 209, 224, 225, 241, 270, 277, 292], "huge": 281, "huggingfac": 282, "hypothet": 271, "i": [1, 2, 4, 7, 8, 9, 10, 20, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 105, 149, 150, 152, 153, 154, 156, 157, 161, 162, 163, 171, 172, 174, 176, 178, 179, 180, 181, 182, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 206, 209, 214, 215, 217, 218, 219, 222, 230, 231, 232, 236, 237, 241, 243, 244, 245, 247, 248, 249, 251, 252, 254, 257, 259, 260, 261, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291], "id": [5, 9, 73, 89, 92, 96, 106, 259, 260, 261, 270], "idea": 287, "ideal": [284, 292], "ident": 270, "identif": 285, "identifi": [171, 212, 243, 285, 286, 288, 292], "iglob": 153, "ignor": [8, 9, 10, 254, 265, 269, 270], "ih": 269, "illeg": 236, "illustr": [4, 149, 205, 207, 244, 249, 254, 269, 271, 275, 276, 281, 285, 286, 287], "ilsvrc2012": 260, "imag": [1, 2, 5, 8, 10, 34, 73, 83, 89, 92, 94, 96, 113, 125, 126, 136, 142, 149, 150, 153, 171, 174, 175, 176, 177, 181, 188, 194, 197, 198, 202, 204, 207, 209, 211, 212, 213, 218, 221, 241, 259, 268, 270, 276, 277, 279, 282, 289, 292], "image_codec": 171, "image_dataload": [9, 270], "image_dataloading_chart": 9, "imagecodec": [5, 39, 73, 77, 83, 96, 169, 171, 177, 207], "imagedecod": 169, "imagefram": [1, 5, 45, 73, 77, 89, 96, 153, 172, 175, 181, 186, 191, 198, 281], "imageframesptr": [5, 45, 73, 77, 89, 96, 129], "imagenet": [9, 149, 270, 277, 281], "imagenet_classif": 10, "imagenet_classification_chart": 10, "imagepacket": [5, 48, 73, 77, 92, 96, 171, 175, 181, 188, 198, 202, 208, 220], "imagepacketsptr": [5, 48, 73, 77, 92, 96, 141], "imaginari": 276, "img": [8, 204, 268], "immedi": [245, 269, 285, 286], "impl": [8, 80, 84], "implement": [1, 4, 80, 84, 149, 152, 153, 154, 156, 164, 166, 171, 179, 180, 181, 199, 214, 215, 221, 223, 224, 225, 226, 242, 245, 249, 255, 264, 271, 276, 277, 280, 281, 283, 287], "import": [1, 2, 8, 9, 10, 149, 150, 153, 201, 204, 244, 268, 269, 270, 273, 274, 275, 276, 280, 281, 285, 287, 288, 291, 292], "imposs": 284, "improv": [2, 4, 149, 274, 281, 282, 287, 289, 292], "in0": 172, "in1": 172, "in_ord": 155, "inact": 254, "inc": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270], "includ": [2, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 148, 149, 221, 245, 252, 265, 269, 285, 287, 292], "incom": 169, "incompat": 181, "inconsist": 3, "incorpor": [278, 292], "increas": [149, 281, 282, 285, 286, 289, 290], "increment": [2, 169, 199], "indefinit": [153, 244], "independ": [192, 244, 282, 285], "index": [9, 10, 89, 92, 106, 150, 166, 171, 195, 237, 260, 268, 270, 275, 277], "indic": [15, 62, 80, 86, 92, 154, 171, 220, 260, 285], "individu": [1, 4, 153], "ineffici": [4, 275, 281, 290], "inevit": 282, "inf": [10, 270], "infer": 10, "infinit": 267, "info": [9, 10, 83, 150, 236, 268, 270], "inform": [83, 92, 163, 180, 236, 274, 285], "inherit": [5, 73, 96, 245], "init": [5, 23, 73, 95, 96, 180, 222, 243, 248], "init_glog": [5, 51, 73, 77, 95, 96], "init_resourc": 7, "init_trac": [5, 51, 73, 77, 95, 96], "initarg": 7, "initi": [7, 92, 154, 163, 169, 180, 243, 244, 249, 254, 266, 268, 275, 281, 282, 284], "initial_suspend": [5, 73, 90, 96, 104, 105], "initialization_fail": 254, "initialization_succeed": 254, "inlin": [104, 105], "inou": 277, "input": [2, 9, 10, 80, 153, 154, 163, 188, 193, 194, 205, 207, 213, 218, 220, 241, 245, 265, 268, 269, 270, 271, 275, 281, 285], "input0": 172, "input1": 172, "input_fil": 268, "input_flist": [9, 270], "input_height": 269, "input_path": [269, 276], "input_pix_fmt": 269, "input_width": 269, "insert": 285, "insid": [245, 249, 281], "insight": 282, "instabl": 282, "instal": 277, "instanc": [7, 152, 169, 181, 219, 245, 249, 269, 273, 274, 275, 281], "instanti": [10, 154, 180, 219, 244, 245], "instead": [1, 2, 7, 161, 181, 206, 284, 287], "instruct": [254, 278], "int": [1, 5, 8, 9, 10, 13, 14, 15, 16, 20, 22, 23, 35, 53, 55, 65, 67, 70, 73, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 96, 97, 102, 106, 107, 149, 150, 152, 153, 154, 155, 157, 160, 161, 162, 166, 171, 174, 176, 177, 178, 179, 180, 182, 186, 187, 189, 192, 193, 194, 195, 197, 199, 201, 206, 209, 212, 213, 217, 218, 220, 222, 234, 235, 236, 237, 240, 241, 243, 245, 247, 248, 250, 252, 253, 254, 255, 257, 259, 260, 263, 265, 266, 267, 268, 269, 270, 275], "int64": [10, 190], "int64_t": [13, 53, 55, 64, 83, 84, 89, 92, 95, 107], "integ": [2, 161, 189, 190, 193, 194, 221], "integr": [270, 278, 284], "intend": [83, 152, 153, 190, 192, 243, 252, 278, 282, 287, 292], "intens": [290, 291], "inter": [2, 154, 271, 273, 275, 281, 284], "interact": [2, 7, 284], "interest": 2, "interfac": [1, 2, 80, 93, 153, 164, 166, 179, 223, 224, 225, 226, 254, 276, 281], "interleav": [194, 218, 222], "intermedi": [2, 153, 277], "intern": [94, 157, 158, 160, 163, 173, 174, 180, 181, 182, 183, 201, 220, 269, 273, 275, 281, 285], "internalerror": [5, 50, 73, 77, 94, 96], "internalerrorclass": [74, 96], "interpret": [2, 7, 150, 171, 193, 273, 275], "interrupt": [9, 270, 273, 275, 290], "interv": [150, 245, 248, 251], "interval_stats_callback": [150, 248, 251, 274], "interweav": 161, "intra": [271, 284], "introduc": [195, 271, 277], "introduct": 4, "intuit": [289, 292], "invalid": [1, 245], "invers": 4, "invoc": [275, 285, 290], "invok": [181, 250], "involv": [282, 291], "io": [1, 2, 8, 9, 10, 92, 149, 150, 153, 244, 268, 269, 270, 275, 276, 277, 278, 281, 283], "irrelev": [174, 271], "is_avail": 268, "is_pin": [5, 12, 73, 93, 96], "is_set": [9, 270], "isfileobj": [2, 214], "isinst": [8, 269], "isol": 149, "issu": [2, 4, 186, 245, 254, 275, 282, 284, 285, 288], "ite": 273, "item": [1, 2, 7, 8, 10, 149, 150, 153, 179, 244, 245, 247, 248, 252, 254, 265, 270, 271, 273, 275, 276, 281, 285], "iter": [1, 8, 9, 10, 92, 149, 150, 152, 153, 154, 171, 179, 222, 244, 245, 252, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 267, 270, 274, 275, 276, 287, 291, 292], "iter_": 10, "iter_data": [5, 21, 73, 92, 96], "iterablewithshuffl": [259, 263, 266, 267], "iterate_in_subprocess": [255, 275], "iteration_finish": 254, "iteration_start": 254, "iterator_fail": 254, "iterator_success": 254, "itnerptet": 2, "its": [1, 8, 9, 10, 149, 180, 181, 269, 270, 271, 278, 281, 284, 286, 287, 292], "itself": [2, 7, 281, 292], "ivar": 154, "iw": 269, "j": 277, "jax": [223, 278], "job": [2, 181, 271], "join": [149, 244, 269, 276, 284], "joseph": 277, "jpeg": [9, 153, 197, 281], "json": [10, 268], "just": [174, 287], "k": [8, 150, 155, 189, 281, 282], "k400": 270, "keep": [1, 2, 8, 181, 252, 275, 284, 289, 291], "kei": [1, 172, 179, 186, 281, 292], "kept": 281, "kernel": [2, 4, 190, 218, 275, 287, 289], "keyword": [249, 290], "kick": 181, "kill": 273, "kilo": 240, "kind": [274, 276], "kinet": 270, "kinetics400": 270, "know": [180, 281, 284], "known": [2, 244, 245], "krishnamoorthi": 277, "krishnan": 277, "kwarg": [149, 171, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 216, 221, 227, 244, 255], "l00058": 94, "l1550": 94, "label": [8, 10, 190, 205, 207, 260], "lambda": [149, 268, 273], "lan": 277, "languag": [7, 271], "larg": [7, 285], "larger": [236, 247], "largest": 285, "last": [2, 89, 181, 189, 193, 209, 245, 268, 285], "later": [2, 150, 172, 205, 207, 274, 285, 287], "latest": 285, "launch": [2, 4, 9, 218, 270, 275, 287, 289], "lavfi": 201, "layout": [157, 193, 194], "lbl": 8, "le": 277, "lead": [236, 273, 285], "learn": [4, 150], "least": 281, "leav": [273, 282], "legn": 285, "len": [9, 149, 268, 269, 270, 281], "length": 152, "less": [180, 245, 275, 284, 285], "let": [163, 180, 196, 269, 271, 273, 275, 281, 286], "level": [7, 9, 10, 150, 189, 234, 236, 241, 268, 270, 271, 281, 286], "levelnam": [9, 10, 270], "leverag": 2, "lgpl": 278, "lib": [2, 179, 181, 214], "libav": 236, "libavcodec": 235, "libavdevic": 235, "libavfilt": 235, "libavformat": 235, "libavutil": [92, 94, 235], "libopenh264": 196, "librari": [2, 7, 230, 231, 232, 235, 271, 275, 278, 282, 292], "libspdl": [30, 32, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 148, 278], "libspdldirectori": [75, 96], "licens": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270, 278], "life": 284, "lifetim": [80, 181], "light": 290, "lightweight": [244, 245, 276, 285], "like": [1, 2, 4, 7, 9, 10, 94, 164, 166, 179, 205, 207, 241, 271, 276, 281, 284, 287, 290], "limit": [2, 4, 180], "line": [9, 150, 181, 268, 269, 270, 276, 280], "line_numb": [9, 270], "linear": 241, "lineno": [9, 10], "link": [278, 286], "linux": 278, "list": [1, 5, 7, 8, 9, 10, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 148, 149, 150, 153, 155, 163, 178, 180, 186, 188, 189, 190, 191, 212, 213, 217, 218, 220, 222, 233, 244, 245, 254, 255, 265, 268, 270, 274, 275, 276, 277, 281, 291], "list_bucket": 276, "listen": 178, "littl": [2, 4], "live": [178, 285], "load": [1, 3, 4, 7, 8, 9, 10, 149, 151, 152, 153, 210, 211, 212, 213, 214, 215, 216, 222, 230, 231, 232, 252, 270, 271, 275, 276, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292], "load_fn": 8, "load_imag": 244, "load_image_batch": [1, 276], "load_npi": [2, 8], "load_npy_spdl": 8, "load_npz": [2, 8, 179], "load_npz_spdl": 8, "load_path_from_fil": 276, "load_torch": 8, "loader": [4, 9, 10, 149, 152, 154, 252, 280, 281, 287, 291], "local": [9, 10, 149, 171, 219, 259, 262, 273, 274, 275, 282], "localhost": 178, "locat": [2, 7, 171, 244, 249, 274, 276, 286], "lock": [7, 153, 273], "log": [9, 10, 149, 150, 234, 236, 248, 249, 251, 253, 268, 270, 274, 278, 286], "log_cancel": 253, "log_dir": 150, "log_interv": 150, "logic": [152, 153, 243, 245, 248, 249, 254, 255, 269, 273, 281, 290], "logic_error": [19, 94], "loglevel": 236, "long": [7, 180, 181, 222, 285], "longer": [181, 247, 285, 287], "look": [1, 2, 236, 271, 273, 276, 281, 286, 289, 290], "loop": [2, 7, 9, 10, 245, 270, 271, 273, 275, 276, 283, 285, 287, 289, 290, 292], "loss": [4, 287], "losslessli": 236, "lot": 290, "low": [7, 271], "lower": 289, "m": [218, 287], "machin": 286, "maco": 278, "made": [149, 181, 284, 290], "mai": [236, 285], "main": [2, 4, 8, 9, 10, 149, 150, 154, 195, 244, 268, 269, 270, 275, 281, 290], "mainli": [275, 276], "maintain": [209, 269, 275], "maintan": 2, "major": [271, 281, 282], "make": [2, 4, 80, 154, 178, 192, 193, 194, 205, 207, 245, 249, 273, 275, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292], "make_demux": [5, 42, 73, 77, 86, 96], "make_filter_graph": [5, 44, 73, 77, 88, 96], "malinovskyi": 277, "manag": [86, 92, 167, 178, 195, 243, 244, 248, 249, 271, 273, 284, 287], "mani": [2, 4, 7, 271, 276, 281, 286, 287, 290, 291], "manipul": [254, 275], "manipult": 254, "manner": [2, 4, 213, 254, 269, 275, 281, 284, 289], "manual": [276, 278], "map": [1, 9, 22, 50, 64, 86, 94, 95, 147, 153, 154, 179, 218, 235, 260, 270, 278, 281], "mapiter": 153, "martin": 277, "match": [8, 179, 180, 186, 193, 194, 204, 206, 209, 221, 269, 285], "matrix": [218, 270], "max": [9, 10, 149, 270], "max_b_fram": [94, 241], "max_batch": 10, "max_bfram": 241, "max_failur": [245, 255], "max_item": 149, "max_sampl": [9, 270], "max_work": [7, 275], "maximum": [2, 4, 149, 152, 222, 241, 245, 252, 254, 270, 275, 288, 289], "mb": 281, "mean": [10, 149, 193, 206, 247, 271, 275, 281, 282, 285], "meaning": 285, "measur": [8, 9, 10, 149, 247, 248, 250, 270, 274, 281, 285, 287], "mechan": [163, 271, 275, 280, 281], "media": [1, 5, 7, 11, 13, 14, 15, 16, 18, 20, 24, 25, 40, 60, 61, 73, 77, 81, 83, 84, 85, 86, 87, 89, 91, 92, 94, 96, 103, 106, 116, 123, 131, 139, 178, 193, 194, 198, 269, 281], "mediatyp": [5, 11, 13, 14, 15, 16, 18, 20, 24, 25, 50, 54, 56, 60, 61, 73, 77, 81, 83, 84, 85, 86, 87, 89, 91, 92, 94, 96, 103, 106, 113, 114, 115, 116, 119, 120, 121, 122, 123, 125, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 145], "mediatypestruct": [74, 96], "medium": 290, "meet": [214, 281], "member": [12, 97, 99, 101, 102, 104, 105, 106, 107], "memorandum": 284, "memori": [3, 36, 38, 43, 44, 45, 48, 51, 80, 82, 86, 87, 88, 89, 92, 95, 99, 153, 154, 165, 167, 171, 173, 180, 193, 194, 195, 214, 278, 281, 289, 290], "memory_pin": 93, "memoryview": 214, "mention": 2, "mere": 80, "merg": [153, 281], "messag": [9, 10, 270], "met": 284, "meta": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 264, 268, 269, 270, 274, 277, 290, 292], "metadata": [1, 2, 157, 171, 174, 176, 182, 290], "meth": [150, 268], "method": [7, 92, 150, 158, 160, 161, 162, 163, 171, 172, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 243, 244, 245, 248, 249, 251, 254, 257, 259, 263, 266, 271, 273, 274, 275, 276, 281], "methodologi": 288, "metric": [4, 248, 251, 277, 285, 288], "might": [1, 181, 195, 197, 199, 249, 273, 278, 281, 287], "migrat": [277, 280, 290], "miguel": 277, "mimic": 179, "minim": 285, "minimum": [220, 287], "misc": 277, "miscellan": 3, "mit": 278, "mitig": 180, "mixtur": 275, "mjpeg": [5, 33, 73, 94, 96], "ml": [2, 271, 282, 292], "mobilenetv3_large_100": 10, "mock": 8, "mod": 270, "modal": 282, "mode": [8, 10, 254, 269, 275], "model": [4, 7, 10, 195, 260, 269, 275, 277, 282, 286, 287, 289, 291], "model_typ": 10, "modelbundl": 10, "modifi": [80, 248, 251, 269], "modul": [2, 7, 10, 181, 256, 275, 278, 281, 292], "mono": 172, "monoton": [8, 9, 10, 149, 268, 270], "more": [1, 2, 4, 149, 180, 214, 215, 236, 241, 244, 254, 281, 286, 287, 290, 291, 292], "most": [2, 181, 186, 222, 260, 271, 281, 285], "mostli": 292, "moto": [9, 149, 270, 277], "move": [4, 84, 90, 195, 210, 211, 212, 216, 227, 228, 275], "mp": [2, 8], "mp3": 94, "mp4": [150, 163, 169, 171, 178, 181, 188, 205, 270], "mp_context": [7, 254], "mpeg1video": [5, 33, 73, 94, 96], "mpeg2video": [5, 33, 73, 94, 96], "mpeg4": [5, 33, 73, 94, 96], "mt": [2, 4, 8], "mtp": [4, 275], "much": [2, 289, 290], "multi": [2, 4, 7, 8, 244, 245, 272, 277, 281, 292], "multi_thread_preprocess": [1, 281], "multi_thread_preprocessing_chart_spdl": 149, "multi_thread_preprocessing_chart_torch": 149, "multi_thread_preprocessing_plot": 149, "multimedia": [282, 292], "multipl": [1, 2, 153, 161, 162, 176, 177, 178, 181, 186, 187, 205, 207, 244, 245, 247, 261, 271, 275, 276, 281, 284, 285, 286, 290, 291], "multiplex": [178, 269], "multiprocess": [3, 9, 149, 254, 270], "multiprocessing_context": [149, 155], "multithread": 4, "must": [2, 7, 8, 83, 92, 163, 171, 180, 193, 194, 204, 218, 221, 237, 241, 245, 254, 269, 271, 275, 276, 282, 284, 285, 290, 292], "mux": 92, "muxer": [5, 32, 43, 48, 50, 73, 75, 77, 96, 133, 148, 160, 185, 221, 269], "muxer_config": [20, 91, 178], "muxerclass": [74, 96], "muxerimpl": 91, "muxerptr": [5, 47, 73, 77, 91, 96], "my_bucket": 2, "my_data": 2, "my_func": 275, "my_oper": 238, "n": [9, 150, 191, 194, 209, 265, 268, 270], "n03709823": 260, "n4": 94, "name": [7, 9, 17, 71, 72, 88, 95, 150, 157, 161, 172, 174, 176, 177, 180, 182, 186, 187, 205, 207, 233, 235, 238, 240, 243, 245, 248, 249, 251, 253, 270, 274, 287], "namespac": [5, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 148, 150, 268, 269], "nan": 10, "nanobind": [181, 278], "nanobind_add_modul": 278, "narrow": 290, "nativ": [149, 281, 284], "natur": [2, 281, 285], "nccl": 286, "nchw": 10, "ndarrai": [2, 8, 171, 179, 204, 214, 224, 225], "ndim": 149, "necessari": 281, "necessarili": [180, 269, 271], "need": [2, 7, 92, 93, 221, 245, 269, 271, 275, 276, 278, 281, 284, 287, 289], "neighbor": 204, "neighbour": [2, 3, 277, 288, 290, 291, 292], "nest": [5, 73, 96], "network": [2, 7, 244, 276, 282, 284, 285, 286, 290, 291], "never": 284, "new": [92, 150, 152, 180, 186, 214, 219, 270, 271, 281, 282, 292], "next": [2, 5, 22, 73, 86, 96, 153, 244, 245, 247, 265, 273, 281, 284, 285, 286, 289], "nhwc": 241, "ninja": 278, "nn": 10, "no_grad": [10, 149], "node": [172, 205, 207, 286], "noexcept": [12, 13, 21, 23, 83, 89, 90, 92, 93, 95, 104, 105, 106], "noisi": [2, 3, 277, 288, 290, 291, 292], "non": [278, 281], "non_block": [268, 275], "none": [7, 8, 9, 10, 149, 150, 152, 153, 155, 158, 160, 162, 163, 169, 171, 172, 175, 178, 180, 183, 185, 187, 190, 191, 195, 197, 198, 199, 200, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 222, 227, 236, 240, 241, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 257, 259, 263, 265, 268, 269, 270, 275, 281], "nor": 281, "normal": [10, 149, 285], "normalize_transform": 149, "notabl": [275, 281], "note": [80, 83, 89, 92, 150, 163, 196, 214, 247, 254, 270, 271, 275, 278, 280, 282, 284, 285], "noth": [205, 207], "notifi": [160, 163, 172, 178, 180, 185], "now": [236, 269, 271, 275, 281, 286, 287, 289, 291], "np": [2, 7, 8, 204, 214, 215], "npp": [213, 278], "npy": [2, 8, 179, 214], "npyio": 179, "npz": [3, 8, 215], "npzfile": 215, "null": [172, 207], "nullcontext": 10, "nullopt": [15, 57, 58, 86, 94, 101, 102], "nullptr": [23, 52, 54, 56, 58, 82, 84, 86, 93, 95], "num": [5, 9, 10, 73, 94, 96, 97, 270], "num_aggreg": 245, "num_batch": [9, 270], "num_cach": [152, 252, 287], "num_channel": [94, 157, 161, 162, 189, 193, 206], "num_correct_top1": 10, "num_correct_top5": 10, "num_failur": [150, 250, 285], "num_fram": [9, 10, 14, 85, 161, 169, 186, 193, 206, 209, 222, 268, 270], "num_imag": 149, "num_invoc": 150, "num_item": [8, 149, 245, 247], "num_packet": [15, 22, 86, 171, 178], "num_plan": [176, 181, 186], "num_process": 7, "num_sampl": 161, "num_task": [150, 250, 285], "num_thread": [1, 8, 9, 10, 149, 150, 153, 244, 245, 255, 270, 271, 273, 281, 285, 291], "num_video_fram": 269, "num_work": [8, 9, 149, 155, 270, 281], "num_workers_": 149, "num_yield": 270, "numba": [224, 278], "number": [2, 8, 9, 10, 65, 95, 149, 153, 154, 157, 160, 161, 162, 176, 180, 186, 187, 189, 193, 194, 199, 206, 209, 220, 222, 237, 241, 245, 247, 248, 250, 252, 254, 265, 267, 269, 270, 271, 275, 281, 287, 288, 290, 292], "numer": [2, 97, 157, 174, 182, 187, 194], "numpi": [3, 8, 171, 179, 190, 204, 214, 215, 224, 225, 268, 269, 275, 278, 281], "nv12": [180, 209, 218, 222], "nv12_to_bgr": 222, "nv12_to_rgb": [180, 217, 222, 268], "nvcodec": 231, "nvcuvid": 278, "nvdec": [92, 94, 163, 180, 188, 199, 222, 270, 277], "nvdec_decod": 180, "nvdecdecod": [163, 188, 199, 219, 222], "nvidia": [270, 278], "nvjpeg": [10, 197, 213, 232, 278], "nxxxxxxxx": 261, "o": [4, 7, 154, 156, 171, 269, 275, 278, 279], "obj": 275, "object": [1, 2, 7, 9, 80, 83, 92, 150, 152, 153, 160, 162, 163, 169, 171, 172, 173, 176, 177, 178, 180, 181, 185, 186, 187, 188, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 216, 218, 219, 221, 222, 223, 224, 225, 226, 245, 252, 254, 269, 270, 273, 274, 275, 276, 281, 282, 284], "oblig": 278, "observ": [4, 149, 274, 281, 282, 285, 286, 288, 292], "obtain": [2, 4, 149, 198, 269, 275, 285], "occasion": 285, "occupancy_r": [150, 247], "occupi": [281, 285], "occur": [94, 289], "off": [2, 163, 284], "offer": 275, "offici": [205, 207, 215, 278], "offload": 271, "often": [2, 7, 153, 257, 270, 281, 284, 287], "oftentim": 292, "omit": [171, 269, 285], "on_trace_readi": 268, "onboard": 282, "onc": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 249, 273, 278, 281, 287], "one": [2, 7, 10, 92, 153, 160, 163, 180, 185, 186, 187, 195, 204, 210, 211, 212, 216, 221, 222, 245, 247, 261, 265, 268, 269, 273, 274, 275, 276, 278, 280, 281, 282, 284, 286, 287, 289, 290], "ongo": 254, "onli": [2, 92, 93, 149, 154, 158, 176, 183, 215, 221, 236, 245, 249, 251, 254, 275, 276, 281, 284, 285, 286, 287, 289, 292], "op": [245, 271, 284], "open": [5, 9, 20, 73, 91, 96, 178, 244, 269, 270, 276], "openai": 282, "opencv": 7, "oper": [5, 7, 11, 12, 13, 14, 16, 17, 20, 21, 23, 73, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96, 104, 106, 149, 163, 188, 198, 238, 244, 245, 247, 269, 271, 273, 276, 281, 284, 285, 286, 290], "opiton": 201, "opportun": 266, "oppos": 2, "opposit": 285, "optim": [2, 3, 4, 150, 152, 196, 252, 274, 277, 282, 287, 289, 290, 292], "option": [2, 5, 7, 9, 14, 15, 17, 20, 42, 47, 50, 51, 61, 73, 77, 80, 85, 86, 88, 91, 92, 94, 95, 96, 101, 102, 106, 153, 169, 180, 189, 195, 196, 197, 198, 199, 201, 205, 206, 207, 209, 210, 211, 212, 213, 216, 220, 236, 241, 245, 249, 267, 268, 269, 270, 277, 291], "optiondict": [5, 20, 50, 73, 77, 89, 91, 94, 96, 101, 102], "orchestr": 285, "order": [153, 189, 214, 217, 245, 265, 271], "org": [94, 163, 178, 188, 205, 207, 209, 225, 241, 277, 292], "orient": 282, "origin": [1, 2, 4, 152, 181, 193, 194, 209, 252, 266, 276, 281, 287], "other": [1, 2, 4, 21, 23, 80, 92, 95, 149, 181, 208, 218, 244, 249, 266, 275, 284, 285, 286, 292], "otherwis": [1, 2, 8, 172, 193, 219, 221, 249, 261, 284], "our": [4, 277, 282, 285, 292], "out": [4, 273, 274, 278, 281, 284, 286, 287, 289, 290, 292], "out0": 172, "out1": 172, "outliv": 83, "output": [10, 153, 154, 178, 197, 198, 206, 209, 212, 221, 236, 240, 244, 245, 269, 271, 273, 275, 276, 285], "output0": 172, "output1": 172, "output_height": 269, "output_ord": [153, 245, 271, 281], "output_path": 269, "output_pix_fmt": 269, "output_width": 269, "over": [153, 244, 254, 257, 263, 265, 274, 285, 290], "overal": [4, 285, 292], "overhead": [266, 287], "overlap": [190, 192, 275, 284], "overload": 243, "overrid": [12, 80, 93, 94, 98, 150, 178, 189, 196, 201, 205, 207, 241, 245, 248, 249, 251, 274], "overview": 277, "overwrit": 201, "own": [149, 193, 194, 269, 278], "owner": 292, "ownership": 181, "p": [22, 86, 93, 161, 189, 193, 206, 268], "pack": [186, 193], "packag": [2, 278], "packet": [1, 5, 11, 14, 20, 21, 32, 37, 39, 41, 42, 43, 46, 47, 50, 61, 62, 73, 75, 77, 81, 85, 86, 87, 91, 96, 107, 134, 135, 136, 137, 138, 139, 140, 141, 142, 148, 149, 150, 153, 158, 160, 162, 163, 169, 171, 175, 177, 178, 180, 183, 185, 187, 188, 192, 198, 199, 200, 201, 202, 203, 205, 207, 208, 220, 269, 270, 281], "packet_stream": 171, "packets2": 181, "packetseri": [5, 48, 73, 77, 92, 96, 106, 134], "packetseriesclass": [74, 96], "packetseriesptr": [5, 48, 73, 77, 92, 96], "packetsptr": [5, 11, 14, 15, 16, 48, 73, 77, 81, 85, 86, 87, 92, 96, 136, 138, 140], "packetsstruct": [74, 96], "pad": [206, 209], "pad_mod": 209, "page": 153, "pair": 195, "panic": 236, "par": 160, "paradigm": [275, 277, 279, 282], "parallel": [3, 7, 8, 244, 245, 254, 255, 271, 272, 277, 280, 282, 284, 292], "paramet": [8, 9, 10, 149, 150, 152, 153, 160, 163, 169, 171, 172, 178, 180, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 236, 237, 238, 240, 241, 243, 244, 245, 248, 249, 251, 252, 254, 255, 259, 261, 265, 266, 267, 268, 269, 270, 271, 287], "parent": [31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 254], "pars": [2, 150, 214, 261, 268, 269], "parse_arg": [9, 10, 149, 150, 268, 269, 270], "parse_known_arg": [9, 268, 270], "parse_wnid": 259, "parsed_abuffer_0": [172, 205], "parsed_abuffersink_2": 172, "parsed_anull_1": 172, "parsed_buffer_0": [172, 207], "parsed_buffersink_2": 172, "parsed_buffersink_3": 172, "parsed_null_1": 172, "parsed_showwaves_1": 172, "parsed_split_1": 172, "parsed_vstack_2": 172, "parser": [9, 10, 149, 150, 268, 269, 270], "part": [2, 4, 7, 222, 249, 281, 284, 288, 289, 292], "parti": 278, "partial": [150, 254, 275, 276], "particular": [286, 290], "pass": [2, 7, 9, 10, 83, 92, 150, 153, 154, 164, 166, 178, 181, 206, 208, 209, 212, 221, 222, 243, 245, 249, 254, 255, 266, 270, 274, 275, 276, 281, 284, 292], "past": 286, "path": [1, 2, 4, 9, 10, 30, 31, 32, 86, 149, 150, 153, 171, 178, 181, 192, 197, 204, 205, 207, 214, 221, 222, 240, 244, 259, 263, 268, 269, 270, 276, 278, 281], "pathlib": [9, 10, 150, 268, 269, 270], "pathlik": [259, 263], "pattern": [244, 245, 263, 273, 289, 290], "paus": 273, "pave": 292, "pcm_s16le": 201, "peak": [2, 149, 281], "per": [4, 195, 247, 281, 285, 289], "perf": 290, "perfetto": 278, "perform": [1, 3, 7, 8, 9, 10, 149, 152, 181, 197, 199, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 282, 286, 287, 288, 289], "performance_analysi": [150, 274, 285], "perfresult": [9, 270], "period": [150, 248, 251], "permut": [10, 149, 150, 268, 270, 281], "persistent_work": 155, "perspect": 284, "pftrace": [10, 240], "phenomenon": 289, "pick": [7, 265, 278], "pickl": 2, "picklabl": [7, 254, 275], "pil": 268, "pillow": [7, 149, 281], "piltotensor": [149, 281], "pimpl": [81, 85, 86, 87, 88, 91], "pin": 153, "pin_memori": [12, 93, 153, 155, 192, 268, 275], "pin_memory_devic": 155, "pip": 278, "pipe": [1, 7, 8, 9, 149, 150, 178, 244, 245, 249, 270, 271, 273, 274, 275, 276, 281, 285, 291], "pipelin": [1, 2, 3, 7, 8, 9, 10, 149, 150, 151, 152, 153, 221, 266, 270, 271, 272, 274, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 292], "pipeline_queu": 150, "pipeline_task": 150, "pipelinebuild": [1, 7, 8, 9, 149, 150, 243, 244, 248, 249, 255, 270, 271, 273, 274, 275, 276, 281, 285, 291], "pix_fmt": [9, 10, 94, 150, 153, 172, 174, 176, 177, 182, 186, 187, 194, 197, 198, 199, 204, 207, 209, 212, 213, 221, 241, 269, 270], "pixel": [10, 149, 174, 176, 177, 180, 182, 186, 187, 197, 198, 199, 207, 209, 212, 213, 218, 221, 241, 269, 281], "pixel_aspect": [172, 269], "pixel_format": 181, "pkt": [5, 73, 92, 96, 106], "place": [257, 259, 263, 285], "placement": 278, "plain": 7, "planar": [161, 189, 193, 194, 206], "plane": [161, 176, 186, 222, 281], "platform": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270], "playabl": 269, "player": 178, "pleas": [4, 7, 150, 178, 270, 271, 274, 277, 278, 281, 285], "plot": [2, 4, 9, 10, 149, 268, 269, 285, 286, 289, 292], "plot_dir": 268, "png": [150, 181, 204, 268], "point": [2, 150, 186, 189, 193, 206, 287, 289], "pointer": [83, 92, 195], "pool": [7, 9, 92, 245, 270, 272, 273], "popul": 80, "popular": 282, "portion": 290, "possibl": [2, 7, 161, 178, 195, 236, 273, 286, 287, 289, 292], "possibli": 285, "post": [222, 268], "post_process": 268, "post_processing_param": [222, 268], "potenti": [181, 287], "practic": [3, 7, 273, 277, 290], "pragma": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "pre": [1, 7, 153, 271, 276, 278, 281, 292], "preced": 286, "prefetch_factor": [149, 155, 281], "prefix": [9, 245, 270], "prepar": 281, "prepcoess": 286, "prepend": [9, 270], "preprocess": [10, 153, 206, 209, 221, 244, 271, 275, 277, 285, 286, 290, 291, 292], "preprocessor": 153, "present": [176, 209], "pressur": 285, "pretend": 269, "pretrain": 10, "prevent": [7, 273, 276, 284, 291], "previou": [180, 275, 276, 281, 289], "previous": [2, 193, 194], "primal": [163, 188, 271, 292], "primari": 241, "primarili": 292, "primaryclass": 277, "primit": 1, "print": [8, 9, 149, 236, 260, 265, 268, 269, 270, 273], "privat": [89, 90, 93], "pro": 279, "prob": 10, "probe": [197, 199], "problem": 236, "process": [1, 2, 4, 7, 8, 9, 149, 153, 154, 172, 180, 188, 193, 194, 198, 208, 213, 222, 240, 244, 245, 248, 249, 251, 254, 268, 270, 271, 272, 273, 274, 277, 278, 280, 281, 282, 284, 285, 291, 292], "process_nam": [23, 95, 240], "process_with_resourc": 7, "processor": [153, 292], "processpoolexecutor": [7, 8, 245, 275], "produc": [210, 211, 212, 216, 244, 247, 285], "product": [3, 241, 285, 286, 288, 290], "prof": [10, 268], "profil": [10, 249, 268, 275, 278, 286, 288], "program": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 148, 290], "programmat": 288, "progress": 2, "prohibit": 281, "project": [277, 288, 292], "promis": 90, "promise_typ": [5, 46, 73, 77, 90, 96, 104], "promise_typetempl": [74, 96], "propag": [245, 249], "properli": [4, 230, 231, 232, 273, 275], "properti": [2, 157, 160, 161, 162, 166, 171, 174, 176, 177, 182, 186, 187, 247], "prospect": 287, "protocol": [153, 171, 223, 224, 225, 226, 245, 257, 275, 276], "provid": [1, 7, 9, 150, 179, 180, 193, 194, 195, 196, 198, 201, 205, 207, 210, 211, 212, 216, 218, 241, 245, 252, 265, 268, 270, 274, 275, 278, 281, 282, 287, 290, 292], "pseudo": 290, "pt": [5, 53, 55, 73, 84, 89, 92, 96, 107, 176, 193, 194, 269], "public": [1, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 80, 81, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 254, 277], "publicli": 260, "publish": [1, 150, 243], "puhrsch": 277, "pure": 2, "purpos": [2, 80, 205, 207, 275, 291], "push": [5, 21, 73, 92, 96], "push_back": 89, "put": [149, 243, 245, 247, 248, 254, 271, 275, 281, 282, 284, 288], "put_nowait": 284, "py": [8, 9, 10, 149, 150, 268, 269, 270, 278], "pypi": 277, "pyre": [8, 9, 10, 149, 150, 268, 269, 270], "python": [2, 4, 7, 9, 10, 95, 181, 193, 194, 195, 270, 273, 275, 277, 281, 282, 284, 292], "python3": [8, 9, 149, 150, 269], "pytorch": [2, 4, 8, 149, 154, 171, 204, 226, 268, 275, 277, 278, 279, 286, 290], "pytorchdataload": 155, "qp": [4, 8, 149, 150, 247, 268, 285, 291], "qscale": [94, 189, 241], "queri": 247, "question": [277, 281, 287], "queue": [149, 154, 243, 244, 245, 247, 248, 254, 270, 271, 275, 283, 286, 288], "queue_class": [150, 245, 255], "queue_siz": 270, "queueperfstat": [150, 248, 274, 288], "quick": 285, "quiet": 236, "r": [218, 270, 276], "raghuraman": 277, "rais": [8, 212, 213, 220, 244, 249, 261], "ran": [287, 289], "randint": [8, 204], "random": [8, 204, 265], "rang": [8, 9, 10, 89, 149, 206, 268, 270, 273, 281, 285], "rank": [277, 288], "rate": [157, 161, 162, 182, 187, 189, 193, 194, 206, 209, 241, 251, 269, 285, 290], "ratio": [174, 182, 209], "ration": [5, 13, 50, 55, 73, 77, 81, 83, 84, 89, 92, 94, 96, 106], "rational_8h_sourc": 94, "raw": [2, 171, 178, 275, 276, 291], "raw_data": 2, "rawdescriptionhelpformatt": [9, 10], "rawpacketdata": [5, 21, 48, 73, 77, 92, 96], "rawpacketdatastruct": [74, 96], "re": [2, 10, 180, 281], "reach": [172, 180], "react": 249, "read": [2, 8, 149, 215, 268, 284], "reader": 215, "readi": [172, 288], "readthedoc": 224, "realiz": 284, "realli": 236, "reason": [1, 181, 273, 281, 284, 285, 286], "rebuild": 278, "receiv": [181, 254, 281, 286], "recent": [181, 292], "recommend": [1, 2, 273, 281, 284, 289, 291], "record_funct": [10, 268], "recov": [236, 285], "recoveri": [236, 285], "recurs": 153, "redistribut": 278, "reduc": [2, 154, 275, 278, 287, 292], "reduct": 287, "redund": [281, 290], "ref": 214, "refer": [4, 7, 150, 172, 178, 181, 193, 194, 205, 207, 225, 269, 270, 274, 278, 281, 285, 289], "referenc": [205, 207], "reflect": 282, "reformat": 2, "refrain": 276, "refresh": 278, "region": [192, 193, 194, 209, 214, 281], "register_avdevic": [5, 51, 73, 77, 95, 96], "register_buff": 10, "regul": 285, "regular": 179, "rel": [247, 285], "relat": [3, 230, 231, 232, 281, 285, 290], "relationship": [5, 73, 96], "releas": [2, 4, 92, 181, 215, 252, 275, 277, 278, 281, 282], "relev": 2, "remain": 287, "rememb": 92, "remind": 153, "remot": [2, 7, 274, 276, 286], "remov": [199, 248], "remux": 269, "renam": 199, "repeat": [8, 209, 267, 289], "repeatedli": 265, "replac": [2, 154, 215, 281, 287, 292], "report": [9, 80, 245, 248, 251, 254, 270], "report_stats_interv": [9, 245, 255, 270], "repres": [173, 181, 257, 270, 281, 285], "request": [284, 285, 291], "requir": [2, 9, 10, 80, 83, 87, 89, 92, 150, 163, 172, 188, 254, 268, 269, 270, 271, 276, 277, 281, 282, 284, 289, 291, 292], "resampl": 244, "rescal": [150, 209, 221, 268], "research": 292, "resembl": [273, 286], "resembol": 8, "reserv": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270], "resiz": [9, 149, 153, 180, 197, 199, 204, 212, 213, 244, 268, 276, 281], "resolut": [150, 180, 209, 269, 270, 281], "resolv": [4, 277, 282, 288], "resort": 2, "resourc": [4, 80, 92, 178, 181, 252, 271, 282, 287, 289, 291], "resourceclass": 7, "rest": [2, 286], "restor": 214, "restrict": [237, 282], "restructur": 288, "result": [2, 7, 8, 9, 10, 80, 149, 153, 154, 173, 180, 181, 186, 192, 193, 194, 205, 207, 208, 212, 245, 247, 254, 255, 268, 269, 270, 271, 273, 275, 276, 278, 281, 284, 285, 290], "resum": 273, "ret": 84, "rethrow_except": 90, "retriev": [7, 160, 163, 206, 209, 220, 244, 259, 285], "return": [1, 2, 7, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 152, 153, 154, 160, 161, 162, 163, 169, 171, 172, 173, 176, 177, 178, 180, 181, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 244, 245, 248, 252, 254, 260, 261, 268, 269, 270, 274, 275, 276, 281, 284, 287], "return_caches_aft": [152, 252, 287], "return_void": [5, 73, 90, 96, 104, 105], "reus": [180, 281], "revers": 269, "revisit": 93, "rewrit": 2, "rgb": [8, 10, 153, 180, 186, 194, 197, 199, 213, 218, 222, 241, 269, 270, 281], "rgb24": [9, 10, 150, 153, 181, 194, 198, 204, 209, 212, 221, 241, 269, 270], "rgba": [172, 199, 209], "rglob": 150, "rid": 2, "right": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270, 273], "robin": 278, "robust": 275, "roman": 277, "room": 4, "root": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 259, 263, 268, 269, 270], "root_dir": [10, 149, 153], "roughli": [178, 266, 267, 285], "rout": 276, "row": 92, "rsc": 7, "rtmp": 178, "run": [1, 4, 7, 8, 9, 10, 149, 152, 153, 195, 201, 244, 245, 249, 252, 254, 255, 268, 270, 271, 272, 275, 276, 277, 278, 280, 281, 282, 284, 285, 287, 290, 291], "run_coroutine_threadsaf": 284, "run_dataload": 149, "run_forev": 284, "run_in_executor": [150, 245, 271, 275], "run_in_process": 149, "run_pipelin": 8, "run_pipeline_in_subprocess": [4, 254, 275], "run_test": 149, "run_until_complet": 284, "runinng": 254, "runner": [30, 31, 32, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 148], "runtim": [9, 150, 247, 248, 250, 251, 272, 277, 278, 282, 285, 288, 290, 292], "runtimeerror": 244, "runtimewarn": 181, "rust": 7, "s16": [161, 172, 189, 193, 206], "s16le": 201, "s16p": [193, 206], "s32": [161, 189, 193, 206], "s32p": [193, 206], "s64": [161, 193, 206], "s64p": [193, 206], "safe": [244, 281, 282, 284], "sai": [201, 271, 273, 290], "sake": 290, "same": [1, 8, 84, 154, 161, 169, 180, 186, 188, 195, 217, 218, 245, 252, 271, 275, 278, 281, 282, 284, 285, 287], "sampl": [8, 9, 89, 153, 154, 157, 161, 162, 181, 189, 192, 193, 201, 205, 206, 207, 265, 270, 286, 290, 291], "sample_aspect_ratio": [174, 182], "sample_fmt": [53, 55, 84, 94, 157, 161, 172, 189, 193, 194, 205, 206], "sample_r": [53, 84, 94, 157, 161, 162, 172, 189, 193, 206], "sampler": [154, 155, 281, 288], "save": [2, 8, 150, 204, 214, 221, 268, 274], "savez": [2, 8, 215], "savez_compress": [2, 8], "scalabl": 292, "scale": [2, 153, 189, 209, 241, 269, 281], "scale_algo": [204, 209], "scale_height": [10, 149, 150, 153, 180, 197, 199, 209, 268, 270, 281], "scale_mod": 209, "scale_width": [10, 149, 150, 153, 180, 197, 199, 209, 268, 270, 281], "scaler": 209, "schedul": [2, 4, 7, 270, 271, 275, 276], "scope": [7, 273], "scratch": 292, "screen": 178, "script": [2, 9, 10, 149, 270], "sdk": 278, "sdl": 178, "search": 278, "sec": [245, 268], "secifi": 218, "second": [4, 149, 150, 162, 187, 244, 247, 248, 250, 251, 285, 286, 289], "section": [2, 3, 254, 274, 282, 284, 285, 288, 289], "see": [2, 4, 7, 8, 9, 10, 149, 150, 152, 158, 159, 165, 167, 168, 169, 170, 175, 176, 178, 179, 180, 183, 184, 190, 191, 198, 199, 200, 202, 203, 204, 209, 210, 211, 216, 220, 222, 243, 245, 249, 252, 268, 269, 270, 271, 275, 278, 281, 282, 285, 286, 287, 290, 292], "seed": [257, 259, 263, 265, 266, 267], "seek": [8, 214, 215], "seemingli": 273, "seen": 282, "segment": [2, 8], "segv": 94, "select": 218, "self": [1, 8, 10, 150, 181, 245, 249, 273, 291], "send": [9, 10, 153, 190, 270, 276], "sent": [9, 149, 254, 269, 275], "separ": [1, 8, 92, 153, 161, 245, 281, 290], "seprat": 92, "sequenc": [171, 265, 284], "sequenti": [213, 271], "seri": [92, 173, 181, 290], "serial": [2, 7, 8, 214, 275, 281], "serv": [80, 178, 271, 285, 289], "server": 178, "servic": 2, "sess": [23, 95], "set": [1, 2, 9, 15, 22, 42, 86, 94, 153, 154, 171, 198, 220, 236, 245, 270, 276], "set_ffmpeg_log_level": [5, 51, 73, 77, 95, 96], "set_start_method": 149, "setlevel": 149, "setup": [278, 280, 285], "sever": 284, "shape": [5, 9, 10, 52, 53, 55, 73, 82, 84, 96, 99, 150, 161, 191, 194, 197, 204, 206, 214, 218, 221, 222, 270], "share": [3, 4, 7, 154, 181, 281, 288], "shared_ptr": [5, 40, 52, 73, 77, 80, 82, 84, 96, 99, 111], "shell": 270, "shift": [277, 279, 282], "should": [1, 83, 92, 94, 174, 181, 193, 194, 249, 282, 284, 285, 287, 289, 290, 292], "show": [2, 4, 149, 150, 189, 268, 269, 273, 274, 275, 281, 285, 286, 289, 290, 292], "shown": 150, "showwav": 172, "shuffl": [155, 257, 259, 263, 267], "shuffle_last": 266, "shutdown": [244, 273], "side": [95, 180, 199], "sign": [161, 189, 193, 194, 221], "signal": [9, 270, 284], "signific": 290, "significantli": [2, 149, 286], "sigterm": [9, 270], "silenc": 206, "silent": 218, "similar": [2, 92, 275, 281, 286], "similarli": [150, 245, 271], "simpl": [4, 10, 152, 281, 287], "simpler": 284, "simpli": [4, 273, 281, 284], "simplic": 284, "simplifi": [94, 254, 285], "sin": 215, "sinc": [2, 4, 153, 181, 218, 276, 281, 282, 284, 289, 291], "sine": 201, "singl": [1, 8, 10, 153, 174, 182, 186, 196, 281, 292], "sink": [10, 244, 272, 284, 285, 286], "situat": [273, 285], "size": [1, 5, 8, 9, 10, 12, 73, 92, 93, 96, 99, 107, 149, 153, 186, 192, 195, 201, 204, 209, 218, 240, 241, 243, 245, 248, 270, 272, 275, 281, 285], "size_t": [12, 52, 53, 55, 62, 82, 84, 89, 92, 93, 99], "sizeof": [52, 82, 99], "skip": [9, 245, 270], "slice": [89, 160, 176, 186, 238], "slientli": 254, "slightli": [281, 285], "slow": [2, 285, 286], "slower": [2, 4, 281, 285, 286], "slowest": 286, "sm": 286, "small": [269, 281, 287], "smaller": [220, 282], "smpte240m": 218, "snippet": [266, 267, 271, 273, 275, 281, 285, 287], "so": [2, 4, 7, 10, 80, 83, 93, 94, 149, 154, 161, 162, 172, 176, 177, 180, 186, 187, 192, 198, 205, 207, 209, 215, 244, 249, 252, 254, 269, 270, 271, 273, 274, 275, 281, 282, 284, 285, 286, 287, 290, 291, 292], "softmax": 10, "softwar": [178, 278], "solut": [2, 4, 149, 151, 282, 292], "solv": 4, "some": [2, 9, 160, 214, 269, 270, 271, 276, 278, 282, 286, 287, 288, 289, 291], "somehow": 236, "someth": [2, 236, 244, 287], "somewhat": [254, 281, 286], "somewher": 150, "soon": [247, 273, 284, 285, 289], "sort": [260, 269], "sourc": [1, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 271, 272, 275, 277, 281, 285], "source_video": 178, "sourceadaptor": [5, 36, 73, 77, 80, 96, 98, 111], "sourceadaptorptr": [5, 36, 42, 73, 77, 80, 86, 96], "sourceadaptorstruct": [74, 96], "space": [2, 186, 198, 241, 247, 281], "spare": [282, 286], "spawn": [9, 149, 270, 289], "spd": 171, "spdl": [1, 2, 4, 5, 7, 8, 9, 10, 12, 30, 31, 32, 33, 34, 35, 73, 74, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 108, 109, 148, 149, 150, 268, 269, 270, 273, 274, 275, 276, 278, 279, 280, 285, 286, 287, 288, 290, 291], "spdl_default_buffer_s": [5, 50, 73, 94, 96], "spdl_io": 278, "spdl_use_cuda": 278, "spdl_use_ffmpeg_vers": 278, "spdl_use_nvcodec": 278, "spdl_use_trac": 278, "spdlnamespac": [74, 96], "speak": 2, "speaker": 178, "specif": [2, 80, 83, 89, 151, 178, 197, 199, 249, 290], "specifi": [9, 89, 162, 167, 178, 180, 187, 198, 220, 254, 265, 270, 271, 272, 276, 278], "speed": [2, 3, 8, 247, 270, 285, 286, 287, 289], "spefici": 178, "spend": [2, 287], "spent": 290, "spike": 285, "spiki": 4, "spikier": 4, "split": [1, 9, 10, 149, 172, 220, 259, 270, 290], "split_id": [9, 270], "split_siz": [9, 270], "spot": 285, "sprcifi": 195, "sqcale": [189, 241], "squash": 290, "squeez": 2, "src": [1, 5, 7, 8, 9, 10, 31, 32, 58, 60, 62, 73, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 148, 153, 163, 169, 171, 180, 181, 188, 196, 197, 200, 201, 202, 203, 210, 211, 212, 213, 216, 222, 252, 266, 267, 268, 270], "src_height": 269, "src_pix_fmt": 269, "src_width": 269, "srcdirectori": [75, 96], "stabl": [224, 225, 281], "stack": [268, 276], "stackoverflow": 7, "stage": [1, 2, 7, 150, 243, 244, 245, 247, 248, 249, 251, 272, 274, 277, 280, 281, 282, 284, 285, 286, 288, 291], "stage1": 7, "stage2": 7, "stage3": 7, "stage_hook": [243, 248, 249, 251], "stai": 286, "stamp": 176, "stand": 254, "standard": [10, 236], "start": [4, 5, 23, 73, 89, 95, 96, 149, 162, 187, 206, 209, 243, 244, 252, 254, 267, 273, 277, 281, 284, 292], "start_iter": 254, "starv": 285, "starvat": [247, 285, 291], "stask_hook": 249, "stat": [150, 243, 245, 247, 248, 250, 251, 274, 285, 290], "state": [8, 254, 275, 281, 284, 285], "statefuldatalaod": [2, 4], "statefuldataload": 2, "static": 93, "statist": [9, 150, 247, 248, 250, 251, 272, 277, 285, 286, 288, 290, 292], "statsqueu": [150, 243, 245, 247, 274], "statu": 254, "std": [5, 10, 11, 13, 14, 15, 17, 19, 20, 21, 22, 23, 40, 42, 52, 53, 55, 59, 61, 62, 63, 64, 69, 71, 73, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 104, 105, 106, 108, 110, 111, 112, 116, 117, 118, 123, 124, 129, 131, 133, 134, 139, 141, 147, 149], "stdexcept": [50, 94], "stdin": 181, "step": [4, 89, 150, 210, 211, 212, 216, 254, 268, 274, 281, 287, 288, 289, 291], "step_tim": 287, "still": [7, 154, 181, 284], "stocast": 265, "stop": [5, 10, 23, 73, 89, 95, 96, 244, 252, 254, 265, 273, 284, 287], "stop_aft": [152, 252, 265], "stop_iter": 254, "stop_request": [9, 270], "stopasynciter": 249, "storag": [2, 5, 12, 32, 38, 50, 52, 54, 56, 73, 75, 77, 82, 84, 96, 99, 148, 153, 190, 191, 192, 212, 219, 244, 275, 276, 282, 286, 292], "storagetempl": [74, 96], "store": [2, 7, 149, 153, 269, 275, 281], "store_fals": 10, "store_tru": [9, 10, 270], "str": [1, 8, 9, 10, 149, 150, 153, 155, 157, 161, 163, 169, 171, 172, 174, 176, 177, 178, 179, 181, 182, 186, 187, 188, 189, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 220, 221, 222, 233, 235, 238, 240, 241, 243, 245, 248, 251, 253, 254, 255, 259, 260, 261, 263, 268, 269, 270, 276, 281, 291], "straightforward": [284, 285], "stream": [86, 92, 153, 157, 158, 160, 162, 163, 169, 172, 178, 180, 183, 185, 187, 188, 192, 218, 275, 277, 290], "stream_index": [5, 22, 73, 86, 92, 96, 106, 178], "streamer": 268, "streaming_demux": [5, 15, 73, 86, 96, 171, 178, 205, 207, 269], "streaming_demux_video": [163, 169, 180], "streaming_load_video_nvdec": [180, 268], "streaming_nvdec_decod": [180, 222], "streaming_video_processing_block": 269, "streaming_video_processing_chart": 269, "streamingdemux": [5, 42, 73, 77, 86, 96, 117], "streamingdemuxerclass": [74, 96], "streamingdemuxerptr": [5, 15, 42, 73, 77, 86, 96], "strict": [8, 9, 10, 150, 160, 212, 213, 220, 268, 269], "stride": [53, 55, 84], "string": [2, 5, 8, 11, 13, 14, 15, 17, 20, 23, 36, 39, 42, 43, 47, 48, 50, 51, 53, 55, 59, 63, 64, 71, 73, 77, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 101, 102, 106, 147, 235, 261, 275, 281], "string_view": [5, 36, 42, 73, 77, 80, 86, 96, 98, 108], "strip": [9, 270, 276], "stripped_audio": 178, "strobelight": 290, "strong": 286, "struct": [5, 12, 36, 38, 46, 48, 49, 50, 74, 77, 80, 82, 83, 89, 90, 92, 93, 94, 144], "structur": [270, 279, 292], "stuck": 273, "studi": [8, 275, 277, 292], "stuff": 236, "style": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 154, 268, 269, 270], "sub": [7, 281, 282, 292], "subclass": [108, 109, 150, 245, 249, 274], "subcompon": 292, "subdirectori": [148, 259], "subject": 271, "submodul": 282, "subprocess": [2, 4, 9, 149, 254, 255, 272, 289], "subroutin": 290, "subsequ": 244, "subset": [9, 94, 270], "subtl": 284, "subtract": 285, "succe": 249, "succeed": 254, "success": [250, 251, 285, 287], "successfulli": 1, "suffer": [247, 275, 291], "suffici": 254, "suffix": [161, 172, 179, 189, 193, 206], "suggest": [2, 4, 247, 281, 285, 286, 287, 289], "suitabl": [2, 241], "sum": [9, 10, 270, 285], "summar": 284, "summari": [150, 279, 288], "summarywrit": 150, "super": [10, 150], "support": [2, 7, 10, 153, 179, 181, 197, 199, 214, 215, 218, 221, 230, 231, 232, 270, 275, 278, 281, 282, 284], "suppos": 281, "suppress_repeated_log": 253, "suppression_threshold": 253, "suppression_warning_interv": 253, "sure": [80, 193, 194, 245, 249, 254, 273, 278, 282], "surpris": 4, "surrog": 271, "suspect": [4, 290], "suspend_alwai": [90, 104, 105], "sustain": 281, "swap": [4, 280, 281], "switch": [2, 244, 245, 270, 275, 279, 282], "sy": 268, "sync": [217, 218, 245, 268, 284], "synchron": [7, 195, 244, 245, 268, 271, 275, 276, 284, 290], "system": [9, 10, 284, 285, 286, 287, 288], "t": [8, 83, 90, 104, 105, 149, 152, 153, 155, 201, 244, 245, 248, 252, 253, 254, 255, 257, 265, 266, 267, 273, 275, 285], "t0": [8, 9, 10, 149, 268, 270], "t_": 245, "take": [2, 7, 150, 153, 180, 181, 195, 214, 245, 274, 275, 276, 285, 286, 287, 288, 290, 291], "taken": 290, "talk": [80, 292], "tansfer": 192, "target": [9, 10, 149, 218, 227, 241, 270, 281], "tarnsform": 149, "task": [4, 10, 151, 242, 244, 245, 247, 249, 250, 251, 253, 271, 275, 276, 281, 283, 287, 288, 292], "task_funct": 275, "task_hook": [249, 251], "task_hook_factori": [150, 245, 255], "taskhook": [150, 245, 255, 274], "taskperfstat": [150, 251, 274, 288], "taskstatshook": [150, 245, 249, 250, 274], "tcodec": 163, "team": [2, 282, 292], "techniqu": 287, "tempfil": 215, "templat": [5, 15, 20, 37, 39, 40, 41, 43, 45, 46, 48, 50, 51, 73, 77, 78, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 105, 116, 123, 131, 139], "temporaryfil": 215, "tensor": [9, 10, 149, 150, 153, 160, 171, 178, 185, 192, 193, 194, 204, 206, 221, 226, 268, 270, 275, 276, 277, 281, 290, 291], "tensorboard": [150, 274], "termin": 254, "test": [149, 278, 292], "tfp": 149, "than": [2, 4, 149, 154, 215, 245, 247, 271, 275, 281, 285, 286, 292], "thei": [1, 2, 7, 94, 149, 153, 171, 218, 254, 275, 281, 284, 285], "them": [1, 2, 7, 9, 10, 149, 153, 192, 213, 218, 244, 245, 247, 254, 256, 270, 271, 274, 275, 281, 282, 285, 286, 287, 288, 290, 291], "therefor": [7, 83, 181, 269, 271, 275, 278, 281, 284, 285, 286], "theri": 173, "thi": [2, 3, 4, 7, 8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 105, 149, 150, 152, 153, 154, 162, 163, 172, 174, 176, 178, 179, 180, 181, 186, 187, 189, 190, 192, 193, 194, 197, 199, 201, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 220, 236, 243, 244, 245, 247, 248, 249, 251, 252, 254, 255, 268, 269, 270, 271, 273, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292], "thin": 179, "thing": [80, 281, 284], "think": 287, "third": [222, 278], "those": 2, "though": [2, 4, 7, 181, 269], "thought": [4, 289], "thread": [2, 4, 7, 8, 9, 10, 92, 153, 181, 195, 219, 244, 245, 270, 272, 273, 276, 277, 279, 282, 283, 292], "thread_loc": 275, "threadpoolexecutor": [8, 271, 275], "three": [254, 276, 281], "throttl": 286, "through": [92, 247, 274, 275, 278, 281, 282, 285, 286, 288], "throughout": 285, "throughput": [2, 7, 149, 270, 280, 281, 282, 288, 292], "throw": 89, "thrown": [94, 246], "thu": 173, "tiktoken": [7, 282], "time": [2, 4, 7, 8, 9, 10, 92, 149, 150, 153, 157, 160, 161, 162, 171, 174, 176, 177, 181, 182, 186, 187, 193, 194, 206, 209, 222, 237, 243, 244, 247, 248, 250, 254, 268, 270, 271, 273, 275, 278, 284, 287, 288, 289, 290, 291], "time_bas": [5, 13, 73, 81, 83, 89, 92, 96, 106, 157, 172, 174, 182, 269], "timeout": [10, 153, 155, 244, 254, 284, 291], "timeouterror": 244, "timestamp": [2, 5, 73, 92, 96, 106, 157, 162, 171, 174, 182, 187, 198, 200, 203, 206, 209, 210, 216], "timm": 10, "titl": 277, "tmp": 240, "tnum_work": 149, "to_jax": 153, "to_numba": [153, 164, 166], "to_numpi": [164, 269], "to_thread": 245, "to_torch": [1, 9, 10, 149, 150, 153, 164, 166, 192, 268, 270, 276, 281], "tobyt": 214, "togeth": [1, 8, 281], "token": 282, "too": [2, 275], "took": [9, 270], "tool": [290, 292], "toolkit": 278, "top": 222, "top1": 10, "top5": 10, "top_catid": 10, "top_prob": 10, "topic": [3, 4], "topk": 10, "torch": [8, 9, 10, 149, 150, 153, 192, 195, 204, 226, 268, 270, 275, 281, 287], "torch_cuda_warmup": 268, "torchdata": [2, 4], "torchvis": [149, 281], "total": 291, "total_batch": [9, 270], "total_fram": [9, 270], "tpacket": 163, "trac": [94, 241], "tracc": 238, "trace": [9, 10, 95, 236, 237, 238, 268, 270, 275, 286, 290], "trace_count": [5, 51, 73, 77, 95, 96], "trace_ev": 10, "trace_event_begin": [5, 51, 73, 77, 95, 96], "trace_event_end": [5, 51, 73, 77, 95, 96], "trace_path": [9, 10, 268, 270], "traceback": 181, "tracer": [239, 288], "tracingsess": [5, 51, 69, 73, 77, 95, 96], "tracingsessionenum": [74, 96], "track": [248, 251], "trade": [2, 284], "train": [2, 4, 7, 8, 9, 10, 149, 152, 252, 259, 270, 275, 277, 282, 285, 286, 287, 288, 289, 290, 291, 292], "trand": 286, "transfer": [2, 9, 10, 149, 153, 190, 275, 276, 278, 281, 285, 290, 291], "transfer_buff": [153, 192, 210, 211, 212, 216, 270], "transfer_buffer_cpu": 204, "transfer_data": 275, "transfer_executor": 275, "transfer_fn": 153, "transfor": 10, "transform": [10, 149, 256, 264, 269, 281], "transftransform": 241, "transit": 254, "translat": 285, "travers": [256, 259, 262], "treatment": 281, "tree": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270], "trend": [279, 285], "tri": [4, 180, 273, 285], "trim": [84, 206, 209], "true": [8, 9, 10, 90, 149, 150, 153, 163, 171, 192, 212, 213, 218, 219, 220, 230, 231, 232, 240, 252, 253, 266, 267, 268, 269, 270, 275], "truli": 287, "try": [9, 10, 149, 249, 270, 286, 287, 290], "tunabl": 282, "tupl": [1, 8, 10, 15, 42, 48, 51, 61, 62, 64, 86, 92, 95, 106, 149, 157, 162, 171, 174, 179, 182, 187, 194, 195, 200, 203, 206, 209, 210, 214, 216, 235, 241, 245, 259, 268, 269, 275, 276], "turn": [4, 273, 276, 284, 289], "turner": 277, "twice": 281, "two": [80, 178, 181, 249, 271, 274, 284], "txt": [9, 10, 149, 244, 269], "type": [2, 5, 8, 9, 10, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 73, 75, 80, 82, 83, 84, 85, 86, 87, 89, 91, 92, 93, 95, 96, 97, 99, 101, 102, 103, 105, 143, 144, 145, 146, 147, 148, 149, 150, 153, 171, 181, 186, 189, 193, 204, 223, 224, 225, 226, 235, 245, 255, 261, 268, 269, 270, 280, 284], "typedef": [5, 94, 148], "typeerror": 181, "typenam": [65, 90, 95, 104], "typevar": 8, "typic": [7, 153, 180, 187, 244, 276, 285, 286, 290, 291], "u": [4, 155, 186, 218, 245, 255, 275], "u8": [161, 189, 193, 206], "u8p": [193, 206], "u_": 245, "udp": 178, "ui": 150, "uint": [5, 35, 52, 73, 82, 94, 96, 99], "uint64_t": 89, "uint8": [8, 150, 171, 204, 270], "uint8_t": [52, 82, 92, 99, 107], "uintptr_t": [89, 92, 106, 195], "uncommon": 282, "undef": 89, "under": [8, 9, 10, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 149, 150, 268, 269, 270, 278, 292], "underli": [180, 181, 199, 287, 290], "understand": [279, 280, 282], "undesir": 195, "undoubtedli": 4, "unexpect": [8, 94, 254, 273], "unexpected_cmd_reciev": 254, "unhandled_except": [5, 73, 90, 96, 104, 105], "unharm": 273, "uniniti": 181, "uninstal": 278, "unique_ptr": [69, 80, 82, 85, 86, 87, 88, 89, 91, 92, 95, 110, 112, 116, 117, 118, 123, 124, 131, 133, 134, 139], "uniquiet": 282, "unit": [99, 157, 174, 182, 193, 194, 244, 245, 289], "univari": 276, "unlik": [94, 197, 199, 273, 281], "unlimit": 245, "unsaf": 149, "unseen": 282, "unsign": [161, 189, 193, 194, 221], "unstack": 276, "until": [153, 193, 194, 245, 265, 273, 282, 284, 285, 289], "unus": [268, 273], "up": [9, 265, 270, 278, 285, 289, 290], "updat": 287, "upgrad": [278, 292], "upper": [4, 289], "upperbound": 2, "upstream": [245, 247, 248, 281, 285], "uri": [20, 86, 91, 222], "url": [80, 108, 153, 171, 178, 244, 268, 276, 277, 291], "url_gener": 271, "us": [1, 2, 4, 7, 8, 9, 10, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 153, 154, 157, 158, 160, 172, 174, 178, 180, 181, 182, 183, 185, 190, 193, 194, 196, 197, 198, 199, 201, 205, 207, 209, 213, 215, 218, 219, 221, 222, 236, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 257, 259, 260, 265, 268, 269, 271, 273, 275, 276, 277, 278, 280, 281, 282, 284, 285, 287, 289, 290, 291], "usag": [163, 179, 188, 192, 243, 244, 245, 287], "use_bf16": 10, "use_cach": 219, "use_nvdec": 270, "use_nvjpeg": 10, "usecas": [163, 188], "user": [1, 9, 92, 162, 187, 270, 278, 288, 290, 292], "usr": [8, 9, 149, 150, 269], "usual": [186, 193, 194, 249, 269, 273, 275, 281], "util": [4, 7, 9, 10, 23, 32, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 96, 148, 149, 150, 270, 277, 281, 284, 286, 287, 289, 291, 292], "utmost": 274, "uv": [222, 278], "ux": 292, "v": [8, 9, 149, 150, 154, 186, 218, 270, 278, 283], "val": [9, 10, 149, 150, 190, 236, 237, 259, 270], "valentin": 277, "valid": [8, 176, 181, 193, 194, 206, 209, 259, 285], "valu": [5, 7, 8, 10, 33, 34, 35, 73, 90, 96, 104, 105, 149, 152, 157, 161, 162, 174, 178, 182, 187, 189, 193, 194, 195, 197, 199, 204, 206, 209, 218, 221, 236, 237, 241, 244, 247, 252, 254, 265, 266, 275, 284, 285], "valueerror": 8, "vari": 178, "variabl": [181, 273, 278], "varianc": 286, "variant": [1, 44, 45, 48, 88, 89, 92, 129, 141, 284], "varieti": [276, 287, 292], "vc1": [5, 33, 73, 94, 96], "vector": [5, 21, 38, 40, 45, 48, 51, 52, 55, 62, 63, 73, 77, 82, 84, 89, 91, 92, 95, 96, 99], "verbos": 236, "veri": [2, 4], "verifi": [286, 290], "versatil": 2, "version": [2, 94, 199, 235, 278, 292], "via": [154, 284], "video": [5, 34, 73, 83, 87, 89, 92, 94, 96, 115, 120, 121, 130, 132, 135, 138, 145, 150, 163, 171, 176, 178, 182, 183, 184, 185, 186, 187, 188, 194, 196, 198, 203, 207, 209, 216, 220, 222, 241, 268, 277, 278, 282, 290, 292], "video_codec": [163, 169, 171, 180, 207, 269], "video_dataload": 270, "video_decod": 269, "video_encod": 269, "video_encode_config": [178, 184, 221, 269], "video_fram": 172, "video_index": 269, "video_packet": [178, 269], "video_s": [172, 269], "video_stream_index": [171, 269], "videocodec": [5, 39, 73, 77, 83, 96, 169, 171, 178, 180, 187, 207], "videodecod": [169, 269], "videoencod": [5, 43, 73, 77, 87, 96, 178, 269], "videoencodeconfig": [5, 50, 73, 77, 94, 96, 178, 241], "videoencoderptr": [5, 43, 73, 77, 87, 96], "videofram": [5, 45, 73, 77, 89, 96, 158, 169, 172, 176, 183, 185, 191, 194, 198, 269], "videoframesptr": [5, 45, 55, 73, 77, 84, 89, 96, 129], "videopacket": [5, 48, 73, 77, 92, 96, 171, 178, 180, 183, 185, 188, 198, 199, 203, 208, 209, 220], "videopacketsptr": [5, 48, 62, 73, 77, 92, 96, 141], "view": [10, 271], "virtual": [12, 80, 93, 98, 100, 108, 109], "visit": 265, "visual": [181, 290], "void": [12, 17, 20, 21, 23, 53, 55, 65, 66, 67, 68, 71, 72, 82, 84, 88, 89, 90, 91, 92, 93, 95, 99, 104, 105, 109], "vp8": [5, 33, 73, 94, 96], "vp9": [5, 33, 73, 94, 96], "vstack": 172, "w": [150, 191, 194, 197, 218, 269, 270], "wa": [2, 4, 149, 181, 199, 236, 247, 254, 255, 281, 285, 286, 292], "wai": [2, 154, 201, 271, 273, 274, 275, 278, 281, 282, 284, 287, 292], "wait": [2, 153, 218, 243, 244, 247, 254, 271, 284, 285, 286, 289], "walk": 288, "walltim": 150, "want": [2, 178, 198, 249, 275, 276, 278, 281, 282, 285, 291], "warm": [9, 270], "warn": 236, "wast": 281, "watch": 254, "wav": 285, "we": [1, 2, 3, 4, 7, 93, 94, 236, 269, 271, 273, 274, 275, 278, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292], "weakest": 286, "weight": 265, "well": [281, 284], "went": [236, 247, 285], "were": [2, 4, 199, 287, 290], "what": [2, 4, 193, 194, 271, 277, 282, 286, 288, 290], "whatev": 2, "when": [2, 4, 7, 9, 83, 92, 94, 149, 161, 162, 163, 172, 176, 178, 181, 186, 187, 190, 193, 194, 198, 204, 205, 206, 207, 209, 214, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 265, 270, 271, 273, 274, 275, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291], "whenev": [285, 289], "where": [2, 4, 149, 186, 191, 214, 247, 254, 259, 270, 271, 273, 275, 276, 284, 285, 286, 287, 288, 290], "wherea": [4, 280], "whether": [2, 10, 149, 214, 240, 254, 281, 284], "which": [1, 2, 4, 9, 92, 171, 178, 180, 186, 190, 193, 194, 199, 204, 205, 206, 207, 209, 214, 215, 236, 243, 244, 245, 248, 254, 255, 260, 270, 273, 274, 276, 277, 278, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292], "while": [3, 4, 7, 9, 149, 180, 190, 244, 266, 267, 270, 281, 285, 286, 288, 292], "who": [271, 292], "whole": [270, 286, 292], "why": [277, 279, 281, 284], "width": [9, 10, 94, 150, 153, 174, 176, 177, 181, 182, 186, 187, 191, 192, 199, 204, 209, 212, 213, 218, 221, 222, 241, 268, 269, 270, 276], "wiki": [94, 241], "window": [15, 86, 162, 171, 181, 187, 285], "window_fullscreen": 178, "wise": [266, 282], "with_stack": 268, "with_transf": 149, "within": [89, 244, 285], "without": [1, 2, 92, 94, 153, 178, 179, 192, 198, 205, 207, 221, 244, 245, 275, 281, 284], "wmv3": [5, 33, 73, 94, 96], "won": [83, 201, 245, 273, 285], "wordnet": [260, 261], "work": [2, 30, 31, 32, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 148, 154, 180, 181, 201, 277, 281, 282, 284, 286, 288, 292], "workaround": [7, 275, 281, 282], "worker": [2, 8, 9, 10, 149, 153, 154, 254, 270, 281], "worker_entrypoint": [9, 270], "worker_id": [9, 270], "worker_init_fn": 155, "workflow": 3, "workload": 292, "worth": [280, 286, 287], "would": [2, 4, 271, 282, 284], "wrap": [2, 152, 252, 273, 287, 290], "wrapper": [152, 179, 252, 253, 276], "write": [2, 5, 20, 73, 91, 96, 150, 178, 221, 240, 269, 276, 284], "writer": 150, "written": [2, 7, 178, 204, 269, 281, 284, 291], "wroker": 254, "wrong": 236, "www": 94, "x": [10, 149, 161, 215, 269, 273], "x3": 282, "y": [149, 186, 215, 218, 222], "ycgco": 218, "ye": 281, "year": 277, "yet": 281, "yield": [8, 9, 149, 153, 154, 222, 244, 245, 249, 252, 254, 255, 257, 259, 263, 265, 266, 267, 270, 273, 276], "yield_valu": [5, 73, 90, 96, 104, 105], "you": [1, 2, 4, 7, 150, 152, 154, 178, 180, 195, 198, 221, 245, 248, 249, 251, 252, 269, 273, 274, 275, 276, 277, 278, 281, 282, 285, 286, 287, 288, 290, 292], "your": [152, 245, 252, 275, 278, 282, 292], "yuta": 277, "yuv": [186, 194, 269], "yuv420": [269, 281], "yuv420p": [172, 177, 187, 209, 241, 269], "yuv422p": 209, "yuv444p": [194, 204, 209, 221], "zero": [9, 270, 273, 285], "zip": [2, 149, 179, 215, 281], "zipfil": 2, "zlib": 278, "zone": 286}, "titles": ["API Reference", "Best Practices", "Data Format and Performance", "Case Studies", "Parallelism and Performance", "API References (C++)", "Examples", "Frequently Asked Questions", "Data formats", "Image dataloading", "Imagenet classification", "Template Class BSF", "Class CPUStorage", "Template Class Codec", "Template Class Decoder", "Class Demuxer", "Template Class Encoder", "Class FilterGraph", "Template Class Frames", "Class InternalError", "Class Muxer", "Class PacketSeries", "Class StreamingDemuxer", "Class TracingSession", "Template Class DecoderImpl", "Template Class EncoderImpl", "Define _IS_VIDEO", "Define _IS_AUDIO", "Define _IS_IMAGE", "Define SPDL_DEFAULT_BUFFER_SIZE", "Directory src", "Directory libspdl", "Directory core", "Enum CodecID", "Enum MediaType", "Enum ElemClass", "File adaptor.h", "File bsf.h", "File buffer.h", "File codec.h", "File conversion.h", "File decoder.h", "File demuxing.h", "File encoder.h", "File filter_graph.h", "File frames.h", "File generator.h", "File muxer.h", "File packets.h", "File storage.h", "File types.h", "File utils.h", "Function spdl::core::cpu_buffer", "Function spdl::core::create_reference_audio_frame", "Template Function spdl::core::convert_frames(const std::vector&lt;const Frames&lt;media&gt; *&gt;&amp;, std::shared_ptr&lt;CPUStorage&gt;)", "Function spdl::core::create_reference_video_frame", "Template Function spdl::core::convert_frames(const Frames&lt;media&gt; *, std::shared_ptr&lt;CPUStorage&gt;)", "Function spdl::core::make_demuxer(const std::string_view, const std::optional&lt;DemuxConfig&gt;&amp;)", "Function spdl::core::make_demuxer(const std::string&amp;, const SourceAdaptorPtr&amp;, const std::optional&lt;DemuxConfig&gt;&amp;)", "Function spdl::core::make_filter_graph", "Template Function spdl::core::clone", "Template Function spdl::core::get_pts", "Function spdl::core::extract_packets_at_indices", "Function spdl::core::get_ffmpeg_filters", "Function spdl::core::get_ffmpeg_versions", "Template Function spdl::core::trace_counter", "Function spdl::core::trace_event_end", "Function spdl::core::set_ffmpeg_log_level", "Function spdl::core::register_avdevices", "Function spdl::core::init_tracing", "Function spdl::core::get_ffmpeg_log_level", "Function spdl::core::trace_event_begin", "Function spdl::core::init_glog", "Full API", "Class Hierarchy", "File Hierarchy", "Namespace spdl", "Namespace spdl::core", "Namespace spdl::core::detail", "Namespace std", "Program Listing for File adaptor.h", "Program Listing for File bsf.h", "Program Listing for File buffer.h", "Program Listing for File codec.h", "Program Listing for File conversion.h", "Program Listing for File decoder.h", "Program Listing for File demuxing.h", "Program Listing for File encoder.h", "Program Listing for File filter_graph.h", "Program Listing for File frames.h", "Program Listing for File generator.h", "Program Listing for File muxer.h", "Program Listing for File packets.h", "Program Listing for File storage.h", "Program Listing for File types.h", "Program Listing for File utils.h", "Libspdl API", "Struct AVRational", "Struct BytesAdaptor", "Struct CPUBuffer", "Struct DataInterface", "Struct DecodeConfig", "Struct DemuxConfig", "Template Struct EncodeConfigBase", "Template Struct Generator", "Struct Generator::promise_type", "Template Struct Packets", "Struct RawPacketData", "Struct SourceAdaptor", "Struct Storage", "Typedef spdl::core::DataInterfacePtr", "Typedef spdl::core::SourceAdaptorPtr", "Typedef spdl::core::CPUBufferPtr", "Typedef spdl::core::ImageCodec", "Typedef spdl::core::AudioCodec", "Typedef spdl::core::VideoCodec", "Typedef spdl::core::DecoderPtr", "Typedef spdl::core::StreamingDemuxerPtr", "Typedef spdl::core::DemuxerPtr", "Typedef spdl::core::AudioEncoderPtr", "Typedef spdl::core::VideoEncoder", "Typedef spdl::core::VideoEncoderPtr", "Typedef spdl::core::AudioEncoder", "Typedef spdl::core::EncoderPtr", "Typedef spdl::core::FilterGraphPtr", "Typedef spdl::core::ImageFramesPtr", "Typedef spdl::core::ImageFrames", "Typedef spdl::core::AudioFrames", "Typedef spdl::core::AudioFramesPtr", "Typedef spdl::core::AnyFrames", "Typedef spdl::core::VideoFramesPtr", "Typedef spdl::core::FramesPtr", "Typedef spdl::core::VideoFrames", "Typedef spdl::core::MuxerPtr", "Typedef spdl::core::PacketSeriesPtr", "Typedef spdl::core::VideoPackets", "Typedef spdl::core::ImagePacketsPtr", "Typedef spdl::core::AudioPackets", "Typedef spdl::core::VideoPacketsPtr", "Typedef spdl::core::PacketsPtr", "Typedef spdl::core::AudioPacketsPtr", "Typedef spdl::core::AnyPackets", "Typedef spdl::core::ImagePackets", "Typedef spdl::core::AudioEncodeConfig", "Typedef AVRational", "Typedef spdl::core::VideoEncodeConfig", "Typedef spdl::core::Rational", "Typedef spdl::core::OptionDict", "Full API", "Multi thread preprocessing", "Performance analysis", "spdl.dataloader", "spdl.dataloader.CacheDataLoader", "spdl.dataloader.DataLoader", "spdl.dataloader.PyTorchDataLoader", "spdl.dataloader.get_pytorch_dataloader", "spdl.io", "spdl.io.AudioCodec", "spdl.io.AudioDecoder", "spdl.io.AudioEncodeConfig", "spdl.io.AudioEncoder", "spdl.io.AudioFrames", "spdl.io.AudioPackets", "spdl.io.BSF", "spdl.io.CPUBuffer", "spdl.io.CPUStorage", "spdl.io.CUDABuffer", "spdl.io.CUDAConfig", "spdl.io.DecodeConfig", "spdl.io.Decoder", "spdl.io.DemuxConfig", "spdl.io.Demuxer", "spdl.io.FilterGraph", "spdl.io.Frames", "spdl.io.ImageCodec", "spdl.io.ImageDecoder", "spdl.io.ImageFrames", "spdl.io.ImagePackets", "spdl.io.Muxer", "spdl.io.NpzFile", "spdl.io.NvDecDecoder", "spdl.io.Packets", "spdl.io.VideoCodec", "spdl.io.VideoDecoder", "spdl.io.VideoEncodeConfig", "spdl.io.VideoEncoder", "spdl.io.VideoFrames", "spdl.io.VideoPackets", "spdl.io.apply_bsf", "spdl.io.audio_encode_config", "spdl.io.convert_array", "spdl.io.convert_frames", "spdl.io.cpu_storage", "spdl.io.create_reference_audio_frame", "spdl.io.create_reference_video_frame", "spdl.io.cuda_config", "spdl.io.decode_config", "spdl.io.decode_image_nvjpeg", "spdl.io.decode_packets", "spdl.io.decode_packets_nvdec", "spdl.io.demux_audio", "spdl.io.demux_config", "spdl.io.demux_image", "spdl.io.demux_video", "spdl.io.encode_image", "spdl.io.get_abuffer_desc", "spdl.io.get_audio_filter_desc", "spdl.io.get_buffer_desc", "spdl.io.get_filter_desc", "spdl.io.get_video_filter_desc", "spdl.io.load_audio", "spdl.io.load_image", "spdl.io.load_image_batch", "spdl.io.load_image_batch_nvjpeg", "spdl.io.load_npy", "spdl.io.load_npz", "spdl.io.load_video", "spdl.io.nv12_to_bgr", "spdl.io.nv12_to_rgb", "spdl.io.nvdec_decoder", "spdl.io.sample_decode_video", "spdl.io.save_image", "spdl.io.streaming_load_video_nvdec", "spdl.io.to_jax", "spdl.io.to_numba", "spdl.io.to_numpy", "spdl.io.to_torch", "spdl.io.transfer_buffer", "spdl.io.transfer_buffer_cpu", "spdl.io.utils", "spdl.io.utils.built_with_cuda", "spdl.io.utils.built_with_nvcodec", "spdl.io.utils.built_with_nvjpeg", "spdl.io.utils.get_ffmpeg_filters", "spdl.io.utils.get_ffmpeg_log_level", "spdl.io.utils.get_ffmpeg_versions", "spdl.io.utils.set_ffmpeg_log_level", "spdl.io.utils.trace_counter", "spdl.io.utils.trace_event", "spdl.io.utils.trace_gc", "spdl.io.utils.tracing", "spdl.io.video_encode_config", "spdl.pipeline", "spdl.pipeline.AsyncQueue", "spdl.pipeline.Pipeline", "spdl.pipeline.PipelineBuilder", "spdl.pipeline.PipelineFailure", "spdl.pipeline.QueuePerfStats", "spdl.pipeline.StatsQueue", "spdl.pipeline.TaskHook", "spdl.pipeline.TaskPerfStats", "spdl.pipeline.TaskStatsHook", "spdl.pipeline.cache_iterator", "spdl.pipeline.create_task", "spdl.pipeline.iterate_in_subprocess", "spdl.pipeline.run_pipeline_in_subprocess", "spdl.source", "spdl.source.IterableWithShuffle", "spdl.source.imagenet", "spdl.source.imagenet.ImageNet", "spdl.source.imagenet.get_mappings", "spdl.source.imagenet.parse_wnid", "spdl.source.local_directory", "spdl.source.local_directory.LocalDirectory", "spdl.source.utils", "spdl.source.utils.MergeIterator", "spdl.source.utils.embed_shuffle", "spdl.source.utils.repeat_source", "Streaming nvdec decoding", "Streaming video processing", "Video dataloading", "Concurrency", "Getting Started", "Building and Running Pipeline", "Collecting Runtime Statistics", "Pipeline Parallelism", "Pipeline Stages", "SPDL (Scalable and Performant Data Loading)", "Installation", "Migration Guide", "Paradigm Shift", "Migrating from PyTorch DataLoader", "Why migrate to SPDL?", "Development Notes", "Implementation detail of Pipeline", "Analyzing the Performance", "Metrics across Ranks", "Headspace Analysis", "Optimization Guide", "Noisy Neighbour", "Resolving the Bottleneck", "Composition of Pipeline", "Overview"], "titleterms": {"By": [36, 38, 39, 43, 45, 46, 48, 49, 50], "NOT": 292, "One": 188, "The": [2, 285], "_is_audio": 27, "_is_imag": 28, "_is_video": 26, "across": 286, "adaptor": [36, 80], "adjust": 290, "after": 266, "an": 275, "analysi": [150, 287], "analyz": 285, "anyfram": 129, "anypacket": 141, "api": [0, 5, 73, 96, 148, 151, 156, 229, 242, 256, 258, 262, 264, 277], "apply_bsf": [156, 188], "around": 7, "ask": 7, "async": [7, 284], "asyncqueu": [242, 243], "audio": [171, 172, 201], "audio_encode_config": [156, 189], "audiocodec": [114, 156, 157], "audiodecod": [156, 158], "audioencod": [122, 156, 160], "audioencodeconfig": [143, 156, 159], "audioencoderptr": 119, "audiofram": [127, 156, 161], "audioframesptr": 128, "audiopacket": [137, 156, 162], "audiopacketsptr": 140, "averag": [285, 286], "avoid": 1, "avrat": [97, 144], "base": [12, 19, 98], "basic": 270, "batch": 281, "best": 1, "bottleneck": 290, "bsf": [11, 37, 81, 156, 163], "buffer": [38, 82, 284], "build": [273, 278], "built_with_cuda": [229, 230], "built_with_nvcodec": [229, 231], "built_with_nvjpeg": [229, 232], "bulk": 244, "bytesadaptor": 98, "c": 5, "cach": 287, "cache_iter": [242, 252], "cachedataload": [151, 152], "call": 273, "case": 3, "caveat": 273, "chang": [2, 196], "class": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73, 74, 77, 78, 96, 150, 270], "classif": 10, "clone": [60, 181], "codec": [13, 39, 83], "codecid": 33, "collect": 274, "combin": 275, "compon": 269, "compos": 1, "composit": 291, "con": 282, "concept": 292, "concurr": [271, 280, 290], "const": [54, 56, 57, 58], "content": 277, "convers": [40, 84], "convert_arrai": [156, 190], "convert_fram": [54, 56, 156, 191], "core": [32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 292], "cpu_buff": 52, "cpu_storag": [156, 192], "cpubuff": [99, 156, 164], "cpubufferptr": 112, "cpustorag": [12, 54, 56, 156, 165], "creat": 1, "create_reference_audio_fram": [53, 156, 193], "create_reference_video_fram": [55, 156, 194], "create_task": [242, 253], "cuda": [192, 195], "cuda_config": [156, 195], "cudabuff": [156, 166], "cudaconfig": [156, 167], "custom": 275, "data": [2, 8, 254, 277, 285, 286], "datainterfac": 100, "datainterfaceptr": 110, "dataload": [9, 151, 152, 153, 154, 155, 270, 281], "dataset": 1, "decid": 287, "decod": [14, 41, 85, 156, 169, 171, 180, 196, 268, 270, 281], "decode_config": [156, 196], "decode_image_nvjpeg": [156, 197], "decode_packet": [156, 198], "decode_packets_nvdec": [156, 199], "decodeconfig": [101, 156, 168], "decoderimpl": 24, "decoderptr": 116, "default": [195, 266, 275], "defin": [26, 27, 28, 29, 45, 50, 73, 96], "definit": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "demux": [15, 42, 86, 156, 171, 188], "demux_audio": [156, 200], "demux_config": [156, 201], "demux_imag": [156, 202], "demux_video": [156, 203], "demuxconfig": [57, 58, 102, 156, 170], "demuxerptr": 118, "depend": 278, "deriv": [108, 109], "detail": [78, 254, 284], "develop": [277, 283], "devic": 178, "directori": [30, 31, 32, 148], "document": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "doe": 7, "download": 286, "dr": [2, 4], "effici": 292, "elemclass": 35, "embed_shuffl": [264, 266], "encod": [16, 43, 87], "encode_imag": [156, 204], "encodeconfigbas": 103, "encoderimpl": 25, "encoderptr": 123, "enum": [33, 34, 35, 50, 73, 77, 96], "estim": 287, "exampl": [2, 6, 163, 169, 171, 172, 178, 180, 181, 188, 192, 196, 201, 205, 207, 235, 237, 238, 240, 244], "execut": 285, "executor": 275, "extract_packets_at_indic": 62, "faster": 192, "ffmpeg": 196, "file": [32, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 75, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 148, 201], "filter": 172, "filter_graph": [44, 88], "filtergraph": [17, 156, 172], "filtergraphptr": 124, "format": [2, 8], "frame": [18, 45, 54, 56, 89, 156, 173], "framesptr": 131, "free": 278, "frequent": 7, "from": [2, 278, 281], "full": [73, 96, 148], "function": [2, 7, 8, 9, 10, 38, 40, 42, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 77, 96, 149, 150, 254, 268, 269, 270, 290], "gain": 287, "gener": [46, 90, 104, 105], "get": [272, 285], "get_abuffer_desc": [156, 205], "get_audio_filter_desc": [156, 206], "get_buffer_desc": [156, 207], "get_ffmpeg_filt": [63, 229, 233], "get_ffmpeg_log_level": [70, 229, 234], "get_ffmpeg_vers": [64, 229, 235], "get_filter_desc": [156, 208], "get_map": [258, 260], "get_pt": 61, "get_pytorch_dataload": [151, 155], "get_video_filter_desc": [156, 209], "gil": 7, "gpu": 270, "guid": [279, 288], "h": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "h264": 196, "headeless": 201, "headspac": 287, "helper": 254, "hierarchi": [74, 75, 96], "hold": 7, "home": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "how": [7, 292], "i": [281, 292], "imag": [9, 244, 281], "imagecodec": [113, 156, 174], "imagedecod": [156, 175], "imagefram": [126, 156, 176], "imageframesptr": 125, "imagenet": [10, 256, 258, 259, 260, 261], "imagepacket": [142, 156, 177], "imagepacketsptr": 136, "implement": [2, 254, 284], "includ": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "inconsist": 4, "increment": 180, "inherit": [12, 19, 98, 108, 109], "init_glog": 72, "init_trac": 69, "input": 172, "instal": 278, "intermedi": 1, "intern": 196, "internalerror": 19, "io": [7, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 284], "iter": [266, 273], "iterablewithshuffl": [256, 257], "iterate_in_subprocess": [242, 254], "keep": 273, "libspdl": [31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 96], "list": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "load": [2, 201, 244, 277], "load_audio": [156, 210], "load_imag": [156, 211], "load_image_batch": [156, 212], "load_image_batch_nvjpeg": [156, 213], "load_npi": [156, 214], "load_npz": [156, 215], "load_video": [156, 216], "local_directori": [256, 262, 263], "localdirectori": [262, 263], "lock": 192, "loop": 284, "make": 1, "make_demux": [57, 58], "make_filter_graph": 59, "maximum": 287, "media": [54, 56, 292], "mediatyp": 34, "memori": [2, 192], "mergeiter": [264, 265], "method": 181, "metric": 286, "migrat": [279, 281, 282], "multi": [149, 275], "multimedia": 172, "multipl": 172, "multiprocess": 4, "muxer": [20, 47, 91, 156, 178], "muxerptr": 133, "namespac": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 73, 76, 77, 78, 79, 96], "neighbour": [4, 289], "nest": [104, 105], "noisi": [4, 289], "note": [181, 269, 276, 277, 283], "npz": 2, "npzfile": [156, 179], "number": [196, 285], "numpi": 2, "nv12_to_bgr": [156, 217], "nv12_to_rgb": [156, 218], "nvdec": 268, "nvdec_decod": [156, 219], "nvdecdecod": [156, 180], "o": [281, 292], "off": 188, "optim": 288, "option": [57, 58, 178, 278], "optiondict": 147, "output": 172, "overview": [151, 156, 229, 242, 256, 258, 262, 264, 292], "packet": [48, 92, 106, 156, 181], "packetseri": 21, "packetseriesptr": 134, "packetsptr": 139, "page": 192, "paradigm": 280, "parallel": [4, 275], "parse_wnid": [258, 261], "passthrough": 172, "pcm": 201, "perform": [2, 4, 150, 277, 281, 285, 292], "pipelin": [4, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 273, 275, 276, 284, 291], "pipelinebuild": [242, 245], "pipelinefailur": [242, 246], "pool": 271, "practic": [1, 2], "preprocess": 149, "pro": 282, "process": [269, 275, 276], "profil": 290, "program": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "promise_typ": 105, "protocol": 178, "put": 285, "pypi": 278, "python": 278, "pytorch": [195, 281], "pytorchdataload": [151, 154], "question": 7, "queue": [284, 285], "queueperfstat": [242, 247, 285], "rank": 286, "ration": 146, "raw": 201, "rawpacketdata": 107, "readi": [285, 286], "refer": [0, 5, 151, 156, 229, 242, 256, 258, 262, 264, 273, 277], "register_avdevic": 68, "relationship": [12, 19, 98, 104, 105, 108, 109], "releas": 7, "repeat_sourc": [264, 267], "requir": 278, "resolv": 290, "restructur": 290, "run": 273, "run_pipeline_in_subprocess": [242, 255], "runner": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "runtim": 274, "sample_decode_video": [156, 220], "sampler": 290, "save_imag": [156, 221], "scalabl": 277, "set_ffmpeg_log_level": [67, 229, 236], "shared_ptr": [54, 56], "shift": 280, "shuffl": 266, "sink": 276, "size": 271, "sourc": [8, 9, 10, 149, 150, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 276, 278], "sourceadaptor": 108, "sourceadaptorptr": [58, 111], "spdl": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 277, 281, 282, 292], "spdl_default_buffer_s": 29, "specifi": [196, 275], "speed": 4, "src": [30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "stage": [271, 275, 276, 290], "start": 272, "state": 269, "statist": 274, "statsqueu": [242, 248], "std": [54, 56, 57, 58, 79], "storag": [49, 93, 109], "stream": [171, 195, 268, 269], "streaming_load_video_nvdec": [156, 222], "streamingdemux": 22, "streamingdemuxerptr": 117, "string": 58, "string_view": 57, "struct": [73, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "structur": [254, 280], "studi": 3, "subdirectori": [30, 31], "subprocess": 275, "summari": [281, 285], "switch": 281, "task": [284, 285], "taskhook": [242, 249], "taskperfstat": [242, 250, 285], "taskstatshook": [242, 251], "templat": [11, 13, 14, 16, 18, 24, 25, 54, 56, 60, 61, 65, 103, 104, 106], "tensor": 1, "thread": [149, 196, 271, 275, 278, 281, 284], "throughput": 285, "time": [285, 286], "tl": [2, 4], "to_jax": [156, 223], "to_numba": [156, 224], "to_numpi": [156, 225], "to_torch": [156, 226], "trace": [229, 240], "trace_count": [65, 229, 237], "trace_ev": [229, 238], "trace_event_begin": 71, "trace_event_end": 66, "trace_gc": [229, 239], "tracer": 290, "tracingsess": 23, "transfer": 192, "transfer_buff": [156, 227], "transfer_buffer_cpu": [156, 228], "trend": 281, "type": [12, 19, 50, 94, 98, 104, 108, 109], "typedef": [36, 38, 39, 41, 42, 43, 44, 45, 47, 48, 50, 73, 77, 96, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "understand": 281, "unnecessari": 273, "us": [192, 195, 270, 292], "usag": 270, "util": [51, 95, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 256, 264, 265, 266, 267], "v": 284, "vector": 54, "video": [172, 180, 269, 270], "video_encode_config": [156, 241], "videocodec": [115, 156, 182], "videodecod": [156, 183], "videoencod": [120, 156, 185], "videoencodeconfig": [145, 156, 184], "videoencoderptr": 121, "videofram": [132, 156, 186], "videoframesptr": 130, "videopacket": [135, 156, 187], "videopacketsptr": 138, "what": [7, 287, 292], "which": 7, "whole": 180, "why": [7, 266, 282], "work": [7, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 287]}})